ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB42:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s 			page 2


  34:Core/Src/main.c **** #define MAX_ITER 100
  35:Core/Src/main.c **** #define SCALE 1000000
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** // for bit shifting in the fixed point arithmetic function
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* USER CODE END PD */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  42:Core/Src/main.c **** /* USER CODE BEGIN PM */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* USER CODE END PM */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE BEGIN PV */
  49:Core/Src/main.c **** //TODO: Define variables you think you might need
  50:Core/Src/main.c **** // - Performance timing variables (e.g execution time, throughput, pixels per second, clock cycles)
  51:Core/Src/main.c **** uint64_t start_time = 0;
  52:Core/Src/main.c **** uint64_t end_time = 0;
  53:Core/Src/main.c **** int imageDimensions[5] = {128, 160, 192, 224, 256};
  54:Core/Src/main.c **** uint64_t checksum = 0;
  55:Core/Src/main.c **** uint64_t execution_time = 0;
  56:Core/Src/main.c **** int initial_height = 128;
  57:Core/Src/main.c **** int initial_width = 128;
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** // arrays for task 1
  60:Core/Src/main.c **** uint64_t timeArray_arithmetic[5] = {0, 0, 0, 0, 0};
  61:Core/Src/main.c **** uint64_t timeArray_double[5] = {0, 0, 0, 0, 0};
  62:Core/Src/main.c **** uint64_t checksumArray_arithmetic[5] = {0, 0, 0, 0, 0};
  63:Core/Src/main.c **** uint64_t checksumArray_double[5] = {0, 0, 0, 0, 0};
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** // arrays for task 2
  66:Core/Src/main.c **** int iterationsArray[5] = {100, 250, 500, 750, 1000};
  67:Core/Src/main.c **** uint64_t task2ArrayChecksum[5][5];
  68:Core/Src/main.c **** uint64_t task2ArrayTime[5][5];
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** // task 7 variables
  71:Core/Src/main.c **** int arrayQ[3] = {10 , 13, 20};		// these values are roughly the binary equivalent of 10^3, 10^4 and
  72:Core/Src/main.c **** uint64_t task7ArrayChecksum[3][5];
  73:Core/Src/main.c **** uint64_t task7ArrayTime[3][5];
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** /* USER CODE END PV */
  76:Core/Src/main.c **** 
  77:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  78:Core/Src/main.c **** void SystemClock_Config(void);
  79:Core/Src/main.c **** static void MX_GPIO_Init(void);
  80:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  81:Core/Src/main.c **** //TODO: Define any function prototypes you might need such as the calculate Mandelbrot function amo
  82:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations, int
  83:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations);
  84:Core/Src/main.c **** void task1(int iter);
  85:Core/Src/main.c **** void task2();
  86:Core/Src/main.c **** void task4();
  87:Core/Src/main.c **** void task7();
  88:Core/Src/main.c **** /* USER CODE END PFP */
  89:Core/Src/main.c **** 
  90:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s 			page 3


  91:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c **** /* USER CODE END 0 */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c **** /**
  96:Core/Src/main.c ****   * @brief  The application entry point.
  97:Core/Src/main.c ****   * @retval int
  98:Core/Src/main.c ****   */
  99:Core/Src/main.c **** int main(void)
 100:Core/Src/main.c **** {
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****   /* USER CODE END 1 */
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 109:Core/Src/main.c ****   HAL_Init();
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   /* USER CODE END Init */
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   /* Configure the system clock */
 116:Core/Src/main.c ****   SystemClock_Config();
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****   /* USER CODE END SysInit */
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   /* Initialize all configured peripherals */
 123:Core/Src/main.c ****   MX_GPIO_Init();
 124:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****   /* USER CODE END 2 */
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****   /* Infinite loop */
 129:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 130:Core/Src/main.c ****   while (1)
 131:Core/Src/main.c ****   {
 132:Core/Src/main.c ****     /* USER CODE END WHILE */
 133:Core/Src/main.c **** 
 134:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 135:Core/Src/main.c **** 	  //TODO: Visual indicator: Turn on LED0 to signal processing start
 136:Core/Src/main.c **** 	  	  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);
 137:Core/Src/main.c **** 
 138:Core/Src/main.c **** 
 139:Core/Src/main.c **** 	  	  //TODO: Benchmark and Profile Performance
 140:Core/Src/main.c **** 	  	  task7();
 141:Core/Src/main.c **** 
 142:Core/Src/main.c **** 
 143:Core/Src/main.c **** 	  	  //TODO: Visual indicator: Turn on LED1 to signal processing start
 144:Core/Src/main.c **** 	  	  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_SET);
 145:Core/Src/main.c **** 
 146:Core/Src/main.c **** 
 147:Core/Src/main.c **** 	  	  //TODO: Keep the LEDs ON for 2s
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s 			page 4


 148:Core/Src/main.c **** 	  	  HAL_Delay(1000);
 149:Core/Src/main.c **** 
 150:Core/Src/main.c **** 	  	  //TODO: Turn OFF LEDs
 151:Core/Src/main.c **** 	  	  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET);
 152:Core/Src/main.c **** 	  	  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 153:Core/Src/main.c **** 
 154:Core/Src/main.c **** 
 155:Core/Src/main.c **** 
 156:Core/Src/main.c ****   }
 157:Core/Src/main.c ****   /* USER CODE END 3 */
 158:Core/Src/main.c **** }
 159:Core/Src/main.c **** 
 160:Core/Src/main.c **** /**
 161:Core/Src/main.c ****   * @brief System Clock Configuration
 162:Core/Src/main.c ****   * @retval None
 163:Core/Src/main.c ****   */
 164:Core/Src/main.c **** void SystemClock_Config(void)
 165:Core/Src/main.c **** {
 166:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 167:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 168:Core/Src/main.c **** 
 169:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 170:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 171:Core/Src/main.c ****   */
 172:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 173:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 174:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 175:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 176:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 177:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL12;
 178:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 179:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 180:Core/Src/main.c ****   {
 181:Core/Src/main.c ****     Error_Handler();
 182:Core/Src/main.c ****   }
 183:Core/Src/main.c **** 
 184:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 185:Core/Src/main.c ****   */
 186:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 187:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 188:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 189:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 190:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 191:Core/Src/main.c **** 
 192:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 193:Core/Src/main.c ****   {
 194:Core/Src/main.c ****     Error_Handler();
 195:Core/Src/main.c ****   }
 196:Core/Src/main.c **** }
 197:Core/Src/main.c **** 
 198:Core/Src/main.c **** /**
 199:Core/Src/main.c ****   * @brief GPIO Initialization Function
 200:Core/Src/main.c ****   * @param None
 201:Core/Src/main.c ****   * @retval None
 202:Core/Src/main.c ****   */
 203:Core/Src/main.c **** static void MX_GPIO_Init(void)
 204:Core/Src/main.c **** {
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s 			page 5


  26              		.loc 1 204 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 10B5     		push	{r4, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 4, -8
  34              		.cfi_offset 14, -4
  35 0002 88B0     		sub	sp, sp, #32
  36              	.LCFI1:
  37              		.cfi_def_cfa_offset 40
 205:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  38              		.loc 1 205 3 view .LVU1
  39              		.loc 1 205 20 is_stmt 0 view .LVU2
  40 0004 1422     		movs	r2, #20
  41 0006 0021     		movs	r1, #0
  42 0008 03A8     		add	r0, sp, #12
  43 000a FFF7FEFF 		bl	memset
  44              	.LVL0:
 206:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 207:Core/Src/main.c **** 
 208:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 209:Core/Src/main.c **** 
 210:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 211:Core/Src/main.c ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  45              		.loc 1 211 3 is_stmt 1 view .LVU3
  46              	.LBB4:
  47              		.loc 1 211 3 view .LVU4
  48              		.loc 1 211 3 view .LVU5
  49 000e 174B     		ldr	r3, .L2
  50 0010 5A69     		ldr	r2, [r3, #20]
  51 0012 8021     		movs	r1, #128
  52 0014 C903     		lsls	r1, r1, #15
  53 0016 0A43     		orrs	r2, r1
  54 0018 5A61     		str	r2, [r3, #20]
  55              		.loc 1 211 3 view .LVU6
  56 001a 5A69     		ldr	r2, [r3, #20]
  57 001c 0A40     		ands	r2, r1
  58 001e 0092     		str	r2, [sp]
  59              		.loc 1 211 3 view .LVU7
  60 0020 009A     		ldr	r2, [sp]
  61              	.LBE4:
  62              		.loc 1 211 3 view .LVU8
 212:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  63              		.loc 1 212 3 view .LVU9
  64              	.LBB5:
  65              		.loc 1 212 3 view .LVU10
  66              		.loc 1 212 3 view .LVU11
  67 0022 5A69     		ldr	r2, [r3, #20]
  68 0024 8021     		movs	r1, #128
  69 0026 C902     		lsls	r1, r1, #11
  70 0028 0A43     		orrs	r2, r1
  71 002a 5A61     		str	r2, [r3, #20]
  72              		.loc 1 212 3 view .LVU12
  73 002c 5A69     		ldr	r2, [r3, #20]
  74 002e 0A40     		ands	r2, r1
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s 			page 6


  75 0030 0192     		str	r2, [sp, #4]
  76              		.loc 1 212 3 view .LVU13
  77 0032 019A     		ldr	r2, [sp, #4]
  78              	.LBE5:
  79              		.loc 1 212 3 view .LVU14
 213:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  80              		.loc 1 213 3 view .LVU15
  81              	.LBB6:
  82              		.loc 1 213 3 view .LVU16
  83              		.loc 1 213 3 view .LVU17
  84 0034 5A69     		ldr	r2, [r3, #20]
  85 0036 8021     		movs	r1, #128
  86 0038 8902     		lsls	r1, r1, #10
  87 003a 0A43     		orrs	r2, r1
  88 003c 5A61     		str	r2, [r3, #20]
  89              		.loc 1 213 3 view .LVU18
  90 003e 5B69     		ldr	r3, [r3, #20]
  91 0040 0B40     		ands	r3, r1
  92 0042 0293     		str	r3, [sp, #8]
  93              		.loc 1 213 3 view .LVU19
  94 0044 029B     		ldr	r3, [sp, #8]
  95              	.LBE6:
  96              		.loc 1 213 3 view .LVU20
 214:Core/Src/main.c **** 
 215:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 216:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
  97              		.loc 1 216 3 view .LVU21
  98 0046 0A4C     		ldr	r4, .L2+4
  99 0048 0022     		movs	r2, #0
 100 004a FF21     		movs	r1, #255
 101 004c 2000     		movs	r0, r4
 102 004e FFF7FEFF 		bl	HAL_GPIO_WritePin
 103              	.LVL1:
 217:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7, GPIO_PIN_RESET);
 218:Core/Src/main.c **** 
 219:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 PB2 PB3
 220:Core/Src/main.c ****                            PB4 PB5 PB6 PB7 */
 221:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 104              		.loc 1 221 3 view .LVU22
 105              		.loc 1 221 23 is_stmt 0 view .LVU23
 106 0052 FF23     		movs	r3, #255
 107 0054 0393     		str	r3, [sp, #12]
 222:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 223:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 108              		.loc 1 223 3 is_stmt 1 view .LVU24
 109              		.loc 1 223 24 is_stmt 0 view .LVU25
 110 0056 FE3B     		subs	r3, r3, #254
 111 0058 0493     		str	r3, [sp, #16]
 224:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 112              		.loc 1 224 3 is_stmt 1 view .LVU26
 113              		.loc 1 224 24 is_stmt 0 view .LVU27
 114 005a 0023     		movs	r3, #0
 115 005c 0593     		str	r3, [sp, #20]
 225:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 116              		.loc 1 225 3 is_stmt 1 view .LVU28
 117              		.loc 1 225 25 is_stmt 0 view .LVU29
 118 005e 0693     		str	r3, [sp, #24]
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s 			page 7


 226:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 119              		.loc 1 226 3 is_stmt 1 view .LVU30
 120 0060 03A9     		add	r1, sp, #12
 121 0062 2000     		movs	r0, r4
 122 0064 FFF7FEFF 		bl	HAL_GPIO_Init
 123              	.LVL2:
 227:Core/Src/main.c **** 
 228:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_2 */
 229:Core/Src/main.c **** 
 230:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
 231:Core/Src/main.c **** }
 124              		.loc 1 231 1 is_stmt 0 view .LVU31
 125 0068 08B0     		add	sp, sp, #32
 126              		@ sp needed
 127 006a 10BD     		pop	{r4, pc}
 128              	.L3:
 129              		.align	2
 130              	.L2:
 131 006c 00100240 		.word	1073876992
 132 0070 00040048 		.word	1207960576
 133              		.cfi_endproc
 134              	.LFE42:
 136              		.global	__aeabi_ldivmod
 137              		.global	__aeabi_lmul
 138              		.section	.text.calculate_mandelbrot_fixed_point_arithmetic,"ax",%progbits
 139              		.align	1
 140              		.global	calculate_mandelbrot_fixed_point_arithmetic
 141              		.syntax unified
 142              		.code	16
 143              		.thumb_func
 145              	calculate_mandelbrot_fixed_point_arithmetic:
 146              	.LVL3:
 147              	.LFB43:
 232:Core/Src/main.c **** 
 233:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 234:Core/Src/main.c **** //TODO: Function signatures you defined previously , implement them here
 235:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations, int
 236:Core/Src/main.c **** {
 148              		.loc 1 236 1 is_stmt 1 view -0
 149              		.cfi_startproc
 150              		@ args = 0, pretend = 0, frame = 104
 151              		@ frame_needed = 0, uses_anonymous_args = 0
 152              		.loc 1 236 1 is_stmt 0 view .LVU33
 153 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 154              	.LCFI2:
 155              		.cfi_def_cfa_offset 20
 156              		.cfi_offset 4, -20
 157              		.cfi_offset 5, -16
 158              		.cfi_offset 6, -12
 159              		.cfi_offset 7, -8
 160              		.cfi_offset 14, -4
 161 0002 DE46     		mov	lr, fp
 162 0004 5746     		mov	r7, r10
 163 0006 4E46     		mov	r6, r9
 164 0008 4546     		mov	r5, r8
 165 000a E0B5     		push	{r5, r6, r7, lr}
 166              	.LCFI3:
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s 			page 8


 167              		.cfi_def_cfa_offset 36
 168              		.cfi_offset 8, -36
 169              		.cfi_offset 9, -32
 170              		.cfi_offset 10, -28
 171              		.cfi_offset 11, -24
 172 000c 9BB0     		sub	sp, sp, #108
 173              	.LCFI4:
 174              		.cfi_def_cfa_offset 144
 175 000e 0700     		movs	r7, r0
 176 0010 1490     		str	r0, [sp, #80]
 177 0012 8946     		mov	r9, r1
 178 0014 0C92     		str	r2, [sp, #48]
 179 0016 9B46     		mov	fp, r3
 237:Core/Src/main.c **** 	int Q = scale;
 180              		.loc 1 237 2 is_stmt 1 view .LVU34
 181              	.LVL4:
 238:Core/Src/main.c **** 	unsigned int ONE = 1 << Q;
 182              		.loc 1 238 2 view .LVU35
 183              		.loc 1 238 23 is_stmt 0 view .LVU36
 184 0018 0122     		movs	r2, #1
 185              	.LVL5:
 186              		.loc 1 238 23 view .LVU37
 187 001a 9A40     		lsls	r2, r2, r3
 188              	.LVL6:
 239:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 189              		.loc 1 239 5 is_stmt 1 view .LVU38
 240:Core/Src/main.c **** 
 241:Core/Src/main.c ****     // This function utilizes bit shifting to decreases the computational costs of division on deci
 242:Core/Src/main.c **** 
 243:Core/Src/main.c ****     // For the initial loop, x and y are zero so instead of computing it and lastly subtracting the
 244:Core/Src/main.c ****     // this code sets the initial starting point to the constant
 245:Core/Src/main.c ****     const int32_t x_left = -( (5 * ONE) / 2 ); // -2.5 as x starting point
 190              		.loc 1 245 5 view .LVU39
 191              		.loc 1 245 34 is_stmt 0 view .LVU40
 192 001c 0523     		movs	r3, #5
 193              	.LVL7:
 194              		.loc 1 245 34 view .LVU41
 195 001e 5946     		mov	r1, fp
 196              	.LVL8:
 197              		.loc 1 245 34 view .LVU42
 198 0020 8B40     		lsls	r3, r3, r1
 199              		.loc 1 245 41 view .LVU43
 200 0022 5B08     		lsrs	r3, r3, #1
 201              		.loc 1 245 28 view .LVU44
 202 0024 5B42     		rsbs	r3, r3, #0
 203 0026 1893     		str	r3, [sp, #96]
 204              	.LVL9:
 246:Core/Src/main.c ****     const int32_t y_top  = -ONE;               // -1.0 as y starting point
 205              		.loc 1 246 5 is_stmt 1 view .LVU45
 206              		.loc 1 246 28 is_stmt 0 view .LVU46
 207 0028 5342     		rsbs	r3, r2, #0
 208              	.LVL10:
 209              		.loc 1 246 28 view .LVU47
 210 002a 0E93     		str	r3, [sp, #56]
 211              	.LVL11:
 247:Core/Src/main.c **** 
 248:Core/Src/main.c ****     // Instead of recomputing x*... and y*..., we just add the multiplication each loop as it would
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s 			page 9


 249:Core/Src/main.c ****     // This way addition uses less computational power than multiplication
 250:Core/Src/main.c ****     const int32_t x_step = (int32_t)(((int64_t)7 * ONE) / (2 * width));			// The 2 in the denominat
 212              		.loc 1 250 5 is_stmt 1 view .LVU48
 213              		.loc 1 250 50 is_stmt 0 view .LVU49
 214 002c 0023     		movs	r3, #0
 215              	.LVL12:
 216              		.loc 1 250 50 view .LVU50
 217 002e 0024     		movs	r4, #0
 218 0030 0093     		str	r3, [sp]
 219 0032 0194     		str	r4, [sp, #4]
 220 0034 0092     		str	r2, [sp]
 221 0036 0193     		str	r3, [sp, #4]
 222 0038 009B     		ldr	r3, [sp]
 223 003a 019C     		ldr	r4, [sp, #4]
 224 003c 590F     		lsrs	r1, r3, #29
 225 003e D800     		lsls	r0, r3, #3
 226              	.LVL13:
 227              		.loc 1 250 50 view .LVU51
 228 0040 C01A     		subs	r0, r0, r3
 229 0042 A141     		sbcs	r1, r1, r4
 230              		.loc 1 250 62 view .LVU52
 231 0044 7A00     		lsls	r2, r7, #1
 232              	.LVL14:
 233              		.loc 1 250 62 view .LVU53
 234 0046 D317     		asrs	r3, r2, #31
 235              		.loc 1 250 57 view .LVU54
 236 0048 FFF7FEFF 		bl	__aeabi_ldivmod
 237              	.LVL15:
 238              		.loc 1 250 19 view .LVU55
 239 004c 1590     		str	r0, [sp, #84]
 240              	.LVL16:
 251:Core/Src/main.c ****     const int32_t y_step = (int32_t)(((int64_t)2 * ONE) / height);				// Bit shift the top before d
 241              		.loc 1 251 5 is_stmt 1 view .LVU56
 242              		.loc 1 251 50 is_stmt 0 view .LVU57
 243 004e 009B     		ldr	r3, [sp]
 244 0050 019C     		ldr	r4, [sp, #4]
 245 0052 1800     		movs	r0, r3
 246              	.LVL17:
 247              		.loc 1 251 50 view .LVU58
 248 0054 2100     		movs	r1, r4
 249              	.LVL18:
 250              		.loc 1 251 50 view .LVU59
 251 0056 C018     		adds	r0, r0, r3
 252 0058 6141     		adcs	r1, r1, r4
 253              		.loc 1 251 57 view .LVU60
 254 005a 4B46     		mov	r3, r9
 255 005c DB17     		asrs	r3, r3, #31
 256 005e 4A46     		mov	r2, r9
 257 0060 FFF7FEFF 		bl	__aeabi_ldivmod
 258              	.LVL19:
 252:Core/Src/main.c **** 
 253:Core/Src/main.c ****     const int32_t FOUR = 4 * ONE;				// for condition in while loop
 259              		.loc 1 253 5 is_stmt 1 view .LVU61
 260              		.loc 1 253 28 is_stmt 0 view .LVU62
 261 0064 0423     		movs	r3, #4
 262 0066 5A46     		mov	r2, fp
 263 0068 9340     		lsls	r3, r3, r2
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s 			page 10


 264 006a 0D93     		str	r3, [sp, #52]
 265              	.LVL20:
 254:Core/Src/main.c **** 
 255:Core/Src/main.c ****     int32_t y0 = y_top;				// starting constant
 266              		.loc 1 255 5 is_stmt 1 view .LVU63
 256:Core/Src/main.c ****     for (int y = 0; y < height; ++y) {
 267              		.loc 1 256 5 view .LVU64
 268              	.LBB7:
 269              		.loc 1 256 10 view .LVU65
 270              		.loc 1 256 14 is_stmt 0 view .LVU66
 271 006c 0023     		movs	r3, #0
 272              	.LVL21:
 273              		.loc 1 256 14 view .LVU67
 274 006e 9A46     		mov	r10, r3
 275              	.LBE7:
 239:Core/Src/main.c **** 
 276              		.loc 1 239 14 view .LVU68
 277 0070 0023     		movs	r3, #0
 278 0072 0024     		movs	r4, #0
 279 0074 1293     		str	r3, [sp, #72]
 280 0076 1394     		str	r4, [sp, #76]
 281 0078 5346     		mov	r3, r10
 282 007a 1693     		str	r3, [sp, #88]
 283 007c 1990     		str	r0, [sp, #100]
 284 007e 4B46     		mov	r3, r9
 285 0080 1793     		str	r3, [sp, #92]
 286 0082 5F46     		mov	r7, fp
 287              	.LVL22:
 288              	.LBB17:
 289              		.loc 1 256 5 view .LVU69
 290 0084 A3E0     		b	.L5
 291              	.LVL23:
 292              	.L6:
 293              	.LBB8:
 294              	.LBB9:
 295              	.LBB10:
 296              	.LBB11:
 257:Core/Src/main.c ****         int32_t x0 = x_left;			// starting constant
 258:Core/Src/main.c **** 
 259:Core/Src/main.c ****         for (int x = 0; x < width; ++x) {
 260:Core/Src/main.c ****             int32_t xi = 0, yi = 0;
 261:Core/Src/main.c ****             int iteration = 0;
 262:Core/Src/main.c **** 
 263:Core/Src/main.c ****             while (iteration < max_iterations) {
 264:Core/Src/main.c ****                 int32_t xi2 = (int32_t)(((int64_t)xi * xi + (1 << (Q - 1))) >> Q);
 297              		.loc 1 264 77 view .LVU70
 298 0086 2023     		movs	r3, #32
 299 0088 4246     		mov	r2, r8
 300 008a 9B1A     		subs	r3, r3, r2
 301 008c 0A00     		movs	r2, r1
 302 008e 9A40     		lsls	r2, r2, r3
 303 0090 1300     		movs	r3, r2
 304 0092 0400     		movs	r4, r0
 305              	.LVL24:
 306              		.loc 1 264 77 view .LVU71
 307 0094 4246     		mov	r2, r8
 308 0096 D440     		lsrs	r4, r4, r2
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s 			page 11


 309 0098 1C43     		orrs	r4, r3
 310 009a 52E0     		b	.L7
 311              	.LVL25:
 312              	.L8:
 265:Core/Src/main.c ****                 int32_t yi2 = (int32_t)(((int64_t)yi * yi + (1 << (Q - 1))) >> Q);
 313              		.loc 1 265 77 view .LVU72
 314 009c 2023     		movs	r3, #32
 315 009e 4246     		mov	r2, r8
 316 00a0 9B1A     		subs	r3, r3, r2
 317 00a2 0A00     		movs	r2, r1
 318 00a4 9A40     		lsls	r2, r2, r3
 319 00a6 1300     		movs	r3, r2
 320 00a8 4246     		mov	r2, r8
 321 00aa D040     		lsrs	r0, r0, r2
 322 00ac 1843     		orrs	r0, r3
 323 00ae 57E0     		b	.L9
 324              	.LVL26:
 325              	.L21:
 266:Core/Src/main.c **** 
 267:Core/Src/main.c ****                 // after calculating square values for this loop check if condition is still met
 268:Core/Src/main.c ****                 if ((int64_t)xi2 + yi2 > FOUR) break;
 326              		.loc 1 268 20 view .LVU73
 327 00b0 8A42     		cmp	r2, r1
 328 00b2 67D9     		bls	.L19
 329              	.LVL27:
 330              	.L10:
 331              		.loc 1 268 20 view .LVU74
 332              	.LBE11:
 269:Core/Src/main.c **** 
 270:Core/Src/main.c ****                 int32_t temp = xi2 - yi2 + x0;
 271:Core/Src/main.c **** 
 272:Core/Src/main.c ****                 // Q is 2^16, so Q-1 = 2^15 to account for 2*xi*yi
 273:Core/Src/main.c ****                 yi = (int32_t)(((int64_t)xi * yi + (1 << (Q - 2))) >> (Q - 1)) + y0;
 274:Core/Src/main.c ****                 xi = temp;           // following mandelbrot.py
 275:Core/Src/main.c **** 
 276:Core/Src/main.c ****                 ++iteration;
 277:Core/Src/main.c ****             }
 278:Core/Src/main.c **** 
 279:Core/Src/main.c ****             mandelbrot_sum += iteration;
 333              		.loc 1 279 13 is_stmt 1 view .LVU75
 334              		.loc 1 279 28 is_stmt 0 view .LVU76
 335 00b4 009B     		ldr	r3, [sp]
 336 00b6 1093     		str	r3, [sp, #64]
 337 00b8 DB17     		asrs	r3, r3, #31
 338 00ba 1193     		str	r3, [sp, #68]
 339 00bc 129B     		ldr	r3, [sp, #72]
 340 00be 139C     		ldr	r4, [sp, #76]
 341 00c0 1099     		ldr	r1, [sp, #64]
 342 00c2 119A     		ldr	r2, [sp, #68]
 343 00c4 5B18     		adds	r3, r3, r1
 344 00c6 5441     		adcs	r4, r4, r2
 345 00c8 1293     		str	r3, [sp, #72]
 346 00ca 1394     		str	r4, [sp, #76]
 347              	.LVL28:
 280:Core/Src/main.c ****             x0 += x_step; // add step instead of multiplying new x value
 348              		.loc 1 280 13 is_stmt 1 view .LVU77
 349              		.loc 1 280 16 is_stmt 0 view .LVU78
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s 			page 12


 350 00cc 0B9B     		ldr	r3, [sp, #44]
 351              	.LVL29:
 352              		.loc 1 280 16 view .LVU79
 353 00ce 159A     		ldr	r2, [sp, #84]
 354 00d0 9446     		mov	ip, r2
 355 00d2 6344     		add	r3, r3, ip
 356 00d4 0B93     		str	r3, [sp, #44]
 357              	.LVL30:
 358              		.loc 1 280 16 view .LVU80
 359              	.LBE10:
 259:Core/Src/main.c ****             int32_t xi = 0, yi = 0;
 360              		.loc 1 259 36 is_stmt 1 discriminator 2 view .LVU81
 361 00d6 0F9B     		ldr	r3, [sp, #60]
 362              	.LVL31:
 259:Core/Src/main.c ****             int32_t xi = 0, yi = 0;
 363              		.loc 1 259 36 is_stmt 0 discriminator 2 view .LVU82
 364 00d8 0133     		adds	r3, r3, #1
 365 00da 0F93     		str	r3, [sp, #60]
 366              	.LVL32:
 367              	.L16:
 259:Core/Src/main.c ****             int32_t xi = 0, yi = 0;
 368              		.loc 1 259 27 is_stmt 1 discriminator 1 view .LVU83
 369 00dc 0F9B     		ldr	r3, [sp, #60]
 370 00de 149A     		ldr	r2, [sp, #80]
 371 00e0 9342     		cmp	r3, r2
 372 00e2 6BDA     		bge	.L20
 373              	.LBB14:
 261:Core/Src/main.c **** 
 374              		.loc 1 261 17 is_stmt 0 view .LVU84
 375 00e4 0023     		movs	r3, #0
 376 00e6 0093     		str	r3, [sp]
 260:Core/Src/main.c ****             int iteration = 0;
 377              		.loc 1 260 29 view .LVU85
 378 00e8 0027     		movs	r7, #0
 260:Core/Src/main.c ****             int iteration = 0;
 379              		.loc 1 260 21 view .LVU86
 380 00ea 0024     		movs	r4, #0
 381 00ec 0DE0     		b	.L15
 382              	.LVL33:
 383              	.L12:
 384              	.LBB12:
 273:Core/Src/main.c ****                 xi = temp;           // following mandelbrot.py
 385              		.loc 1 273 68 view .LVU87
 386 00ee 2023     		movs	r3, #32
 387 00f0 4A46     		mov	r2, r9
 388 00f2 9B1A     		subs	r3, r3, r2
 389 00f4 0A00     		movs	r2, r1
 390 00f6 9A40     		lsls	r2, r2, r3
 391 00f8 1300     		movs	r3, r2
 392 00fa 4A46     		mov	r2, r9
 393 00fc D040     		lsrs	r0, r0, r2
 394 00fe 1843     		orrs	r0, r3
 395              	.L13:
 273:Core/Src/main.c ****                 xi = temp;           // following mandelbrot.py
 396              		.loc 1 273 20 view .LVU88
 397 0100 0E9B     		ldr	r3, [sp, #56]
 398 0102 C718     		adds	r7, r0, r3
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s 			page 13


 399              	.LVL34:
 274:Core/Src/main.c **** 
 400              		.loc 1 274 17 is_stmt 1 view .LVU89
 276:Core/Src/main.c ****             }
 401              		.loc 1 276 17 view .LVU90
 402 0104 009B     		ldr	r3, [sp]
 403 0106 0133     		adds	r3, r3, #1
 404 0108 0093     		str	r3, [sp]
 405              	.LVL35:
 406              	.L15:
 276:Core/Src/main.c ****             }
 407              		.loc 1 276 17 is_stmt 0 view .LVU91
 408              	.LBE12:
 263:Core/Src/main.c ****                 int32_t xi2 = (int32_t)(((int64_t)xi * xi + (1 << (Q - 1))) >> Q);
 409              		.loc 1 263 30 is_stmt 1 view .LVU92
 410 010a 009B     		ldr	r3, [sp]
 411 010c 0C9A     		ldr	r2, [sp, #48]
 412 010e 9342     		cmp	r3, r2
 413 0110 D0DA     		bge	.L10
 414              	.LBB13:
 264:Core/Src/main.c ****                 int32_t yi2 = (int32_t)(((int64_t)yi * yi + (1 << (Q - 1))) >> Q);
 415              		.loc 1 264 17 view .LVU93
 264:Core/Src/main.c ****                 int32_t yi2 = (int32_t)(((int64_t)yi * yi + (1 << (Q - 1))) >> Q);
 416              		.loc 1 264 42 is_stmt 0 view .LVU94
 417 0112 0994     		str	r4, [sp, #36]
 418 0114 E317     		asrs	r3, r4, #31
 419 0116 9A46     		mov	r10, r3
 264:Core/Src/main.c ****                 int32_t yi2 = (int32_t)(((int64_t)yi * yi + (1 << (Q - 1))) >> Q);
 420              		.loc 1 264 54 view .LVU95
 421 0118 2200     		movs	r2, r4
 422 011a 2000     		movs	r0, r4
 423 011c 1900     		movs	r1, r3
 424 011e FFF7FEFF 		bl	__aeabi_lmul
 425              	.LVL36:
 264:Core/Src/main.c ****                 int32_t yi2 = (int32_t)(((int64_t)yi * yi + (1 << (Q - 1))) >> Q);
 426              		.loc 1 264 70 view .LVU96
 427 0122 0123     		movs	r3, #1
 428              	.LVL37:
 264:Core/Src/main.c ****                 int32_t yi2 = (int32_t)(((int64_t)yi * yi + (1 << (Q - 1))) >> Q);
 429              		.loc 1 264 70 view .LVU97
 430 0124 5B42     		rsbs	r3, r3, #0
 431              	.LVL38:
 264:Core/Src/main.c ****                 int32_t yi2 = (int32_t)(((int64_t)yi * yi + (1 << (Q - 1))) >> Q);
 432              		.loc 1 264 70 view .LVU98
 433 0126 4344     		add	r3, r3, r8
 434 0128 9946     		mov	r9, r3
 264:Core/Src/main.c ****                 int32_t yi2 = (int32_t)(((int64_t)yi * yi + (1 << (Q - 1))) >> Q);
 435              		.loc 1 264 64 view .LVU99
 436 012a 0123     		movs	r3, #1
 437              	.LVL39:
 264:Core/Src/main.c ****                 int32_t yi2 = (int32_t)(((int64_t)yi * yi + (1 << (Q - 1))) >> Q);
 438              		.loc 1 264 64 view .LVU100
 439 012c 4A46     		mov	r2, r9
 440 012e 9340     		lsls	r3, r3, r2
 441              	.LVL40:
 264:Core/Src/main.c ****                 int32_t yi2 = (int32_t)(((int64_t)yi * yi + (1 << (Q - 1))) >> Q);
 442              		.loc 1 264 64 view .LVU101
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s 			page 14


 443 0130 1D00     		movs	r5, r3
 444 0132 DE17     		asrs	r6, r3, #31
 264:Core/Src/main.c ****                 int32_t yi2 = (int32_t)(((int64_t)yi * yi + (1 << (Q - 1))) >> Q);
 445              		.loc 1 264 59 view .LVU102
 446 0134 4019     		adds	r0, r0, r5
 447 0136 7141     		adcs	r1, r1, r6
 264:Core/Src/main.c ****                 int32_t yi2 = (int32_t)(((int64_t)yi * yi + (1 << (Q - 1))) >> Q);
 448              		.loc 1 264 77 view .LVU103
 449 0138 4346     		mov	r3, r8
 450 013a 203B     		subs	r3, r3, #32
 451 013c A3D4     		bmi	.L6
 452 013e 0C00     		movs	r4, r1
 453              	.LVL41:
 264:Core/Src/main.c ****                 int32_t yi2 = (int32_t)(((int64_t)yi * yi + (1 << (Q - 1))) >> Q);
 454              		.loc 1 264 77 view .LVU104
 455 0140 1C41     		asrs	r4, r4, r3
 456              	.L7:
 457              	.LVL42:
 265:Core/Src/main.c **** 
 458              		.loc 1 265 17 is_stmt 1 view .LVU105
 265:Core/Src/main.c **** 
 459              		.loc 1 265 42 is_stmt 0 view .LVU106
 460 0142 0A97     		str	r7, [sp, #40]
 461 0144 FB17     		asrs	r3, r7, #31
 462 0146 9B46     		mov	fp, r3
 265:Core/Src/main.c **** 
 463              		.loc 1 265 54 view .LVU107
 464 0148 3A00     		movs	r2, r7
 465 014a 3800     		movs	r0, r7
 466 014c 1900     		movs	r1, r3
 467 014e FFF7FEFF 		bl	__aeabi_lmul
 468              	.LVL43:
 265:Core/Src/main.c **** 
 469              		.loc 1 265 59 view .LVU108
 470 0152 4019     		adds	r0, r0, r5
 471 0154 7141     		adcs	r1, r1, r6
 265:Core/Src/main.c **** 
 472              		.loc 1 265 77 view .LVU109
 473 0156 4346     		mov	r3, r8
 474 0158 203B     		subs	r3, r3, #32
 475 015a 9FD4     		bmi	.L8
 265:Core/Src/main.c **** 
 476              		.loc 1 265 77 view .LVU110
 477 015c 0800     		movs	r0, r1
 478 015e 1841     		asrs	r0, r0, r3
 479              	.L9:
 265:Core/Src/main.c **** 
 480              		.loc 1 265 25 view .LVU111
 481 0160 8446     		mov	ip, r0
 482              	.LVL44:
 268:Core/Src/main.c **** 
 483              		.loc 1 268 17 is_stmt 1 view .LVU112
 268:Core/Src/main.c **** 
 484              		.loc 1 268 21 is_stmt 0 view .LVU113
 485 0162 0294     		str	r4, [sp, #8]
 486 0164 E317     		asrs	r3, r4, #31
 487 0166 0393     		str	r3, [sp, #12]
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s 			page 15


 268:Core/Src/main.c **** 
 488              		.loc 1 268 34 view .LVU114
 489 0168 0490     		str	r0, [sp, #16]
 490 016a C317     		asrs	r3, r0, #31
 491 016c 0593     		str	r3, [sp, #20]
 492 016e 049A     		ldr	r2, [sp, #16]
 493 0170 059B     		ldr	r3, [sp, #20]
 494 0172 0298     		ldr	r0, [sp, #8]
 495 0174 0399     		ldr	r1, [sp, #12]
 496              	.LVL45:
 268:Core/Src/main.c **** 
 497              		.loc 1 268 34 view .LVU115
 498 0176 1218     		adds	r2, r2, r0
 499 0178 4B41     		adcs	r3, r3, r1
 268:Core/Src/main.c **** 
 500              		.loc 1 268 40 view .LVU116
 501 017a 0D99     		ldr	r1, [sp, #52]
 502 017c CF17     		asrs	r7, r1, #31
 503              	.LVL46:
 268:Core/Src/main.c **** 
 504              		.loc 1 268 20 view .LVU117
 505 017e BB42     		cmp	r3, r7
 506 0180 98DC     		bgt	.L10
 268:Core/Src/main.c **** 
 507              		.loc 1 268 20 view .LVU118
 508 0182 95D0     		beq	.L21
 509              	.L19:
 270:Core/Src/main.c **** 
 510              		.loc 1 270 17 is_stmt 1 view .LVU119
 270:Core/Src/main.c **** 
 511              		.loc 1 270 36 is_stmt 0 view .LVU120
 512 0184 6346     		mov	r3, ip
 513 0186 E41A     		subs	r4, r4, r3
 514              	.LVL47:
 270:Core/Src/main.c **** 
 515              		.loc 1 270 25 view .LVU121
 516 0188 0B9B     		ldr	r3, [sp, #44]
 517 018a 9C46     		mov	ip, r3
 518              	.LVL48:
 270:Core/Src/main.c **** 
 519              		.loc 1 270 25 view .LVU122
 520 018c 6444     		add	r4, r4, ip
 521              	.LVL49:
 273:Core/Src/main.c ****                 xi = temp;           // following mandelbrot.py
 522              		.loc 1 273 17 is_stmt 1 view .LVU123
 273:Core/Src/main.c ****                 xi = temp;           // following mandelbrot.py
 523              		.loc 1 273 45 is_stmt 0 view .LVU124
 524 018e 0A9A     		ldr	r2, [sp, #40]
 525 0190 5B46     		mov	r3, fp
 526 0192 0998     		ldr	r0, [sp, #36]
 527 0194 5146     		mov	r1, r10
 528 0196 FFF7FEFF 		bl	__aeabi_lmul
 529              	.LVL50:
 273:Core/Src/main.c ****                 xi = temp;           // following mandelbrot.py
 530              		.loc 1 273 61 view .LVU125
 531 019a 4346     		mov	r3, r8
 532 019c 9A1E     		subs	r2, r3, #2
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s 			page 16


 273:Core/Src/main.c ****                 xi = temp;           // following mandelbrot.py
 533              		.loc 1 273 55 view .LVU126
 534 019e 0123     		movs	r3, #1
 535              	.LVL51:
 273:Core/Src/main.c ****                 xi = temp;           // following mandelbrot.py
 536              		.loc 1 273 55 view .LVU127
 537 01a0 9340     		lsls	r3, r3, r2
 538              	.LVL52:
 273:Core/Src/main.c ****                 xi = temp;           // following mandelbrot.py
 539              		.loc 1 273 55 view .LVU128
 540 01a2 0693     		str	r3, [sp, #24]
 541 01a4 DB17     		asrs	r3, r3, #31
 542 01a6 0793     		str	r3, [sp, #28]
 273:Core/Src/main.c ****                 xi = temp;           // following mandelbrot.py
 543              		.loc 1 273 50 view .LVU129
 544 01a8 069A     		ldr	r2, [sp, #24]
 545 01aa 079B     		ldr	r3, [sp, #28]
 546 01ac 8018     		adds	r0, r0, r2
 547 01ae 5941     		adcs	r1, r1, r3
 273:Core/Src/main.c ****                 xi = temp;           // following mandelbrot.py
 548              		.loc 1 273 68 view .LVU130
 549 01b0 4B46     		mov	r3, r9
 550 01b2 203B     		subs	r3, r3, #32
 551 01b4 9BD4     		bmi	.L12
 552 01b6 0800     		movs	r0, r1
 553 01b8 1841     		asrs	r0, r0, r3
 554 01ba A1E7     		b	.L13
 555              	.LVL53:
 556              	.L20:
 273:Core/Src/main.c ****                 xi = temp;           // following mandelbrot.py
 557              		.loc 1 273 68 view .LVU131
 558              	.LBE13:
 559              	.LBE14:
 560              	.LBE9:
 281:Core/Src/main.c ****         }
 282:Core/Src/main.c ****         y0 += y_step;     // add step instead of multiplying new y value
 561              		.loc 1 282 12 view .LVU132
 562 01bc 4746     		mov	r7, r8
 563              		.loc 1 282 9 is_stmt 1 view .LVU133
 564              		.loc 1 282 12 is_stmt 0 view .LVU134
 565 01be 0E9B     		ldr	r3, [sp, #56]
 566              	.LVL54:
 567              		.loc 1 282 12 view .LVU135
 568 01c0 199A     		ldr	r2, [sp, #100]
 569 01c2 9446     		mov	ip, r2
 570 01c4 6344     		add	r3, r3, ip
 571 01c6 0E93     		str	r3, [sp, #56]
 572              	.LVL55:
 573              		.loc 1 282 12 view .LVU136
 574              	.LBE8:
 256:Core/Src/main.c ****         int32_t x0 = x_left;			// starting constant
 575              		.loc 1 256 33 is_stmt 1 discriminator 2 view .LVU137
 576 01c8 169B     		ldr	r3, [sp, #88]
 577              	.LVL56:
 256:Core/Src/main.c ****         int32_t x0 = x_left;			// starting constant
 578              		.loc 1 256 33 is_stmt 0 discriminator 2 view .LVU138
 579 01ca 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s 			page 17


 580 01cc 1693     		str	r3, [sp, #88]
 581              	.LVL57:
 582              	.L5:
 256:Core/Src/main.c ****         int32_t x0 = x_left;			// starting constant
 583              		.loc 1 256 23 is_stmt 1 discriminator 1 view .LVU139
 584 01ce 169B     		ldr	r3, [sp, #88]
 585 01d0 179A     		ldr	r2, [sp, #92]
 586 01d2 9342     		cmp	r3, r2
 587 01d4 05DA     		bge	.L22
 588              	.LBB16:
 257:Core/Src/main.c **** 
 589              		.loc 1 257 17 is_stmt 0 view .LVU140
 590 01d6 189B     		ldr	r3, [sp, #96]
 591 01d8 0B93     		str	r3, [sp, #44]
 592              	.LBB15:
 259:Core/Src/main.c ****             int32_t xi = 0, yi = 0;
 593              		.loc 1 259 18 view .LVU141
 594 01da 0023     		movs	r3, #0
 595 01dc 0F93     		str	r3, [sp, #60]
 596 01de B846     		mov	r8, r7
 597 01e0 7CE7     		b	.L16
 598              	.LVL58:
 599              	.L22:
 259:Core/Src/main.c ****             int32_t xi = 0, yi = 0;
 600              		.loc 1 259 18 view .LVU142
 601              	.LBE15:
 602              	.LBE16:
 603              	.LBE17:
 283:Core/Src/main.c ****     }
 284:Core/Src/main.c **** 
 285:Core/Src/main.c ****     return mandelbrot_sum;
 604              		.loc 1 285 5 is_stmt 1 view .LVU143
 286:Core/Src/main.c **** }
 605              		.loc 1 286 1 is_stmt 0 view .LVU144
 606 01e2 1298     		ldr	r0, [sp, #72]
 607 01e4 1399     		ldr	r1, [sp, #76]
 608 01e6 1BB0     		add	sp, sp, #108
 609              		@ sp needed
 610              	.LVL59:
 611              		.loc 1 286 1 view .LVU145
 612 01e8 F0BC     		pop	{r4, r5, r6, r7}
 613 01ea BB46     		mov	fp, r7
 614 01ec B246     		mov	r10, r6
 615 01ee A946     		mov	r9, r5
 616 01f0 A046     		mov	r8, r4
 617 01f2 F0BD     		pop	{r4, r5, r6, r7, pc}
 618              		.cfi_endproc
 619              	.LFE43:
 621              		.global	__aeabi_i2d
 622              		.global	__aeabi_ddiv
 623              		.global	__aeabi_dmul
 624              		.global	__aeabi_dsub
 625              		.global	__aeabi_dadd
 626              		.global	__aeabi_dcmpgt
 627              		.section	.text.calculate_mandelbrot_double,"ax",%progbits
 628              		.align	1
 629              		.global	calculate_mandelbrot_double
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s 			page 18


 630              		.syntax unified
 631              		.code	16
 632              		.thumb_func
 634              	calculate_mandelbrot_double:
 635              	.LVL60:
 636              	.LFB44:
 287:Core/Src/main.c **** 
 288:Core/Src/main.c **** 
 289:Core/Src/main.c **** //TODO: Mandelbroat using variable type double
 290:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations)
 291:Core/Src/main.c **** {
 637              		.loc 1 291 1 is_stmt 1 view -0
 638              		.cfi_startproc
 639              		@ args = 0, pretend = 0, frame = 64
 640              		@ frame_needed = 0, uses_anonymous_args = 0
 641              		.loc 1 291 1 is_stmt 0 view .LVU147
 642 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 643              	.LCFI5:
 644              		.cfi_def_cfa_offset 20
 645              		.cfi_offset 4, -20
 646              		.cfi_offset 5, -16
 647              		.cfi_offset 6, -12
 648              		.cfi_offset 7, -8
 649              		.cfi_offset 14, -4
 650 0002 DE46     		mov	lr, fp
 651 0004 5746     		mov	r7, r10
 652 0006 4E46     		mov	r6, r9
 653 0008 4546     		mov	r5, r8
 654 000a E0B5     		push	{r5, r6, r7, lr}
 655              	.LCFI6:
 656              		.cfi_def_cfa_offset 36
 657              		.cfi_offset 8, -36
 658              		.cfi_offset 9, -32
 659              		.cfi_offset 10, -28
 660              		.cfi_offset 11, -24
 661 000c 91B0     		sub	sp, sp, #68
 662              	.LCFI7:
 663              		.cfi_def_cfa_offset 104
 664 000e 8346     		mov	fp, r0
 665 0010 0F91     		str	r1, [sp, #60]
 666 0012 9146     		mov	r9, r2
 292:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 667              		.loc 1 292 5 is_stmt 1 view .LVU148
 668              	.LVL61:
 293:Core/Src/main.c ****     //TODO: Complete the function implementation
 294:Core/Src/main.c ****     checksum = 0;
 669              		.loc 1 294 5 view .LVU149
 670              		.loc 1 294 14 is_stmt 0 view .LVU150
 671 0014 5749     		ldr	r1, .L34
 672              	.LVL62:
 673              		.loc 1 294 14 view .LVU151
 674 0016 0022     		movs	r2, #0
 675              	.LVL63:
 676              		.loc 1 294 14 view .LVU152
 677 0018 0023     		movs	r3, #0
 678 001a 0A60     		str	r2, [r1]
 679 001c 4B60     		str	r3, [r1, #4]
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s 			page 19


 295:Core/Src/main.c ****     for (int y = 0; y < height; y++)
 680              		.loc 1 295 5 is_stmt 1 view .LVU153
 681              	.LBB18:
 682              		.loc 1 295 10 view .LVU154
 683              	.LVL64:
 684              		.loc 1 295 14 is_stmt 0 view .LVU155
 685 001e 0023     		movs	r3, #0
 686 0020 0E93     		str	r3, [sp, #56]
 687              	.LBE18:
 292:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 688              		.loc 1 292 14 view .LVU156
 689 0022 0023     		movs	r3, #0
 690 0024 0024     		movs	r4, #0
 691 0026 0C93     		str	r3, [sp, #48]
 692 0028 0D94     		str	r4, [sp, #52]
 693 002a 4B46     		mov	r3, r9
 694 002c 0593     		str	r3, [sp, #20]
 695              	.LBB25:
 696              		.loc 1 295 5 view .LVU157
 697 002e 8DE0     		b	.L24
 698              	.LVL65:
 699              	.L31:
 700              	.LBB19:
 701              	.LBB20:
 702              	.LBB21:
 296:Core/Src/main.c ****     {
 297:Core/Src/main.c ****     	for (int x = 0; x < width ; x++)
 298:Core/Src/main.c ****     	{
 299:Core/Src/main.c ****     		double x_0 = ((double)x/width)*3.5 - 2.5;
 300:Core/Src/main.c ****     		double y_0 = (double)y/height * 2.0 - 1.0;
 301:Core/Src/main.c **** 
 302:Core/Src/main.c ****     		double x_i = 0;
 303:Core/Src/main.c ****     		double y_i = 0;
 304:Core/Src/main.c ****     		int iteration = 0;
 305:Core/Src/main.c **** 
 306:Core/Src/main.c **** 
 307:Core/Src/main.c ****     		while (iteration < max_iterations)
 308:Core/Src/main.c ****     		{
 309:Core/Src/main.c **** 
 310:Core/Src/main.c ****     			double x_i_sq = x_i*x_i;
 311:Core/Src/main.c ****     			double y_i_sq = y_i*y_i;
 312:Core/Src/main.c **** 
 313:Core/Src/main.c ****     			if(x_i_sq + y_i_sq > 4.0)
 314:Core/Src/main.c ****     			{
 315:Core/Src/main.c ****     				break;
 316:Core/Src/main.c ****     			}
 317:Core/Src/main.c ****     			double temp  = x_i_sq - y_i_sq;
 703              		.loc 1 317 8 is_stmt 1 view .LVU158
 704              		.loc 1 317 15 is_stmt 0 view .LVU159
 705 0030 029A     		ldr	r2, [sp, #8]
 706 0032 039B     		ldr	r3, [sp, #12]
 707 0034 0098     		ldr	r0, [sp]
 708 0036 0199     		ldr	r1, [sp, #4]
 709 0038 FFF7FEFF 		bl	__aeabi_dsub
 710              	.LVL66:
 711 003c 0090     		str	r0, [sp]
 712 003e 0191     		str	r1, [sp, #4]
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s 			page 20


 713              	.LVL67:
 318:Core/Src/main.c ****     			y_i = 2.0*x_i*y_i + y_0;
 714              		.loc 1 318 8 is_stmt 1 view .LVU160
 715              		.loc 1 318 17 is_stmt 0 view .LVU161
 716 0040 3200     		movs	r2, r6
 717 0042 3B00     		movs	r3, r7
 718 0044 3000     		movs	r0, r6
 719              	.LVL68:
 720              		.loc 1 318 17 view .LVU162
 721 0046 3900     		movs	r1, r7
 722 0048 FFF7FEFF 		bl	__aeabi_dadd
 723              	.LVL69:
 724              		.loc 1 318 21 view .LVU163
 725 004c 2200     		movs	r2, r4
 726 004e 2B00     		movs	r3, r5
 727 0050 FFF7FEFF 		bl	__aeabi_dmul
 728              	.LVL70:
 729              		.loc 1 318 12 view .LVU164
 730 0054 089A     		ldr	r2, [sp, #32]
 731 0056 099B     		ldr	r3, [sp, #36]
 732 0058 FFF7FEFF 		bl	__aeabi_dadd
 733              	.LVL71:
 734 005c 0400     		movs	r4, r0
 735              	.LVL72:
 736              		.loc 1 318 12 view .LVU165
 737 005e 0D00     		movs	r5, r1
 738              	.LVL73:
 319:Core/Src/main.c **** 
 320:Core/Src/main.c ****     			x_i = temp + x_0;
 739              		.loc 1 320 8 is_stmt 1 view .LVU166
 740              		.loc 1 320 12 is_stmt 0 view .LVU167
 741 0060 009A     		ldr	r2, [sp]
 742 0062 019B     		ldr	r3, [sp, #4]
 743 0064 0698     		ldr	r0, [sp, #24]
 744 0066 0799     		ldr	r1, [sp, #28]
 745 0068 FFF7FEFF 		bl	__aeabi_dadd
 746              	.LVL74:
 747 006c 0600     		movs	r6, r0
 748              	.LVL75:
 749              		.loc 1 320 12 view .LVU168
 750 006e 0F00     		movs	r7, r1
 751              	.LVL76:
 321:Core/Src/main.c **** 
 322:Core/Src/main.c ****     			iteration = iteration +1;
 752              		.loc 1 322 8 is_stmt 1 view .LVU169
 753              		.loc 1 322 18 is_stmt 0 view .LVU170
 754 0070 0123     		movs	r3, #1
 755 0072 9C46     		mov	ip, r3
 756 0074 E044     		add	r8, r8, ip
 757              	.LVL77:
 758              	.L25:
 759              		.loc 1 322 18 view .LVU171
 760              	.LBE21:
 307:Core/Src/main.c ****     		{
 761              		.loc 1 307 24 is_stmt 1 view .LVU172
 762 0076 059B     		ldr	r3, [sp, #20]
 763 0078 9845     		cmp	r8, r3
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s 			page 21


 764 007a 1BDA     		bge	.L26
 765              	.LBB22:
 310:Core/Src/main.c ****     			double y_i_sq = y_i*y_i;
 766              		.loc 1 310 8 view .LVU173
 310:Core/Src/main.c ****     			double y_i_sq = y_i*y_i;
 767              		.loc 1 310 15 is_stmt 0 view .LVU174
 768 007c 3200     		movs	r2, r6
 769 007e 3B00     		movs	r3, r7
 770 0080 3000     		movs	r0, r6
 771 0082 3900     		movs	r1, r7
 772 0084 FFF7FEFF 		bl	__aeabi_dmul
 773              	.LVL78:
 774 0088 0090     		str	r0, [sp]
 775 008a 0191     		str	r1, [sp, #4]
 776              	.LVL79:
 311:Core/Src/main.c **** 
 777              		.loc 1 311 8 is_stmt 1 view .LVU175
 311:Core/Src/main.c **** 
 778              		.loc 1 311 15 is_stmt 0 view .LVU176
 779 008c 2200     		movs	r2, r4
 780 008e 2B00     		movs	r3, r5
 781 0090 2000     		movs	r0, r4
 782              	.LVL80:
 311:Core/Src/main.c **** 
 783              		.loc 1 311 15 view .LVU177
 784 0092 2900     		movs	r1, r5
 785 0094 FFF7FEFF 		bl	__aeabi_dmul
 786              	.LVL81:
 787 0098 0200     		movs	r2, r0
 788 009a 0B00     		movs	r3, r1
 789              	.LVL82:
 313:Core/Src/main.c ****     			{
 790              		.loc 1 313 8 is_stmt 1 view .LVU178
 313:Core/Src/main.c ****     			{
 791              		.loc 1 313 18 is_stmt 0 view .LVU179
 792 009c 0292     		str	r2, [sp, #8]
 793 009e 0393     		str	r3, [sp, #12]
 794 00a0 0098     		ldr	r0, [sp]
 795 00a2 0199     		ldr	r1, [sp, #4]
 796 00a4 FFF7FEFF 		bl	__aeabi_dadd
 797              	.LVL83:
 313:Core/Src/main.c ****     			{
 798              		.loc 1 313 10 view .LVU180
 799 00a8 0022     		movs	r2, #0
 800 00aa 334B     		ldr	r3, .L34+4
 801 00ac FFF7FEFF 		bl	__aeabi_dcmpgt
 802              	.LVL84:
 803 00b0 0028     		cmp	r0, #0
 804 00b2 BDD0     		beq	.L31
 805              	.LVL85:
 806              	.L26:
 313:Core/Src/main.c ****     			{
 807              		.loc 1 313 10 view .LVU181
 808              	.LBE22:
 323:Core/Src/main.c **** 
 324:Core/Src/main.c ****     		}
 325:Core/Src/main.c **** 
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s 			page 22


 326:Core/Src/main.c ****     		mandelbrot_sum = mandelbrot_sum + iteration;
 809              		.loc 1 326 39 view .LVU182
 810 00b4 4346     		mov	r3, r8
 811              		.loc 1 326 7 is_stmt 1 view .LVU183
 812              		.loc 1 326 39 is_stmt 0 view .LVU184
 813 00b6 0A93     		str	r3, [sp, #40]
 814 00b8 DB17     		asrs	r3, r3, #31
 815 00ba 0B93     		str	r3, [sp, #44]
 816              		.loc 1 326 22 view .LVU185
 817 00bc 0C9B     		ldr	r3, [sp, #48]
 818 00be 0D9C     		ldr	r4, [sp, #52]
 819 00c0 0A99     		ldr	r1, [sp, #40]
 820 00c2 0B9A     		ldr	r2, [sp, #44]
 821 00c4 5B18     		adds	r3, r3, r1
 822 00c6 5441     		adcs	r4, r4, r2
 823 00c8 0C93     		str	r3, [sp, #48]
 824 00ca 0D94     		str	r4, [sp, #52]
 825              	.LVL86:
 826              		.loc 1 326 22 view .LVU186
 827              	.LBE20:
 297:Core/Src/main.c ****     	{
 828              		.loc 1 297 35 is_stmt 1 discriminator 2 view .LVU187
 829 00cc 0123     		movs	r3, #1
 830              	.LVL87:
 297:Core/Src/main.c ****     	{
 831              		.loc 1 297 35 is_stmt 0 discriminator 2 view .LVU188
 832 00ce 9C46     		mov	ip, r3
 833 00d0 E344     		add	fp, fp, ip
 834              	.LVL88:
 835              	.L29:
 297:Core/Src/main.c ****     	{
 836              		.loc 1 297 24 is_stmt 1 discriminator 1 view .LVU189
 837 00d2 CB45     		cmp	fp, r9
 838 00d4 36DA     		bge	.L32
 839              	.LBB23:
 299:Core/Src/main.c ****     		double y_0 = (double)y/height * 2.0 - 1.0;
 840              		.loc 1 299 7 view .LVU190
 299:Core/Src/main.c ****     		double y_0 = (double)y/height * 2.0 - 1.0;
 841              		.loc 1 299 21 is_stmt 0 view .LVU191
 842 00d6 5846     		mov	r0, fp
 843 00d8 FFF7FEFF 		bl	__aeabi_i2d
 844              	.LVL89:
 845 00dc 0400     		movs	r4, r0
 846 00de 0D00     		movs	r5, r1
 299:Core/Src/main.c ****     		double y_0 = (double)y/height * 2.0 - 1.0;
 847              		.loc 1 299 30 view .LVU192
 848 00e0 4846     		mov	r0, r9
 849 00e2 FFF7FEFF 		bl	__aeabi_i2d
 850              	.LVL90:
 851 00e6 0200     		movs	r2, r0
 852 00e8 0B00     		movs	r3, r1
 853 00ea 2000     		movs	r0, r4
 854 00ec 2900     		movs	r1, r5
 855 00ee FFF7FEFF 		bl	__aeabi_ddiv
 856              	.LVL91:
 299:Core/Src/main.c ****     		double y_0 = (double)y/height * 2.0 - 1.0;
 857              		.loc 1 299 37 view .LVU193
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s 			page 23


 858 00f2 0022     		movs	r2, #0
 859 00f4 214B     		ldr	r3, .L34+8
 860 00f6 FFF7FEFF 		bl	__aeabi_dmul
 861              	.LVL92:
 299:Core/Src/main.c ****     		double y_0 = (double)y/height * 2.0 - 1.0;
 862              		.loc 1 299 14 view .LVU194
 863 00fa 0022     		movs	r2, #0
 864 00fc 204B     		ldr	r3, .L34+12
 865 00fe FFF7FEFF 		bl	__aeabi_dsub
 866              	.LVL93:
 867 0102 0690     		str	r0, [sp, #24]
 868 0104 0791     		str	r1, [sp, #28]
 869              	.LVL94:
 300:Core/Src/main.c **** 
 870              		.loc 1 300 7 is_stmt 1 view .LVU195
 300:Core/Src/main.c **** 
 871              		.loc 1 300 20 is_stmt 0 view .LVU196
 872 0106 0E98     		ldr	r0, [sp, #56]
 873              	.LVL95:
 300:Core/Src/main.c **** 
 874              		.loc 1 300 20 view .LVU197
 875 0108 FFF7FEFF 		bl	__aeabi_i2d
 876              	.LVL96:
 877 010c 0400     		movs	r4, r0
 878 010e 0D00     		movs	r5, r1
 300:Core/Src/main.c **** 
 879              		.loc 1 300 29 view .LVU198
 880 0110 5046     		mov	r0, r10
 881 0112 FFF7FEFF 		bl	__aeabi_i2d
 882              	.LVL97:
 883 0116 0200     		movs	r2, r0
 884 0118 0B00     		movs	r3, r1
 885 011a 2000     		movs	r0, r4
 886 011c 2900     		movs	r1, r5
 887 011e FFF7FEFF 		bl	__aeabi_ddiv
 888              	.LVL98:
 300:Core/Src/main.c **** 
 889              		.loc 1 300 37 view .LVU199
 890 0122 0200     		movs	r2, r0
 891 0124 0B00     		movs	r3, r1
 892 0126 FFF7FEFF 		bl	__aeabi_dadd
 893              	.LVL99:
 300:Core/Src/main.c **** 
 894              		.loc 1 300 14 view .LVU200
 895 012a 0022     		movs	r2, #0
 896 012c 154B     		ldr	r3, .L34+16
 897 012e FFF7FEFF 		bl	__aeabi_dsub
 898              	.LVL100:
 899 0132 0890     		str	r0, [sp, #32]
 900 0134 0991     		str	r1, [sp, #36]
 901              	.LVL101:
 302:Core/Src/main.c ****     		double y_i = 0;
 902              		.loc 1 302 7 is_stmt 1 view .LVU201
 303:Core/Src/main.c ****     		int iteration = 0;
 903              		.loc 1 303 7 view .LVU202
 304:Core/Src/main.c **** 
 904              		.loc 1 304 7 view .LVU203
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s 			page 24


 307:Core/Src/main.c ****     		{
 905              		.loc 1 307 7 view .LVU204
 304:Core/Src/main.c **** 
 906              		.loc 1 304 11 is_stmt 0 view .LVU205
 907 0136 0023     		movs	r3, #0
 303:Core/Src/main.c ****     		int iteration = 0;
 908              		.loc 1 303 14 view .LVU206
 909 0138 0024     		movs	r4, #0
 910 013a 0025     		movs	r5, #0
 302:Core/Src/main.c ****     		double y_i = 0;
 911              		.loc 1 302 14 view .LVU207
 912 013c 2600     		movs	r6, r4
 913 013e 2F00     		movs	r7, r5
 914 0140 9846     		mov	r8, r3
 307:Core/Src/main.c ****     		{
 915              		.loc 1 307 13 view .LVU208
 916 0142 98E7     		b	.L25
 917              	.LVL102:
 918              	.L32:
 307:Core/Src/main.c ****     		{
 919              		.loc 1 307 13 view .LVU209
 920              	.LBE23:
 921              	.LBE19:
 295:Core/Src/main.c ****     {
 922              		.loc 1 295 34 discriminator 2 view .LVU210
 923 0144 CB46     		mov	fp, r9
 924              	.LVL103:
 295:Core/Src/main.c ****     {
 925              		.loc 1 295 34 is_stmt 1 discriminator 2 view .LVU211
 926 0146 0E9B     		ldr	r3, [sp, #56]
 927 0148 0133     		adds	r3, r3, #1
 928 014a 0E93     		str	r3, [sp, #56]
 929              	.LVL104:
 930              	.L24:
 295:Core/Src/main.c ****     {
 931              		.loc 1 295 23 discriminator 1 view .LVU212
 932 014c 0E9B     		ldr	r3, [sp, #56]
 933 014e 0F9A     		ldr	r2, [sp, #60]
 934 0150 9342     		cmp	r3, r2
 935 0152 05DA     		bge	.L33
 936              	.LBB24:
 297:Core/Src/main.c ****     	{
 937              		.loc 1 297 15 is_stmt 0 view .LVU213
 938 0154 0023     		movs	r3, #0
 939 0156 D946     		mov	r9, fp
 940 0158 9B46     		mov	fp, r3
 941              	.LVL105:
 297:Core/Src/main.c ****     	{
 942              		.loc 1 297 15 view .LVU214
 943 015a 0F9B     		ldr	r3, [sp, #60]
 944 015c 9A46     		mov	r10, r3
 945 015e B8E7     		b	.L29
 946              	.LVL106:
 947              	.L33:
 297:Core/Src/main.c ****     	{
 948              		.loc 1 297 15 view .LVU215
 949              	.LBE24:
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s 			page 25


 950              	.LBE25:
 327:Core/Src/main.c **** 
 328:Core/Src/main.c ****     	}
 329:Core/Src/main.c ****     }
 330:Core/Src/main.c ****     //checksum = mandelbrot_sum;
 331:Core/Src/main.c ****     return mandelbrot_sum;
 951              		.loc 1 331 5 is_stmt 1 view .LVU216
 332:Core/Src/main.c **** }
 952              		.loc 1 332 1 is_stmt 0 view .LVU217
 953 0160 0C98     		ldr	r0, [sp, #48]
 954 0162 0D99     		ldr	r1, [sp, #52]
 955 0164 11B0     		add	sp, sp, #68
 956              		@ sp needed
 957              	.LVL107:
 958              		.loc 1 332 1 view .LVU218
 959 0166 F0BC     		pop	{r4, r5, r6, r7}
 960 0168 BB46     		mov	fp, r7
 961 016a B246     		mov	r10, r6
 962 016c A946     		mov	r9, r5
 963 016e A046     		mov	r8, r4
 964 0170 F0BD     		pop	{r4, r5, r6, r7, pc}
 965              	.L35:
 966 0172 C046     		.align	2
 967              	.L34:
 968 0174 00000000 		.word	checksum
 969 0178 00001040 		.word	1074790400
 970 017c 00000C40 		.word	1074528256
 971 0180 00000440 		.word	1074003968
 972 0184 0000F03F 		.word	1072693248
 973              		.cfi_endproc
 974              	.LFE44:
 976              		.section	.text.task1,"ax",%progbits
 977              		.align	1
 978              		.global	task1
 979              		.syntax unified
 980              		.code	16
 981              		.thumb_func
 983              	task1:
 984              	.LVL108:
 985              	.LFB45:
 333:Core/Src/main.c **** 
 334:Core/Src/main.c **** // ================================================================================================
 335:Core/Src/main.c **** /*
 336:Core/Src/main.c ****  * This function accepts a max iteration size and performs Practical 1B Mandelbrot function
 337:Core/Src/main.c ****  * It performs the experiment for all image sizes
 338:Core/Src/main.c ****  * It also performs both test methods (fixed point arithmetic and double)
 339:Core/Src/main.c ****  */
 340:Core/Src/main.c **** void task1(int iter) {
 986              		.loc 1 340 22 is_stmt 1 view -0
 987              		.cfi_startproc
 988              		@ args = 0, pretend = 0, frame = 0
 989              		@ frame_needed = 0, uses_anonymous_args = 0
 990              		.loc 1 340 22 is_stmt 0 view .LVU220
 991 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 992              	.LCFI8:
 993              		.cfi_def_cfa_offset 24
 994              		.cfi_offset 3, -24
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s 			page 26


 995              		.cfi_offset 4, -20
 996              		.cfi_offset 5, -16
 997              		.cfi_offset 6, -12
 998              		.cfi_offset 7, -8
 999              		.cfi_offset 14, -4
 1000 0002 DE46     		mov	lr, fp
 1001 0004 5746     		mov	r7, r10
 1002 0006 4E46     		mov	r6, r9
 1003 0008 4546     		mov	r5, r8
 1004 000a E0B5     		push	{r5, r6, r7, lr}
 1005              	.LCFI9:
 1006              		.cfi_def_cfa_offset 40
 1007              		.cfi_offset 8, -40
 1008              		.cfi_offset 9, -36
 1009              		.cfi_offset 10, -32
 1010              		.cfi_offset 11, -28
 1011 000c 8246     		mov	r10, r0
 341:Core/Src/main.c **** 	// loop through image sizes while performing fixed point arithmetic
 342:Core/Src/main.c **** 	for (int i=0; i<5; i++) {
 1012              		.loc 1 342 2 is_stmt 1 view .LVU221
 1013              	.LBB26:
 1014              		.loc 1 342 7 view .LVU222
 1015              	.LVL109:
 1016              		.loc 1 342 11 is_stmt 0 view .LVU223
 1017 000e 0023     		movs	r3, #0
 1018 0010 9846     		mov	r8, r3
 1019              		.loc 1 342 2 view .LVU224
 1020 0012 36E0     		b	.L37
 1021              	.LVL110:
 1022              	.L38:
 343:Core/Src/main.c **** 		  start_time = HAL_GetTick();
 1023              		.loc 1 343 5 is_stmt 1 view .LVU225
 1024              		.loc 1 343 18 is_stmt 0 view .LVU226
 1025 0014 FFF7FEFF 		bl	HAL_GetTick
 1026              	.LVL111:
 1027              		.loc 1 343 16 discriminator 1 view .LVU227
 1028 0018 3B4B     		ldr	r3, .L41
 1029 001a 9B46     		mov	fp, r3
 1030 001c 1860     		str	r0, [r3]
 1031 001e 0023     		movs	r3, #0
 1032 0020 5A46     		mov	r2, fp
 1033 0022 5360     		str	r3, [r2, #4]
 344:Core/Src/main.c **** 
 345:Core/Src/main.c **** 		  checksum = calculate_mandelbrot_fixed_point_arithmetic(imageDimensions[i], imageDimensions[i], 
 1034              		.loc 1 345 5 is_stmt 1 view .LVU228
 1035              		.loc 1 345 16 is_stmt 0 view .LVU229
 1036 0024 394B     		ldr	r3, .L41+4
 1037 0026 4246     		mov	r2, r8
 1038 0028 9200     		lsls	r2, r2, #2
 1039 002a D058     		ldr	r0, [r2, r3]
 1040 002c 1023     		movs	r3, #16
 1041 002e 5246     		mov	r2, r10
 1042 0030 0100     		movs	r1, r0
 1043 0032 FFF7FEFF 		bl	calculate_mandelbrot_fixed_point_arithmetic
 1044              	.LVL112:
 1045              		.loc 1 345 14 discriminator 1 view .LVU230
 1046 0036 364B     		ldr	r3, .L41+8
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s 			page 27


 1047 0038 9946     		mov	r9, r3
 1048 003a 1860     		str	r0, [r3]
 1049 003c 5960     		str	r1, [r3, #4]
 346:Core/Src/main.c **** 
 347:Core/Src/main.c **** 		  end_time = HAL_GetTick();
 1050              		.loc 1 347 5 is_stmt 1 view .LVU231
 1051              		.loc 1 347 16 is_stmt 0 view .LVU232
 1052 003e FFF7FEFF 		bl	HAL_GetTick
 1053              	.LVL113:
 1054              		.loc 1 347 16 discriminator 1 view .LVU233
 1055 0042 0400     		movs	r4, r0
 1056 0044 0025     		movs	r5, #0
 1057              		.loc 1 347 14 discriminator 1 view .LVU234
 1058 0046 334B     		ldr	r3, .L41+12
 1059 0048 1C60     		str	r4, [r3]
 1060 004a 5D60     		str	r5, [r3, #4]
 348:Core/Src/main.c **** 
 349:Core/Src/main.c **** 		  execution_time = end_time - start_time;
 1061              		.loc 1 349 5 is_stmt 1 view .LVU235
 1062              		.loc 1 349 31 is_stmt 0 view .LVU236
 1063 004c 5B46     		mov	r3, fp
 1064 004e 1A68     		ldr	r2, [r3]
 1065 0050 5B68     		ldr	r3, [r3, #4]
 1066 0052 2900     		movs	r1, r5
 1067 0054 801A     		subs	r0, r0, r2
 1068 0056 9941     		sbcs	r1, r1, r3
 1069 0058 0200     		movs	r2, r0
 1070 005a 0B00     		movs	r3, r1
 1071              		.loc 1 349 20 view .LVU237
 1072 005c 2E49     		ldr	r1, .L41+16
 1073 005e 0A60     		str	r2, [r1]
 1074 0060 4B60     		str	r3, [r1, #4]
 350:Core/Src/main.c **** 		  timeArray_arithmetic[i] = execution_time;
 1075              		.loc 1 350 5 is_stmt 1 view .LVU238
 1076              		.loc 1 350 29 is_stmt 0 view .LVU239
 1077 0062 2E49     		ldr	r1, .L41+20
 1078 0064 4046     		mov	r0, r8
 1079 0066 C000     		lsls	r0, r0, #3
 1080 0068 0918     		adds	r1, r1, r0
 1081 006a 0A60     		str	r2, [r1]
 1082 006c 4B60     		str	r3, [r1, #4]
 351:Core/Src/main.c **** 		  checksumArray_arithmetic[i] = checksum;
 1083              		.loc 1 351 5 is_stmt 1 view .LVU240
 1084              		.loc 1 351 33 is_stmt 0 view .LVU241
 1085 006e 2C49     		ldr	r1, .L41+24
 1086 0070 0918     		adds	r1, r1, r0
 1087 0072 4B46     		mov	r3, r9
 1088 0074 1A68     		ldr	r2, [r3]
 1089 0076 5B68     		ldr	r3, [r3, #4]
 1090 0078 0A60     		str	r2, [r1]
 1091 007a 4B60     		str	r3, [r1, #4]
 342:Core/Src/main.c **** 		  start_time = HAL_GetTick();
 1092              		.loc 1 342 22 is_stmt 1 discriminator 3 view .LVU242
 1093 007c 0123     		movs	r3, #1
 1094 007e 9C46     		mov	ip, r3
 1095 0080 E044     		add	r8, r8, ip
 1096              	.LVL114:
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s 			page 28


 1097              	.L37:
 342:Core/Src/main.c **** 		  start_time = HAL_GetTick();
 1098              		.loc 1 342 17 discriminator 1 view .LVU243
 1099 0082 4346     		mov	r3, r8
 1100 0084 042B     		cmp	r3, #4
 1101 0086 C5DD     		ble	.L38
 1102              	.LBE26:
 1103              	.LBB27:
 352:Core/Src/main.c **** 	}
 353:Core/Src/main.c **** 
 354:Core/Src/main.c **** 	// loop through image sizes while performing double precision
 355:Core/Src/main.c **** 	for (int i=0; i<5; i++) {
 1104              		.loc 1 355 11 is_stmt 0 view .LVU244
 1105 0088 0023     		movs	r3, #0
 1106 008a 9846     		mov	r8, r3
 1107              	.LVL115:
 1108              		.loc 1 355 11 view .LVU245
 1109 008c 33E0     		b	.L39
 1110              	.LVL116:
 1111              	.L40:
 356:Core/Src/main.c **** 		  start_time = HAL_GetTick();
 1112              		.loc 1 356 5 is_stmt 1 view .LVU246
 1113              		.loc 1 356 18 is_stmt 0 view .LVU247
 1114 008e FFF7FEFF 		bl	HAL_GetTick
 1115              	.LVL117:
 1116              		.loc 1 356 16 discriminator 1 view .LVU248
 1117 0092 1D4C     		ldr	r4, .L41
 1118 0094 2060     		str	r0, [r4]
 1119 0096 0023     		movs	r3, #0
 1120 0098 6360     		str	r3, [r4, #4]
 357:Core/Src/main.c **** 
 358:Core/Src/main.c **** 		  checksum = calculate_mandelbrot_double(imageDimensions[i], imageDimensions[i], iter);
 1121              		.loc 1 358 5 is_stmt 1 view .LVU249
 1122              		.loc 1 358 16 is_stmt 0 view .LVU250
 1123 009a 1C4B     		ldr	r3, .L41+4
 1124 009c 4246     		mov	r2, r8
 1125 009e 9200     		lsls	r2, r2, #2
 1126 00a0 D058     		ldr	r0, [r2, r3]
 1127 00a2 5246     		mov	r2, r10
 1128 00a4 0100     		movs	r1, r0
 1129 00a6 FFF7FEFF 		bl	calculate_mandelbrot_double
 1130              	.LVL118:
 1131              		.loc 1 358 14 discriminator 1 view .LVU251
 1132 00aa 194B     		ldr	r3, .L41+8
 1133 00ac 9946     		mov	r9, r3
 1134 00ae 1860     		str	r0, [r3]
 1135 00b0 5960     		str	r1, [r3, #4]
 359:Core/Src/main.c **** 
 360:Core/Src/main.c **** 		  end_time = HAL_GetTick();
 1136              		.loc 1 360 5 is_stmt 1 view .LVU252
 1137              		.loc 1 360 16 is_stmt 0 view .LVU253
 1138 00b2 FFF7FEFF 		bl	HAL_GetTick
 1139              	.LVL119:
 1140              		.loc 1 360 16 discriminator 1 view .LVU254
 1141 00b6 0600     		movs	r6, r0
 1142 00b8 0027     		movs	r7, #0
 1143              		.loc 1 360 14 discriminator 1 view .LVU255
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s 			page 29


 1144 00ba 164B     		ldr	r3, .L41+12
 1145 00bc 1E60     		str	r6, [r3]
 1146 00be 5F60     		str	r7, [r3, #4]
 361:Core/Src/main.c **** 
 362:Core/Src/main.c **** 		  execution_time = end_time - start_time;
 1147              		.loc 1 362 5 is_stmt 1 view .LVU256
 1148              		.loc 1 362 31 is_stmt 0 view .LVU257
 1149 00c0 6568     		ldr	r5, [r4, #4]
 1150 00c2 2468     		ldr	r4, [r4]
 1151 00c4 0200     		movs	r2, r0
 1152 00c6 3B00     		movs	r3, r7
 1153 00c8 121B     		subs	r2, r2, r4
 1154 00ca AB41     		sbcs	r3, r3, r5
 1155 00cc 1400     		movs	r4, r2
 1156 00ce 1D00     		movs	r5, r3
 1157              		.loc 1 362 20 view .LVU258
 1158 00d0 114B     		ldr	r3, .L41+16
 1159 00d2 1C60     		str	r4, [r3]
 1160 00d4 5D60     		str	r5, [r3, #4]
 363:Core/Src/main.c **** 		  timeArray_double[i] = execution_time;
 1161              		.loc 1 363 5 is_stmt 1 view .LVU259
 1162              		.loc 1 363 25 is_stmt 0 view .LVU260
 1163 00d6 134B     		ldr	r3, .L41+28
 1164 00d8 4246     		mov	r2, r8
 1165 00da D200     		lsls	r2, r2, #3
 1166 00dc 9B18     		adds	r3, r3, r2
 1167 00de 1C60     		str	r4, [r3]
 1168 00e0 5D60     		str	r5, [r3, #4]
 364:Core/Src/main.c **** 		  checksumArray_double[i] = checksum;
 1169              		.loc 1 364 5 is_stmt 1 view .LVU261
 1170              		.loc 1 364 29 is_stmt 0 view .LVU262
 1171 00e2 114B     		ldr	r3, .L41+32
 1172 00e4 9B18     		adds	r3, r3, r2
 1173 00e6 4A46     		mov	r2, r9
 1174 00e8 1468     		ldr	r4, [r2]
 1175 00ea 5568     		ldr	r5, [r2, #4]
 1176 00ec 1C60     		str	r4, [r3]
 1177 00ee 5D60     		str	r5, [r3, #4]
 355:Core/Src/main.c **** 		  start_time = HAL_GetTick();
 1178              		.loc 1 355 22 is_stmt 1 discriminator 3 view .LVU263
 1179 00f0 0123     		movs	r3, #1
 1180 00f2 9C46     		mov	ip, r3
 1181 00f4 E044     		add	r8, r8, ip
 1182              	.LVL120:
 1183              	.L39:
 355:Core/Src/main.c **** 		  start_time = HAL_GetTick();
 1184              		.loc 1 355 17 discriminator 1 view .LVU264
 1185 00f6 4346     		mov	r3, r8
 1186 00f8 042B     		cmp	r3, #4
 1187 00fa C8DD     		ble	.L40
 1188              	.LBE27:
 365:Core/Src/main.c **** 		}
 366:Core/Src/main.c **** }
 1189              		.loc 1 366 1 is_stmt 0 view .LVU265
 1190              		@ sp needed
 1191              	.LVL121:
 1192              	.LVL122:
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s 			page 30


 1193              		.loc 1 366 1 view .LVU266
 1194 00fc F0BC     		pop	{r4, r5, r6, r7}
 1195 00fe BB46     		mov	fp, r7
 1196 0100 B246     		mov	r10, r6
 1197 0102 A946     		mov	r9, r5
 1198 0104 A046     		mov	r8, r4
 1199 0106 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1200              	.L42:
 1201              		.align	2
 1202              	.L41:
 1203 0108 00000000 		.word	start_time
 1204 010c 00000000 		.word	imageDimensions
 1205 0110 00000000 		.word	checksum
 1206 0114 00000000 		.word	end_time
 1207 0118 00000000 		.word	execution_time
 1208 011c 00000000 		.word	timeArray_arithmetic
 1209 0120 00000000 		.word	checksumArray_arithmetic
 1210 0124 00000000 		.word	timeArray_double
 1211 0128 00000000 		.word	checksumArray_double
 1212              		.cfi_endproc
 1213              	.LFE45:
 1215              		.section	.text.task2,"ax",%progbits
 1216              		.align	1
 1217              		.global	task2
 1218              		.syntax unified
 1219              		.code	16
 1220              		.thumb_func
 1222              	task2:
 1223              	.LFB46:
 367:Core/Src/main.c **** 
 368:Core/Src/main.c **** // ================================================================================================
 369:Core/Src/main.c **** /*
 370:Core/Src/main.c ****  * This method executes task 2 by performing the Mandelbrot function using the double method
 371:Core/Src/main.c ****  * It performs the function with varying max iterations sizes 100, 250, 500, 750, 1000
 372:Core/Src/main.c ****  */
 373:Core/Src/main.c **** void task2() {
 1224              		.loc 1 373 14 is_stmt 1 view -0
 1225              		.cfi_startproc
 1226              		@ args = 0, pretend = 0, frame = 0
 1227              		@ frame_needed = 0, uses_anonymous_args = 0
 1228 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1229              	.LCFI10:
 1230              		.cfi_def_cfa_offset 20
 1231              		.cfi_offset 4, -20
 1232              		.cfi_offset 5, -16
 1233              		.cfi_offset 6, -12
 1234              		.cfi_offset 7, -8
 1235              		.cfi_offset 14, -4
 1236 0002 D646     		mov	lr, r10
 1237 0004 4F46     		mov	r7, r9
 1238 0006 4646     		mov	r6, r8
 1239 0008 C0B5     		push	{r6, r7, lr}
 1240              	.LCFI11:
 1241              		.cfi_def_cfa_offset 32
 1242              		.cfi_offset 8, -32
 1243              		.cfi_offset 9, -28
 1244              		.cfi_offset 10, -24
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s 			page 31


 374:Core/Src/main.c **** 	// for looping through iteration sizes
 375:Core/Src/main.c **** 	for (int j = 0; j<5; j++) {
 1245              		.loc 1 375 2 view .LVU268
 1246              	.LBB28:
 1247              		.loc 1 375 7 view .LVU269
 1248              	.LVL123:
 1249              		.loc 1 375 11 is_stmt 0 view .LVU270
 1250 000a 0023     		movs	r3, #0
 1251 000c 9946     		mov	r9, r3
 1252              		.loc 1 375 2 view .LVU271
 1253 000e 3BE0     		b	.L44
 1254              	.LVL124:
 1255              	.L45:
 1256              	.LBB29:
 376:Core/Src/main.c **** 
 377:Core/Src/main.c **** 		// for looping through image sizes
 378:Core/Src/main.c **** 		for (int i=0; i<5; i++) {
 379:Core/Src/main.c **** 			  start_time = HAL_GetTick();
 1257              		.loc 1 379 6 is_stmt 1 view .LVU272
 1258              		.loc 1 379 19 is_stmt 0 view .LVU273
 1259 0010 FFF7FEFF 		bl	HAL_GetTick
 1260              	.LVL125:
 1261              		.loc 1 379 17 discriminator 1 view .LVU274
 1262 0014 214B     		ldr	r3, .L49
 1263 0016 9A46     		mov	r10, r3
 1264 0018 1860     		str	r0, [r3]
 1265 001a 0023     		movs	r3, #0
 1266 001c 5246     		mov	r2, r10
 1267 001e 5360     		str	r3, [r2, #4]
 380:Core/Src/main.c **** 
 381:Core/Src/main.c **** 			  // Can change to fixed point arithmetic is comparison between that data is needed
 382:Core/Src/main.c **** 			  checksum = calculate_mandelbrot_double(imageDimensions[i], imageDimensions[i], iterationsArray
 1268              		.loc 1 382 6 is_stmt 1 view .LVU275
 1269              		.loc 1 382 17 is_stmt 0 view .LVU276
 1270 0020 1F4B     		ldr	r3, .L49+4
 1271 0022 AA00     		lsls	r2, r5, #2
 1272 0024 D058     		ldr	r0, [r2, r3]
 1273 0026 1F4B     		ldr	r3, .L49+8
 1274 0028 4A46     		mov	r2, r9
 1275 002a 9400     		lsls	r4, r2, #2
 1276 002c E258     		ldr	r2, [r4, r3]
 1277 002e 0100     		movs	r1, r0
 1278 0030 FFF7FEFF 		bl	calculate_mandelbrot_double
 1279              	.LVL126:
 1280              		.loc 1 382 15 discriminator 1 view .LVU277
 1281 0034 1C4B     		ldr	r3, .L49+12
 1282 0036 9846     		mov	r8, r3
 1283 0038 1860     		str	r0, [r3]
 1284 003a 5960     		str	r1, [r3, #4]
 383:Core/Src/main.c **** 
 384:Core/Src/main.c **** 			  end_time = HAL_GetTick();
 1285              		.loc 1 384 6 is_stmt 1 view .LVU278
 1286              		.loc 1 384 17 is_stmt 0 view .LVU279
 1287 003c FFF7FEFF 		bl	HAL_GetTick
 1288              	.LVL127:
 1289              		.loc 1 384 17 discriminator 1 view .LVU280
 1290 0040 0600     		movs	r6, r0
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s 			page 32


 1291 0042 0027     		movs	r7, #0
 1292              		.loc 1 384 15 discriminator 1 view .LVU281
 1293 0044 194B     		ldr	r3, .L49+16
 1294 0046 1E60     		str	r6, [r3]
 1295 0048 5F60     		str	r7, [r3, #4]
 385:Core/Src/main.c **** 
 386:Core/Src/main.c **** 			  execution_time = end_time - start_time;
 1296              		.loc 1 386 6 is_stmt 1 view .LVU282
 1297              		.loc 1 386 32 is_stmt 0 view .LVU283
 1298 004a 5346     		mov	r3, r10
 1299 004c 1A68     		ldr	r2, [r3]
 1300 004e 5B68     		ldr	r3, [r3, #4]
 1301 0050 3900     		movs	r1, r7
 1302 0052 801A     		subs	r0, r0, r2
 1303 0054 9941     		sbcs	r1, r1, r3
 1304 0056 0200     		movs	r2, r0
 1305 0058 0B00     		movs	r3, r1
 1306              		.loc 1 386 21 view .LVU284
 1307 005a 1549     		ldr	r1, .L49+20
 1308 005c 0A60     		str	r2, [r1]
 1309 005e 4B60     		str	r3, [r1, #4]
 387:Core/Src/main.c **** 			  task2ArrayTime[j][i] = execution_time;
 1310              		.loc 1 387 6 is_stmt 1 view .LVU285
 1311              		.loc 1 387 27 is_stmt 0 view .LVU286
 1312 0060 1449     		ldr	r1, .L49+24
 1313 0062 4C44     		add	r4, r4, r9
 1314 0064 6419     		adds	r4, r4, r5
 1315 0066 E400     		lsls	r4, r4, #3
 1316 0068 0919     		adds	r1, r1, r4
 1317 006a 0A60     		str	r2, [r1]
 1318 006c 4B60     		str	r3, [r1, #4]
 388:Core/Src/main.c **** 			  task2ArrayChecksum[j][i] = checksum;
 1319              		.loc 1 388 6 is_stmt 1 view .LVU287
 1320              		.loc 1 388 31 is_stmt 0 view .LVU288
 1321 006e 124B     		ldr	r3, .L49+28
 1322 0070 1B19     		adds	r3, r3, r4
 1323 0072 4246     		mov	r2, r8
 1324 0074 1068     		ldr	r0, [r2]
 1325 0076 5168     		ldr	r1, [r2, #4]
 1326 0078 1860     		str	r0, [r3]
 1327 007a 5960     		str	r1, [r3, #4]
 378:Core/Src/main.c **** 			  start_time = HAL_GetTick();
 1328              		.loc 1 378 23 is_stmt 1 discriminator 3 view .LVU289
 1329 007c 0135     		adds	r5, r5, #1
 1330              	.LVL128:
 1331              	.L46:
 378:Core/Src/main.c **** 			  start_time = HAL_GetTick();
 1332              		.loc 1 378 18 discriminator 1 view .LVU290
 1333 007e 042D     		cmp	r5, #4
 1334 0080 C6DD     		ble	.L45
 1335              	.LBE29:
 375:Core/Src/main.c **** 
 1336              		.loc 1 375 24 discriminator 2 view .LVU291
 1337 0082 0123     		movs	r3, #1
 1338 0084 9C46     		mov	ip, r3
 1339 0086 E144     		add	r9, r9, ip
 1340              	.LVL129:
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s 			page 33


 1341              	.L44:
 375:Core/Src/main.c **** 
 1342              		.loc 1 375 19 discriminator 1 view .LVU292
 1343 0088 4B46     		mov	r3, r9
 1344 008a 042B     		cmp	r3, #4
 1345 008c 01DC     		bgt	.L48
 1346              	.LBB30:
 378:Core/Src/main.c **** 			  start_time = HAL_GetTick();
 1347              		.loc 1 378 12 is_stmt 0 view .LVU293
 1348 008e 0025     		movs	r5, #0
 1349 0090 F5E7     		b	.L46
 1350              	.L48:
 1351              	.LBE30:
 1352              	.LBE28:
 389:Core/Src/main.c **** 		}
 390:Core/Src/main.c **** 	}
 391:Core/Src/main.c **** }
 1353              		.loc 1 391 1 view .LVU294
 1354              		@ sp needed
 1355              	.LVL130:
 1356              		.loc 1 391 1 view .LVU295
 1357 0092 E0BC     		pop	{r5, r6, r7}
 1358 0094 BA46     		mov	r10, r7
 1359 0096 B146     		mov	r9, r6
 1360 0098 A846     		mov	r8, r5
 1361 009a F0BD     		pop	{r4, r5, r6, r7, pc}
 1362              	.L50:
 1363              		.align	2
 1364              	.L49:
 1365 009c 00000000 		.word	start_time
 1366 00a0 00000000 		.word	imageDimensions
 1367 00a4 00000000 		.word	iterationsArray
 1368 00a8 00000000 		.word	checksum
 1369 00ac 00000000 		.word	end_time
 1370 00b0 00000000 		.word	execution_time
 1371 00b4 00000000 		.word	task2ArrayTime
 1372 00b8 00000000 		.word	task2ArrayChecksum
 1373              		.cfi_endproc
 1374              	.LFE46:
 1376              		.section	.text.task4,"ax",%progbits
 1377              		.align	1
 1378              		.global	task4
 1379              		.syntax unified
 1380              		.code	16
 1381              		.thumb_func
 1383              	task4:
 1384              	.LFB47:
 392:Core/Src/main.c **** 
 393:Core/Src/main.c **** // ================================================================================================
 394:Core/Src/main.c **** 
 395:Core/Src/main.c **** void task4() {
 1385              		.loc 1 395 14 is_stmt 1 view -0
 1386              		.cfi_startproc
 1387              		@ args = 0, pretend = 0, frame = 0
 1388              		@ frame_needed = 0, uses_anonymous_args = 0
 1389              		@ link register save eliminated.
 396:Core/Src/main.c **** 
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s 			page 34


 397:Core/Src/main.c **** }
 1390              		.loc 1 397 1 view .LVU297
 1391              		@ sp needed
 1392 0000 7047     		bx	lr
 1393              		.cfi_endproc
 1394              	.LFE47:
 1396              		.section	.text.task7,"ax",%progbits
 1397              		.align	1
 1398              		.global	task7
 1399              		.syntax unified
 1400              		.code	16
 1401              		.thumb_func
 1403              	task7:
 1404              	.LFB48:
 398:Core/Src/main.c **** 
 399:Core/Src/main.c **** // ================================================================================================
 400:Core/Src/main.c **** /*
 401:Core/Src/main.c ****  * This function performs task 7 of Practical 3
 402:Core/Src/main.c ****  * It performs the fixed point arithmetic Mandelbrot function with varying scale factors
 403:Core/Src/main.c ****  * The scale factors are the binary equivalents of 10^3, 10^4, 10^6
 404:Core/Src/main.c ****  * i.e 2^10, 2^13, 2^20
 405:Core/Src/main.c ****  */
 406:Core/Src/main.c **** void task7() {
 1405              		.loc 1 406 14 view -0
 1406              		.cfi_startproc
 1407              		@ args = 0, pretend = 0, frame = 0
 1408              		@ frame_needed = 0, uses_anonymous_args = 0
 1409 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1410              	.LCFI12:
 1411              		.cfi_def_cfa_offset 20
 1412              		.cfi_offset 4, -20
 1413              		.cfi_offset 5, -16
 1414              		.cfi_offset 6, -12
 1415              		.cfi_offset 7, -8
 1416              		.cfi_offset 14, -4
 1417 0002 D646     		mov	lr, r10
 1418 0004 4F46     		mov	r7, r9
 1419 0006 4646     		mov	r6, r8
 1420 0008 C0B5     		push	{r6, r7, lr}
 1421              	.LCFI13:
 1422              		.cfi_def_cfa_offset 32
 1423              		.cfi_offset 8, -32
 1424              		.cfi_offset 9, -28
 1425              		.cfi_offset 10, -24
 407:Core/Src/main.c **** 
 408:Core/Src/main.c **** 	for (int j=0; j<3; j++) {
 1426              		.loc 1 408 2 view .LVU299
 1427              	.LBB31:
 1428              		.loc 1 408 7 view .LVU300
 1429              	.LVL131:
 1430              		.loc 1 408 11 is_stmt 0 view .LVU301
 1431 000a 0023     		movs	r3, #0
 1432 000c 9946     		mov	r9, r3
 1433              		.loc 1 408 2 view .LVU302
 1434 000e 3CE0     		b	.L53
 1435              	.LVL132:
 1436              	.L54:
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s 			page 35


 1437              	.LBB32:
 409:Core/Src/main.c **** 
 410:Core/Src/main.c **** 		for (int i=0; i<5; i++) {
 411:Core/Src/main.c **** 				  start_time = HAL_GetTick();
 1438              		.loc 1 411 7 is_stmt 1 view .LVU303
 1439              		.loc 1 411 20 is_stmt 0 view .LVU304
 1440 0010 FFF7FEFF 		bl	HAL_GetTick
 1441              	.LVL133:
 1442              		.loc 1 411 18 discriminator 1 view .LVU305
 1443 0014 224B     		ldr	r3, .L58
 1444 0016 9A46     		mov	r10, r3
 1445 0018 1860     		str	r0, [r3]
 1446 001a 0023     		movs	r3, #0
 1447 001c 5246     		mov	r2, r10
 1448 001e 5360     		str	r3, [r2, #4]
 412:Core/Src/main.c **** 
 413:Core/Src/main.c **** 				  checksum = calculate_mandelbrot_fixed_point_arithmetic(imageDimensions[i], imageDimensions[i]
 1449              		.loc 1 413 7 is_stmt 1 view .LVU306
 1450              		.loc 1 413 18 is_stmt 0 view .LVU307
 1451 0020 204B     		ldr	r3, .L58+4
 1452 0022 AA00     		lsls	r2, r5, #2
 1453 0024 D058     		ldr	r0, [r2, r3]
 1454 0026 204B     		ldr	r3, .L58+8
 1455 0028 4A46     		mov	r2, r9
 1456 002a 9400     		lsls	r4, r2, #2
 1457 002c E358     		ldr	r3, [r4, r3]
 1458 002e 6422     		movs	r2, #100
 1459 0030 0100     		movs	r1, r0
 1460 0032 FFF7FEFF 		bl	calculate_mandelbrot_fixed_point_arithmetic
 1461              	.LVL134:
 1462              		.loc 1 413 16 discriminator 1 view .LVU308
 1463 0036 1D4B     		ldr	r3, .L58+12
 1464 0038 9846     		mov	r8, r3
 1465 003a 1860     		str	r0, [r3]
 1466 003c 5960     		str	r1, [r3, #4]
 414:Core/Src/main.c **** 
 415:Core/Src/main.c **** 				  end_time = HAL_GetTick();
 1467              		.loc 1 415 7 is_stmt 1 view .LVU309
 1468              		.loc 1 415 18 is_stmt 0 view .LVU310
 1469 003e FFF7FEFF 		bl	HAL_GetTick
 1470              	.LVL135:
 1471              		.loc 1 415 18 discriminator 1 view .LVU311
 1472 0042 0600     		movs	r6, r0
 1473 0044 0027     		movs	r7, #0
 1474              		.loc 1 415 16 discriminator 1 view .LVU312
 1475 0046 1A4B     		ldr	r3, .L58+16
 1476 0048 1E60     		str	r6, [r3]
 1477 004a 5F60     		str	r7, [r3, #4]
 416:Core/Src/main.c **** 
 417:Core/Src/main.c **** 				  execution_time = end_time - start_time;
 1478              		.loc 1 417 7 is_stmt 1 view .LVU313
 1479              		.loc 1 417 33 is_stmt 0 view .LVU314
 1480 004c 5346     		mov	r3, r10
 1481 004e 1A68     		ldr	r2, [r3]
 1482 0050 5B68     		ldr	r3, [r3, #4]
 1483 0052 3900     		movs	r1, r7
 1484 0054 801A     		subs	r0, r0, r2
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s 			page 36


 1485 0056 9941     		sbcs	r1, r1, r3
 1486 0058 0200     		movs	r2, r0
 1487 005a 0B00     		movs	r3, r1
 1488              		.loc 1 417 22 view .LVU315
 1489 005c 1549     		ldr	r1, .L58+20
 1490 005e 0A60     		str	r2, [r1]
 1491 0060 4B60     		str	r3, [r1, #4]
 418:Core/Src/main.c **** 				  task7ArrayTime[j][i] = execution_time;
 1492              		.loc 1 418 7 is_stmt 1 view .LVU316
 1493              		.loc 1 418 28 is_stmt 0 view .LVU317
 1494 0062 1549     		ldr	r1, .L58+24
 1495 0064 4C44     		add	r4, r4, r9
 1496 0066 6419     		adds	r4, r4, r5
 1497 0068 E400     		lsls	r4, r4, #3
 1498 006a 0919     		adds	r1, r1, r4
 1499 006c 0A60     		str	r2, [r1]
 1500 006e 4B60     		str	r3, [r1, #4]
 419:Core/Src/main.c **** 				  task7ArrayChecksum[j][i] = checksum;
 1501              		.loc 1 419 7 is_stmt 1 view .LVU318
 1502              		.loc 1 419 32 is_stmt 0 view .LVU319
 1503 0070 124B     		ldr	r3, .L58+28
 1504 0072 1B19     		adds	r3, r3, r4
 1505 0074 4246     		mov	r2, r8
 1506 0076 1068     		ldr	r0, [r2]
 1507 0078 5168     		ldr	r1, [r2, #4]
 1508 007a 1860     		str	r0, [r3]
 1509 007c 5960     		str	r1, [r3, #4]
 410:Core/Src/main.c **** 				  start_time = HAL_GetTick();
 1510              		.loc 1 410 23 is_stmt 1 discriminator 3 view .LVU320
 1511 007e 0135     		adds	r5, r5, #1
 1512              	.LVL136:
 1513              	.L55:
 410:Core/Src/main.c **** 				  start_time = HAL_GetTick();
 1514              		.loc 1 410 18 discriminator 1 view .LVU321
 1515 0080 042D     		cmp	r5, #4
 1516 0082 C5DD     		ble	.L54
 1517              	.LBE32:
 408:Core/Src/main.c **** 
 1518              		.loc 1 408 22 discriminator 2 view .LVU322
 1519 0084 0123     		movs	r3, #1
 1520 0086 9C46     		mov	ip, r3
 1521 0088 E144     		add	r9, r9, ip
 1522              	.LVL137:
 1523              	.L53:
 408:Core/Src/main.c **** 
 1524              		.loc 1 408 17 discriminator 1 view .LVU323
 1525 008a 4B46     		mov	r3, r9
 1526 008c 022B     		cmp	r3, #2
 1527 008e 01DC     		bgt	.L57
 1528              	.LBB33:
 410:Core/Src/main.c **** 				  start_time = HAL_GetTick();
 1529              		.loc 1 410 12 is_stmt 0 view .LVU324
 1530 0090 0025     		movs	r5, #0
 1531 0092 F5E7     		b	.L55
 1532              	.L57:
 1533              	.LBE33:
 1534              	.LBE31:
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s 			page 37


 420:Core/Src/main.c **** 		}
 421:Core/Src/main.c **** 
 422:Core/Src/main.c **** 	}
 423:Core/Src/main.c **** 
 424:Core/Src/main.c **** }
 1535              		.loc 1 424 1 view .LVU325
 1536              		@ sp needed
 1537              	.LVL138:
 1538              		.loc 1 424 1 view .LVU326
 1539 0094 E0BC     		pop	{r5, r6, r7}
 1540 0096 BA46     		mov	r10, r7
 1541 0098 B146     		mov	r9, r6
 1542 009a A846     		mov	r8, r5
 1543 009c F0BD     		pop	{r4, r5, r6, r7, pc}
 1544              	.L59:
 1545 009e C046     		.align	2
 1546              	.L58:
 1547 00a0 00000000 		.word	start_time
 1548 00a4 00000000 		.word	imageDimensions
 1549 00a8 00000000 		.word	arrayQ
 1550 00ac 00000000 		.word	checksum
 1551 00b0 00000000 		.word	end_time
 1552 00b4 00000000 		.word	execution_time
 1553 00b8 00000000 		.word	task7ArrayTime
 1554 00bc 00000000 		.word	task7ArrayChecksum
 1555              		.cfi_endproc
 1556              	.LFE48:
 1558              		.section	.text.Error_Handler,"ax",%progbits
 1559              		.align	1
 1560              		.global	Error_Handler
 1561              		.syntax unified
 1562              		.code	16
 1563              		.thumb_func
 1565              	Error_Handler:
 1566              	.LFB49:
 425:Core/Src/main.c **** 
 426:Core/Src/main.c **** // ================================================================================================
 427:Core/Src/main.c **** 
 428:Core/Src/main.c **** /* USER CODE END 4 */
 429:Core/Src/main.c **** 
 430:Core/Src/main.c **** /**
 431:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 432:Core/Src/main.c ****   * @retval None
 433:Core/Src/main.c ****   */
 434:Core/Src/main.c **** void Error_Handler(void)
 435:Core/Src/main.c **** {
 1567              		.loc 1 435 1 is_stmt 1 view -0
 1568              		.cfi_startproc
 1569              		@ Volatile: function does not return.
 1570              		@ args = 0, pretend = 0, frame = 0
 1571              		@ frame_needed = 0, uses_anonymous_args = 0
 1572              		@ link register save eliminated.
 436:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 437:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 438:Core/Src/main.c ****   __disable_irq();
 1573              		.loc 1 438 3 view .LVU328
 1574              	.LBB34:
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s 			page 38


 1575              	.LBI34:
 1576              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s 			page 39


  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s 			page 40


 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 1577              		.loc 2 140 27 view .LVU329
 1578              	.LBB35:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 1579              		.loc 2 142 3 view .LVU330
 1580              		.syntax divided
 1581              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1582 0000 72B6     		cpsid i
 1583              	@ 0 "" 2
 1584              		.thumb
 1585              		.syntax unified
 1586              	.L61:
 1587              	.LBE35:
 1588              	.LBE34:
 439:Core/Src/main.c ****   while (1)
 1589              		.loc 1 439 3 view .LVU331
 440:Core/Src/main.c ****   {
 441:Core/Src/main.c ****   }
 1590              		.loc 1 441 3 view .LVU332
 439:Core/Src/main.c ****   while (1)
 1591              		.loc 1 439 9 view .LVU333
 1592 0002 FEE7     		b	.L61
 1593              		.cfi_endproc
 1594              	.LFE49:
 1596              		.section	.text.SystemClock_Config,"ax",%progbits
 1597              		.align	1
 1598              		.global	SystemClock_Config
 1599              		.syntax unified
 1600              		.code	16
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s 			page 41


 1601              		.thumb_func
 1603              	SystemClock_Config:
 1604              	.LFB41:
 165:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1605              		.loc 1 165 1 view -0
 1606              		.cfi_startproc
 1607              		@ args = 0, pretend = 0, frame = 64
 1608              		@ frame_needed = 0, uses_anonymous_args = 0
 1609 0000 00B5     		push	{lr}
 1610              	.LCFI14:
 1611              		.cfi_def_cfa_offset 4
 1612              		.cfi_offset 14, -4
 1613 0002 91B0     		sub	sp, sp, #68
 1614              	.LCFI15:
 1615              		.cfi_def_cfa_offset 72
 166:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1616              		.loc 1 166 3 view .LVU335
 166:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1617              		.loc 1 166 22 is_stmt 0 view .LVU336
 1618 0004 3022     		movs	r2, #48
 1619 0006 0021     		movs	r1, #0
 1620 0008 04A8     		add	r0, sp, #16
 1621 000a FFF7FEFF 		bl	memset
 1622              	.LVL139:
 167:Core/Src/main.c **** 
 1623              		.loc 1 167 3 is_stmt 1 view .LVU337
 167:Core/Src/main.c **** 
 1624              		.loc 1 167 22 is_stmt 0 view .LVU338
 1625 000e 1022     		movs	r2, #16
 1626 0010 0021     		movs	r1, #0
 1627 0012 6846     		mov	r0, sp
 1628 0014 FFF7FEFF 		bl	memset
 1629              	.LVL140:
 172:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1630              		.loc 1 172 3 is_stmt 1 view .LVU339
 172:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1631              		.loc 1 172 36 is_stmt 0 view .LVU340
 1632 0018 0223     		movs	r3, #2
 1633 001a 0493     		str	r3, [sp, #16]
 173:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1634              		.loc 1 173 3 is_stmt 1 view .LVU341
 173:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1635              		.loc 1 173 30 is_stmt 0 view .LVU342
 1636 001c 0122     		movs	r2, #1
 1637 001e 0792     		str	r2, [sp, #28]
 174:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1638              		.loc 1 174 3 is_stmt 1 view .LVU343
 174:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1639              		.loc 1 174 41 is_stmt 0 view .LVU344
 1640 0020 0F32     		adds	r2, r2, #15
 1641 0022 0892     		str	r2, [sp, #32]
 175:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1642              		.loc 1 175 3 is_stmt 1 view .LVU345
 175:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1643              		.loc 1 175 34 is_stmt 0 view .LVU346
 1644 0024 0C93     		str	r3, [sp, #48]
 176:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL12;
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s 			page 42


 1645              		.loc 1 176 3 is_stmt 1 view .LVU347
 177:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 1646              		.loc 1 177 3 view .LVU348
 177:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 1647              		.loc 1 177 32 is_stmt 0 view .LVU349
 1648 0026 A023     		movs	r3, #160
 1649 0028 9B03     		lsls	r3, r3, #14
 1650 002a 0E93     		str	r3, [sp, #56]
 178:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1651              		.loc 1 178 3 is_stmt 1 view .LVU350
 179:Core/Src/main.c ****   {
 1652              		.loc 1 179 3 view .LVU351
 179:Core/Src/main.c ****   {
 1653              		.loc 1 179 7 is_stmt 0 view .LVU352
 1654 002c 04A8     		add	r0, sp, #16
 1655 002e FFF7FEFF 		bl	HAL_RCC_OscConfig
 1656              	.LVL141:
 179:Core/Src/main.c ****   {
 1657              		.loc 1 179 6 discriminator 1 view .LVU353
 1658 0032 0028     		cmp	r0, #0
 1659 0034 0ED1     		bne	.L65
 186:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 1660              		.loc 1 186 3 is_stmt 1 view .LVU354
 186:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 1661              		.loc 1 186 31 is_stmt 0 view .LVU355
 1662 0036 0723     		movs	r3, #7
 1663 0038 0093     		str	r3, [sp]
 188:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1664              		.loc 1 188 3 is_stmt 1 view .LVU356
 188:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1665              		.loc 1 188 34 is_stmt 0 view .LVU357
 1666 003a 053B     		subs	r3, r3, #5
 1667 003c 0193     		str	r3, [sp, #4]
 189:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1668              		.loc 1 189 3 is_stmt 1 view .LVU358
 189:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1669              		.loc 1 189 35 is_stmt 0 view .LVU359
 1670 003e 0023     		movs	r3, #0
 1671 0040 0293     		str	r3, [sp, #8]
 190:Core/Src/main.c **** 
 1672              		.loc 1 190 3 is_stmt 1 view .LVU360
 190:Core/Src/main.c **** 
 1673              		.loc 1 190 36 is_stmt 0 view .LVU361
 1674 0042 0393     		str	r3, [sp, #12]
 192:Core/Src/main.c ****   {
 1675              		.loc 1 192 3 is_stmt 1 view .LVU362
 192:Core/Src/main.c ****   {
 1676              		.loc 1 192 7 is_stmt 0 view .LVU363
 1677 0044 0121     		movs	r1, #1
 1678 0046 6846     		mov	r0, sp
 1679 0048 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1680              	.LVL142:
 192:Core/Src/main.c ****   {
 1681              		.loc 1 192 6 discriminator 1 view .LVU364
 1682 004c 0028     		cmp	r0, #0
 1683 004e 03D1     		bne	.L66
 196:Core/Src/main.c **** 
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s 			page 43


 1684              		.loc 1 196 1 view .LVU365
 1685 0050 11B0     		add	sp, sp, #68
 1686              		@ sp needed
 1687 0052 00BD     		pop	{pc}
 1688              	.L65:
 181:Core/Src/main.c ****   }
 1689              		.loc 1 181 5 is_stmt 1 view .LVU366
 1690 0054 FFF7FEFF 		bl	Error_Handler
 1691              	.LVL143:
 1692              	.L66:
 194:Core/Src/main.c ****   }
 1693              		.loc 1 194 5 view .LVU367
 1694 0058 FFF7FEFF 		bl	Error_Handler
 1695              	.LVL144:
 1696              		.cfi_endproc
 1697              	.LFE41:
 1699              		.section	.text.main,"ax",%progbits
 1700              		.align	1
 1701              		.global	main
 1702              		.syntax unified
 1703              		.code	16
 1704              		.thumb_func
 1706              	main:
 1707              	.LFB40:
 100:Core/Src/main.c **** 
 1708              		.loc 1 100 1 view -0
 1709              		.cfi_startproc
 1710              		@ Volatile: function does not return.
 1711              		@ args = 0, pretend = 0, frame = 0
 1712              		@ frame_needed = 0, uses_anonymous_args = 0
 1713 0000 10B5     		push	{r4, lr}
 1714              	.LCFI16:
 1715              		.cfi_def_cfa_offset 8
 1716              		.cfi_offset 4, -8
 1717              		.cfi_offset 14, -4
 109:Core/Src/main.c **** 
 1718              		.loc 1 109 3 view .LVU369
 1719 0002 FFF7FEFF 		bl	HAL_Init
 1720              	.LVL145:
 116:Core/Src/main.c **** 
 1721              		.loc 1 116 3 view .LVU370
 1722 0006 FFF7FEFF 		bl	SystemClock_Config
 1723              	.LVL146:
 123:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1724              		.loc 1 123 3 view .LVU371
 1725 000a FFF7FEFF 		bl	MX_GPIO_Init
 1726              	.LVL147:
 1727              	.L68:
 130:Core/Src/main.c ****   {
 1728              		.loc 1 130 3 view .LVU372
 136:Core/Src/main.c **** 
 1729              		.loc 1 136 7 view .LVU373
 1730 000e 0E4C     		ldr	r4, .L69
 1731 0010 0122     		movs	r2, #1
 1732 0012 0121     		movs	r1, #1
 1733 0014 2000     		movs	r0, r4
 1734 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s 			page 44


 1735              	.LVL148:
 140:Core/Src/main.c **** 
 1736              		.loc 1 140 7 view .LVU374
 1737 001a FFF7FEFF 		bl	task7
 1738              	.LVL149:
 144:Core/Src/main.c **** 
 1739              		.loc 1 144 7 view .LVU375
 1740 001e 0122     		movs	r2, #1
 1741 0020 0221     		movs	r1, #2
 1742 0022 2000     		movs	r0, r4
 1743 0024 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1744              	.LVL150:
 148:Core/Src/main.c **** 
 1745              		.loc 1 148 7 view .LVU376
 1746 0028 FA20     		movs	r0, #250
 1747 002a 8000     		lsls	r0, r0, #2
 1748 002c FFF7FEFF 		bl	HAL_Delay
 1749              	.LVL151:
 151:Core/Src/main.c **** 	  	  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 1750              		.loc 1 151 7 view .LVU377
 1751 0030 0022     		movs	r2, #0
 1752 0032 0121     		movs	r1, #1
 1753 0034 2000     		movs	r0, r4
 1754 0036 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1755              	.LVL152:
 152:Core/Src/main.c **** 
 1756              		.loc 1 152 7 discriminator 1 view .LVU378
 1757 003a 0022     		movs	r2, #0
 1758 003c 0221     		movs	r1, #2
 1759 003e 2000     		movs	r0, r4
 1760 0040 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1761              	.LVL153:
 130:Core/Src/main.c ****   {
 1762              		.loc 1 130 9 view .LVU379
 1763 0044 E3E7     		b	.L68
 1764              	.L70:
 1765 0046 C046     		.align	2
 1766              	.L69:
 1767 0048 00040048 		.word	1207960576
 1768              		.cfi_endproc
 1769              	.LFE40:
 1771              		.global	task7ArrayTime
 1772              		.section	.bss.task7ArrayTime,"aw",%nobits
 1773              		.align	3
 1776              	task7ArrayTime:
 1777 0000 00000000 		.space	120
 1777      00000000 
 1777      00000000 
 1777      00000000 
 1777      00000000 
 1778              		.global	task7ArrayChecksum
 1779              		.section	.bss.task7ArrayChecksum,"aw",%nobits
 1780              		.align	3
 1783              	task7ArrayChecksum:
 1784 0000 00000000 		.space	120
 1784      00000000 
 1784      00000000 
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s 			page 45


 1784      00000000 
 1784      00000000 
 1785              		.global	arrayQ
 1786              		.section	.data.arrayQ,"aw"
 1787              		.align	2
 1790              	arrayQ:
 1791 0000 0A000000 		.word	10
 1792 0004 0D000000 		.word	13
 1793 0008 14000000 		.word	20
 1794              		.global	task2ArrayTime
 1795              		.section	.bss.task2ArrayTime,"aw",%nobits
 1796              		.align	3
 1799              	task2ArrayTime:
 1800 0000 00000000 		.space	200
 1800      00000000 
 1800      00000000 
 1800      00000000 
 1800      00000000 
 1801              		.global	task2ArrayChecksum
 1802              		.section	.bss.task2ArrayChecksum,"aw",%nobits
 1803              		.align	3
 1806              	task2ArrayChecksum:
 1807 0000 00000000 		.space	200
 1807      00000000 
 1807      00000000 
 1807      00000000 
 1807      00000000 
 1808              		.global	iterationsArray
 1809              		.section	.data.iterationsArray,"aw"
 1810              		.align	2
 1813              	iterationsArray:
 1814 0000 64000000 		.word	100
 1815 0004 FA000000 		.word	250
 1816 0008 F4010000 		.word	500
 1817 000c EE020000 		.word	750
 1818 0010 E8030000 		.word	1000
 1819              		.global	checksumArray_double
 1820              		.section	.bss.checksumArray_double,"aw",%nobits
 1821              		.align	3
 1824              	checksumArray_double:
 1825 0000 00000000 		.space	40
 1825      00000000 
 1825      00000000 
 1825      00000000 
 1825      00000000 
 1826              		.global	checksumArray_arithmetic
 1827              		.section	.bss.checksumArray_arithmetic,"aw",%nobits
 1828              		.align	3
 1831              	checksumArray_arithmetic:
 1832 0000 00000000 		.space	40
 1832      00000000 
 1832      00000000 
 1832      00000000 
 1832      00000000 
 1833              		.global	timeArray_double
 1834              		.section	.bss.timeArray_double,"aw",%nobits
 1835              		.align	3
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s 			page 46


 1838              	timeArray_double:
 1839 0000 00000000 		.space	40
 1839      00000000 
 1839      00000000 
 1839      00000000 
 1839      00000000 
 1840              		.global	timeArray_arithmetic
 1841              		.section	.bss.timeArray_arithmetic,"aw",%nobits
 1842              		.align	3
 1845              	timeArray_arithmetic:
 1846 0000 00000000 		.space	40
 1846      00000000 
 1846      00000000 
 1846      00000000 
 1846      00000000 
 1847              		.global	initial_width
 1848              		.section	.data.initial_width,"aw"
 1849              		.align	2
 1852              	initial_width:
 1853 0000 80000000 		.word	128
 1854              		.global	initial_height
 1855              		.section	.data.initial_height,"aw"
 1856              		.align	2
 1859              	initial_height:
 1860 0000 80000000 		.word	128
 1861              		.global	execution_time
 1862              		.section	.bss.execution_time,"aw",%nobits
 1863              		.align	3
 1866              	execution_time:
 1867 0000 00000000 		.space	8
 1867      00000000 
 1868              		.global	checksum
 1869              		.section	.bss.checksum,"aw",%nobits
 1870              		.align	3
 1873              	checksum:
 1874 0000 00000000 		.space	8
 1874      00000000 
 1875              		.global	imageDimensions
 1876              		.section	.data.imageDimensions,"aw"
 1877              		.align	2
 1880              	imageDimensions:
 1881 0000 80000000 		.word	128
 1882 0004 A0000000 		.word	160
 1883 0008 C0000000 		.word	192
 1884 000c E0000000 		.word	224
 1885 0010 00010000 		.word	256
 1886              		.global	end_time
 1887              		.section	.bss.end_time,"aw",%nobits
 1888              		.align	3
 1891              	end_time:
 1892 0000 00000000 		.space	8
 1892      00000000 
 1893              		.global	start_time
 1894              		.section	.bss.start_time,"aw",%nobits
 1895              		.align	3
 1898              	start_time:
 1899 0000 00000000 		.space	8
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s 			page 47


 1899      00000000 
 1900              		.text
 1901              	.Letext0:
 1902              		.file 3 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1903              		.file 4 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1904              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f051x8.h"
 1905              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 1906              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 1907              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 1908              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 1909              		.file 10 "<built-in>"
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s 			page 48


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s:19     .text.MX_GPIO_Init:00000000 $t
C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s:131    .text.MX_GPIO_Init:0000006c $d
C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s:139    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 $t
C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s:145    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 calculate_mandelbrot_fixed_point_arithmetic
C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s:628    .text.calculate_mandelbrot_double:00000000 $t
C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s:634    .text.calculate_mandelbrot_double:00000000 calculate_mandelbrot_double
C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s:968    .text.calculate_mandelbrot_double:00000174 $d
C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s:1873   .bss.checksum:00000000 checksum
C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s:977    .text.task1:00000000 $t
C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s:983    .text.task1:00000000 task1
C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s:1203   .text.task1:00000108 $d
C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s:1898   .bss.start_time:00000000 start_time
C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s:1880   .data.imageDimensions:00000000 imageDimensions
C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s:1891   .bss.end_time:00000000 end_time
C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s:1866   .bss.execution_time:00000000 execution_time
C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s:1845   .bss.timeArray_arithmetic:00000000 timeArray_arithmetic
C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s:1831   .bss.checksumArray_arithmetic:00000000 checksumArray_arithmetic
C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s:1838   .bss.timeArray_double:00000000 timeArray_double
C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s:1824   .bss.checksumArray_double:00000000 checksumArray_double
C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s:1216   .text.task2:00000000 $t
C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s:1222   .text.task2:00000000 task2
C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s:1365   .text.task2:0000009c $d
C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s:1813   .data.iterationsArray:00000000 iterationsArray
C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s:1799   .bss.task2ArrayTime:00000000 task2ArrayTime
C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s:1806   .bss.task2ArrayChecksum:00000000 task2ArrayChecksum
C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s:1377   .text.task4:00000000 $t
C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s:1383   .text.task4:00000000 task4
C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s:1397   .text.task7:00000000 $t
C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s:1403   .text.task7:00000000 task7
C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s:1547   .text.task7:000000a0 $d
C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s:1790   .data.arrayQ:00000000 arrayQ
C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s:1776   .bss.task7ArrayTime:00000000 task7ArrayTime
C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s:1783   .bss.task7ArrayChecksum:00000000 task7ArrayChecksum
C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s:1559   .text.Error_Handler:00000000 $t
C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s:1565   .text.Error_Handler:00000000 Error_Handler
C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s:1597   .text.SystemClock_Config:00000000 $t
C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s:1603   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s:1700   .text.main:00000000 $t
C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s:1706   .text.main:00000000 main
C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s:1767   .text.main:00000048 $d
C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s:1773   .bss.task7ArrayTime:00000000 $d
C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s:1780   .bss.task7ArrayChecksum:00000000 $d
C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s:1787   .data.arrayQ:00000000 $d
C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s:1796   .bss.task2ArrayTime:00000000 $d
C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s:1803   .bss.task2ArrayChecksum:00000000 $d
C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s:1810   .data.iterationsArray:00000000 $d
C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s:1821   .bss.checksumArray_double:00000000 $d
C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s:1828   .bss.checksumArray_arithmetic:00000000 $d
C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s:1835   .bss.timeArray_double:00000000 $d
C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s:1842   .bss.timeArray_arithmetic:00000000 $d
C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s:1852   .data.initial_width:00000000 initial_width
C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s:1849   .data.initial_width:00000000 $d
C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s:1859   .data.initial_height:00000000 initial_height
C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s:1856   .data.initial_height:00000000 $d
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s 			page 49


C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s:1863   .bss.execution_time:00000000 $d
C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s:1870   .bss.checksum:00000000 $d
C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s:1877   .data.imageDimensions:00000000 $d
C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s:1888   .bss.end_time:00000000 $d
C:\Users\maraz\AppData\Local\Temp\ccZ6x91C.s:1895   .bss.start_time:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_WritePin
HAL_GPIO_Init
__aeabi_ldivmod
__aeabi_lmul
__aeabi_i2d
__aeabi_ddiv
__aeabi_dmul
__aeabi_dsub
__aeabi_dadd
__aeabi_dcmpgt
HAL_GetTick
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_Delay
