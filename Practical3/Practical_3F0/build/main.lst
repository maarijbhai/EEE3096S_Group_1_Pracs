ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB42:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s 			page 2


  34:Core/Src/main.c **** #define MAX_ITER 100
  35:Core/Src/main.c **** #define SCALE 1000000
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** // for bit shifting in the fixed point arithmetic function
  38:Core/Src/main.c **** #define Q   16			// scale factor
  39:Core/Src/main.c **** #define ONE (1 << Q)	// division by scale factor
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PD */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  44:Core/Src/main.c **** /* USER CODE BEGIN PM */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE END PM */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* USER CODE BEGIN PV */
  51:Core/Src/main.c **** //TODO: Define variables you think you might need
  52:Core/Src/main.c **** // - Performance timing variables (e.g execution time, throughput, pixels per second, clock cycles)
  53:Core/Src/main.c **** uint64_t start_time = 0;
  54:Core/Src/main.c **** uint64_t end_time = 0;
  55:Core/Src/main.c **** int imageDimensions[5] = {128, 160, 192, 224, 256};
  56:Core/Src/main.c **** uint64_t checksum = 0;
  57:Core/Src/main.c **** uint64_t execution_time = 0;
  58:Core/Src/main.c **** uint64_t timeArray_arithmetic[5] = {0, 0, 0, 0, 0};
  59:Core/Src/main.c **** uint64_t timeArray_double[5] = {0, 0, 0, 0, 0};
  60:Core/Src/main.c **** uint64_t checksumArray_arithmetic[5] = {0, 0, 0, 0, 0};
  61:Core/Src/main.c **** uint64_t checksumArray_double[5] = {0, 0, 0, 0, 0};
  62:Core/Src/main.c **** int initial_height = 128;
  63:Core/Src/main.c **** int initial_width = 128;
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** char Line[500];
  66:Core/Src/main.c **** int iterationsArray[5] = {250, 500, 750, 1000};
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** /* USER CODE END PV */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  71:Core/Src/main.c **** void SystemClock_Config(void);
  72:Core/Src/main.c **** static void MX_GPIO_Init(void);
  73:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  74:Core/Src/main.c **** //TODO: Define any function prototypes you might need such as the calculate Mandelbrot function amo
  75:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations);
  76:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations);
  77:Core/Src/main.c **** void task1(int iter);
  78:Core/Src/main.c **** /* USER CODE END PFP */
  79:Core/Src/main.c **** 
  80:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  81:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c **** /* USER CODE END 0 */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c **** /**
  86:Core/Src/main.c ****   * @brief  The application entry point.
  87:Core/Src/main.c ****   * @retval int
  88:Core/Src/main.c ****   */
  89:Core/Src/main.c **** int main(void)
  90:Core/Src/main.c **** {
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s 			page 3


  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* USER CODE END 1 */
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  99:Core/Src/main.c ****   HAL_Init();
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* USER CODE END Init */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****   /* Configure the system clock */
 106:Core/Src/main.c ****   SystemClock_Config();
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /* USER CODE END SysInit */
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   /* Initialize all configured peripherals */
 113:Core/Src/main.c ****   MX_GPIO_Init();
 114:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****   /* USER CODE END 2 */
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****   /* Infinite loop */
 119:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 120:Core/Src/main.c ****   while (1)
 121:Core/Src/main.c ****   {
 122:Core/Src/main.c ****     /* USER CODE END WHILE */
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 125:Core/Src/main.c **** 	  //TODO: Visual indicator: Turn on LED0 to signal processing start
 126:Core/Src/main.c **** 	  	  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);
 127:Core/Src/main.c **** 
 128:Core/Src/main.c **** 
 129:Core/Src/main.c **** 	  	  //TODO: Benchmark and Profile Performance
 130:Core/Src/main.c **** 	  	  task1(1000);
 131:Core/Src/main.c **** 
 132:Core/Src/main.c **** 
 133:Core/Src/main.c **** 	  	  //TODO: Visual indicator: Turn on LED1 to signal processing start
 134:Core/Src/main.c **** 	  	  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_SET);
 135:Core/Src/main.c **** 
 136:Core/Src/main.c **** 
 137:Core/Src/main.c **** 	  	  //TODO: Keep the LEDs ON for 2s
 138:Core/Src/main.c **** 	  	  HAL_Delay(1000);
 139:Core/Src/main.c **** 
 140:Core/Src/main.c **** 	  	  //TODO: Turn OFF LEDs
 141:Core/Src/main.c **** 	  	  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET);
 142:Core/Src/main.c **** 	  	  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 143:Core/Src/main.c **** 
 144:Core/Src/main.c **** 
 145:Core/Src/main.c **** 
 146:Core/Src/main.c ****   }
 147:Core/Src/main.c ****   /* USER CODE END 3 */
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s 			page 4


 148:Core/Src/main.c **** }
 149:Core/Src/main.c **** 
 150:Core/Src/main.c **** /**
 151:Core/Src/main.c ****   * @brief System Clock Configuration
 152:Core/Src/main.c ****   * @retval None
 153:Core/Src/main.c ****   */
 154:Core/Src/main.c **** void SystemClock_Config(void)
 155:Core/Src/main.c **** {
 156:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 157:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 160:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 161:Core/Src/main.c ****   */
 162:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 163:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 164:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 165:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 166:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 167:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL12;
 168:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 169:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 170:Core/Src/main.c ****   {
 171:Core/Src/main.c ****     Error_Handler();
 172:Core/Src/main.c ****   }
 173:Core/Src/main.c **** 
 174:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 175:Core/Src/main.c ****   */
 176:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 177:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 178:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 179:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 180:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 181:Core/Src/main.c **** 
 182:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 183:Core/Src/main.c ****   {
 184:Core/Src/main.c ****     Error_Handler();
 185:Core/Src/main.c ****   }
 186:Core/Src/main.c **** }
 187:Core/Src/main.c **** 
 188:Core/Src/main.c **** /**
 189:Core/Src/main.c ****   * @brief GPIO Initialization Function
 190:Core/Src/main.c ****   * @param None
 191:Core/Src/main.c ****   * @retval None
 192:Core/Src/main.c ****   */
 193:Core/Src/main.c **** static void MX_GPIO_Init(void)
 194:Core/Src/main.c **** {
  26              		.loc 1 194 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 10B5     		push	{r4, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 4, -8
  34              		.cfi_offset 14, -4
  35 0002 88B0     		sub	sp, sp, #32
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s 			page 5


  36              	.LCFI1:
  37              		.cfi_def_cfa_offset 40
 195:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  38              		.loc 1 195 3 view .LVU1
  39              		.loc 1 195 20 is_stmt 0 view .LVU2
  40 0004 1422     		movs	r2, #20
  41 0006 0021     		movs	r1, #0
  42 0008 03A8     		add	r0, sp, #12
  43 000a FFF7FEFF 		bl	memset
  44              	.LVL0:
 196:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 197:Core/Src/main.c **** 
 198:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 199:Core/Src/main.c **** 
 200:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 201:Core/Src/main.c ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  45              		.loc 1 201 3 is_stmt 1 view .LVU3
  46              	.LBB4:
  47              		.loc 1 201 3 view .LVU4
  48              		.loc 1 201 3 view .LVU5
  49 000e 174B     		ldr	r3, .L2
  50 0010 5A69     		ldr	r2, [r3, #20]
  51 0012 8021     		movs	r1, #128
  52 0014 C903     		lsls	r1, r1, #15
  53 0016 0A43     		orrs	r2, r1
  54 0018 5A61     		str	r2, [r3, #20]
  55              		.loc 1 201 3 view .LVU6
  56 001a 5A69     		ldr	r2, [r3, #20]
  57 001c 0A40     		ands	r2, r1
  58 001e 0092     		str	r2, [sp]
  59              		.loc 1 201 3 view .LVU7
  60 0020 009A     		ldr	r2, [sp]
  61              	.LBE4:
  62              		.loc 1 201 3 view .LVU8
 202:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  63              		.loc 1 202 3 view .LVU9
  64              	.LBB5:
  65              		.loc 1 202 3 view .LVU10
  66              		.loc 1 202 3 view .LVU11
  67 0022 5A69     		ldr	r2, [r3, #20]
  68 0024 8021     		movs	r1, #128
  69 0026 C902     		lsls	r1, r1, #11
  70 0028 0A43     		orrs	r2, r1
  71 002a 5A61     		str	r2, [r3, #20]
  72              		.loc 1 202 3 view .LVU12
  73 002c 5A69     		ldr	r2, [r3, #20]
  74 002e 0A40     		ands	r2, r1
  75 0030 0192     		str	r2, [sp, #4]
  76              		.loc 1 202 3 view .LVU13
  77 0032 019A     		ldr	r2, [sp, #4]
  78              	.LBE5:
  79              		.loc 1 202 3 view .LVU14
 203:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  80              		.loc 1 203 3 view .LVU15
  81              	.LBB6:
  82              		.loc 1 203 3 view .LVU16
  83              		.loc 1 203 3 view .LVU17
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s 			page 6


  84 0034 5A69     		ldr	r2, [r3, #20]
  85 0036 8021     		movs	r1, #128
  86 0038 8902     		lsls	r1, r1, #10
  87 003a 0A43     		orrs	r2, r1
  88 003c 5A61     		str	r2, [r3, #20]
  89              		.loc 1 203 3 view .LVU18
  90 003e 5B69     		ldr	r3, [r3, #20]
  91 0040 0B40     		ands	r3, r1
  92 0042 0293     		str	r3, [sp, #8]
  93              		.loc 1 203 3 view .LVU19
  94 0044 029B     		ldr	r3, [sp, #8]
  95              	.LBE6:
  96              		.loc 1 203 3 view .LVU20
 204:Core/Src/main.c **** 
 205:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 206:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
  97              		.loc 1 206 3 view .LVU21
  98 0046 0A4C     		ldr	r4, .L2+4
  99 0048 0022     		movs	r2, #0
 100 004a FF21     		movs	r1, #255
 101 004c 2000     		movs	r0, r4
 102 004e FFF7FEFF 		bl	HAL_GPIO_WritePin
 103              	.LVL1:
 207:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7, GPIO_PIN_RESET);
 208:Core/Src/main.c **** 
 209:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 PB2 PB3
 210:Core/Src/main.c ****                            PB4 PB5 PB6 PB7 */
 211:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 104              		.loc 1 211 3 view .LVU22
 105              		.loc 1 211 23 is_stmt 0 view .LVU23
 106 0052 FF23     		movs	r3, #255
 107 0054 0393     		str	r3, [sp, #12]
 212:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 213:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 108              		.loc 1 213 3 is_stmt 1 view .LVU24
 109              		.loc 1 213 24 is_stmt 0 view .LVU25
 110 0056 FE3B     		subs	r3, r3, #254
 111 0058 0493     		str	r3, [sp, #16]
 214:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 112              		.loc 1 214 3 is_stmt 1 view .LVU26
 113              		.loc 1 214 24 is_stmt 0 view .LVU27
 114 005a 0023     		movs	r3, #0
 115 005c 0593     		str	r3, [sp, #20]
 215:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 116              		.loc 1 215 3 is_stmt 1 view .LVU28
 117              		.loc 1 215 25 is_stmt 0 view .LVU29
 118 005e 0693     		str	r3, [sp, #24]
 216:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 119              		.loc 1 216 3 is_stmt 1 view .LVU30
 120 0060 03A9     		add	r1, sp, #12
 121 0062 2000     		movs	r0, r4
 122 0064 FFF7FEFF 		bl	HAL_GPIO_Init
 123              	.LVL2:
 217:Core/Src/main.c **** 
 218:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_2 */
 219:Core/Src/main.c **** 
 220:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s 			page 7


 221:Core/Src/main.c **** }
 124              		.loc 1 221 1 is_stmt 0 view .LVU31
 125 0068 08B0     		add	sp, sp, #32
 126              		@ sp needed
 127 006a 10BD     		pop	{r4, pc}
 128              	.L3:
 129              		.align	2
 130              	.L2:
 131 006c 00100240 		.word	1073876992
 132 0070 00040048 		.word	1207960576
 133              		.cfi_endproc
 134              	.LFE42:
 136              		.global	__aeabi_ldivmod
 137              		.global	__aeabi_lmul
 138              		.section	.text.calculate_mandelbrot_fixed_point_arithmetic,"ax",%progbits
 139              		.align	1
 140              		.global	calculate_mandelbrot_fixed_point_arithmetic
 141              		.syntax unified
 142              		.code	16
 143              		.thumb_func
 145              	calculate_mandelbrot_fixed_point_arithmetic:
 146              	.LVL3:
 147              	.LFB43:
 222:Core/Src/main.c **** 
 223:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 224:Core/Src/main.c **** //TODO: Function signatures you defined previously , implement them here
 225:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations)
 226:Core/Src/main.c **** {
 148              		.loc 1 226 1 is_stmt 1 view -0
 149              		.cfi_startproc
 150              		@ args = 0, pretend = 0, frame = 72
 151              		@ frame_needed = 0, uses_anonymous_args = 0
 152              		.loc 1 226 1 is_stmt 0 view .LVU33
 153 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 154              	.LCFI2:
 155              		.cfi_def_cfa_offset 20
 156              		.cfi_offset 4, -20
 157              		.cfi_offset 5, -16
 158              		.cfi_offset 6, -12
 159              		.cfi_offset 7, -8
 160              		.cfi_offset 14, -4
 161 0002 DE46     		mov	lr, fp
 162 0004 5746     		mov	r7, r10
 163 0006 4E46     		mov	r6, r9
 164 0008 4546     		mov	r5, r8
 165 000a E0B5     		push	{r5, r6, r7, lr}
 166              	.LCFI3:
 167              		.cfi_def_cfa_offset 36
 168              		.cfi_offset 8, -36
 169              		.cfi_offset 9, -32
 170              		.cfi_offset 10, -28
 171              		.cfi_offset 11, -24
 172 000c 93B0     		sub	sp, sp, #76
 173              	.LCFI4:
 174              		.cfi_def_cfa_offset 112
 175 000e 0700     		movs	r7, r0
 176 0010 8846     		mov	r8, r1
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s 			page 8


 177 0012 0692     		str	r2, [sp, #24]
 227:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 178              		.loc 1 227 5 is_stmt 1 view .LVU34
 179              	.LVL4:
 228:Core/Src/main.c **** 
 229:Core/Src/main.c ****     // This function utilizes bit shifting to decreases the computational costs of division on deci
 230:Core/Src/main.c **** 
 231:Core/Src/main.c ****     // For the initial loop, x and y are zero so instead of computing it and lastly subtracting the
 232:Core/Src/main.c ****     // this code sets the initial starting point to the constant
 233:Core/Src/main.c ****     const int32_t x_left = -( (5 * ONE) / 2 ); // -2.5 as x starting point
 180              		.loc 1 233 5 view .LVU35
 234:Core/Src/main.c ****     const int32_t y_top  = -ONE;               // -1.0 as y starting point
 181              		.loc 1 234 5 view .LVU36
 235:Core/Src/main.c **** 
 236:Core/Src/main.c ****     // Instead of recomputing x*... and y*..., we just add the multiplication each loop as it would
 237:Core/Src/main.c ****     // This way addition uses less computational power than multiplication
 238:Core/Src/main.c ****     const int32_t x_step = (int32_t)(((int64_t)7 * ONE) / (2 * width));			// The 2 in the denominat
 182              		.loc 1 238 5 view .LVU37
 183              		.loc 1 238 62 is_stmt 0 view .LVU38
 184 0014 4200     		lsls	r2, r0, #1
 185              	.LVL5:
 186              		.loc 1 238 62 view .LVU39
 187 0016 D317     		asrs	r3, r2, #31
 188              		.loc 1 238 57 view .LVU40
 189 0018 E020     		movs	r0, #224
 190              	.LVL6:
 191              		.loc 1 238 57 view .LVU41
 192 001a C002     		lsls	r0, r0, #11
 193 001c 0021     		movs	r1, #0
 194              	.LVL7:
 195              		.loc 1 238 57 view .LVU42
 196 001e FFF7FEFF 		bl	__aeabi_ldivmod
 197              	.LVL8:
 198              		.loc 1 238 19 view .LVU43
 199 0022 8146     		mov	r9, r0
 200              	.LVL9:
 239:Core/Src/main.c ****     const int32_t y_step = (int32_t)(((int64_t)2 * ONE) / height);				// Bit shift the top before d
 201              		.loc 1 239 5 is_stmt 1 view .LVU44
 202              		.loc 1 239 57 is_stmt 0 view .LVU45
 203 0024 4346     		mov	r3, r8
 204 0026 DB17     		asrs	r3, r3, #31
 205 0028 4246     		mov	r2, r8
 206 002a 8020     		movs	r0, #128
 207              	.LVL10:
 208              		.loc 1 239 57 view .LVU46
 209 002c 8002     		lsls	r0, r0, #10
 210 002e 0021     		movs	r1, #0
 211              	.LVL11:
 212              		.loc 1 239 57 view .LVU47
 213 0030 FFF7FEFF 		bl	__aeabi_ldivmod
 214              	.LVL12:
 240:Core/Src/main.c **** 
 241:Core/Src/main.c ****     const int32_t FOUR = 4 * ONE;				// for condition in while loop
 215              		.loc 1 241 5 is_stmt 1 view .LVU48
 242:Core/Src/main.c **** 
 243:Core/Src/main.c ****     int32_t y0 = y_top;				// starting constant
 216              		.loc 1 243 5 view .LVU49
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s 			page 9


 244:Core/Src/main.c ****     for (int y = 0; y < height; ++y) {
 217              		.loc 1 244 5 view .LVU50
 218              	.LBB7:
 219              		.loc 1 244 10 view .LVU51
 220              		.loc 1 244 14 is_stmt 0 view .LVU52
 221 0034 0025     		movs	r5, #0
 222              	.LBE7:
 243:Core/Src/main.c ****     for (int y = 0; y < height; ++y) {
 223              		.loc 1 243 13 view .LVU53
 224 0036 464B     		ldr	r3, .L16
 225 0038 0793     		str	r3, [sp, #28]
 227:Core/Src/main.c **** 
 226              		.loc 1 227 14 view .LVU54
 227 003a 0023     		movs	r3, #0
 228 003c 0024     		movs	r4, #0
 229 003e 0A93     		str	r3, [sp, #40]
 230 0040 0B94     		str	r4, [sp, #44]
 231 0042 0F95     		str	r5, [sp, #60]
 232 0044 4B46     		mov	r3, r9
 233 0046 0E93     		str	r3, [sp, #56]
 234 0048 1190     		str	r0, [sp, #68]
 235 004a 0D97     		str	r7, [sp, #52]
 236 004c 4346     		mov	r3, r8
 237 004e 1093     		str	r3, [sp, #64]
 238              	.LBB16:
 239              		.loc 1 244 5 view .LVU55
 240 0050 6CE0     		b	.L5
 241              	.LVL13:
 242              	.L13:
 243              	.LBB8:
 244              	.LBB9:
 245              	.LBB10:
 246              	.LBB11:
 245:Core/Src/main.c ****         int32_t x0 = x_left;			// starting constant
 246:Core/Src/main.c **** 
 247:Core/Src/main.c ****         for (int x = 0; x < width; ++x) {
 248:Core/Src/main.c ****             int32_t xi = 0, yi = 0;
 249:Core/Src/main.c ****             int iteration = 0;
 250:Core/Src/main.c **** 
 251:Core/Src/main.c ****             while (iteration < max_iterations) {
 252:Core/Src/main.c ****                 int32_t xi2 = (int32_t)(((int64_t)xi * xi + (1 << (Q - 1))) >> Q);
 253:Core/Src/main.c ****                 int32_t yi2 = (int32_t)(((int64_t)yi * yi + (1 << (Q - 1))) >> Q);
 254:Core/Src/main.c **** 
 255:Core/Src/main.c ****                 // after calculating square values for this loop check if condition is still met
 256:Core/Src/main.c ****                 if ((int64_t)xi2 + yi2 > FOUR) break;
 257:Core/Src/main.c **** 
 258:Core/Src/main.c ****                 int32_t temp = xi2 - yi2 + x0;
 247              		.loc 1 258 17 is_stmt 1 view .LVU56
 248              		.loc 1 258 36 is_stmt 0 view .LVU57
 249 0052 A41A     		subs	r4, r4, r2
 250              	.LVL14:
 251              		.loc 1 258 25 view .LVU58
 252 0054 5444     		add	r4, r4, r10
 253              	.LVL15:
 259:Core/Src/main.c **** 
 260:Core/Src/main.c ****                 // Q is 2^16, so Q-1 = 2^15 to account for 2*xi*yi
 261:Core/Src/main.c ****                 yi = (int32_t)(((int64_t)xi * yi + (1 << (Q - 2))) >> (Q - 1)) + y0;
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s 			page 10


 254              		.loc 1 261 17 is_stmt 1 view .LVU59
 255              		.loc 1 261 45 is_stmt 0 view .LVU60
 256 0056 059A     		ldr	r2, [sp, #20]
 257              	.LVL16:
 258              		.loc 1 261 45 view .LVU61
 259 0058 4B46     		mov	r3, r9
 260 005a 0498     		ldr	r0, [sp, #16]
 261 005c 4146     		mov	r1, r8
 262 005e FFF7FEFF 		bl	__aeabi_lmul
 263              	.LVL17:
 264              		.loc 1 261 50 view .LVU62
 265 0062 8022     		movs	r2, #128
 266 0064 D201     		lsls	r2, r2, #7
 267 0066 0023     		movs	r3, #0
 268 0068 8018     		adds	r0, r0, r2
 269 006a 5941     		adcs	r1, r1, r3
 270              		.loc 1 261 68 view .LVU63
 271 006c 4B04     		lsls	r3, r1, #17
 272 006e C00B     		lsrs	r0, r0, #15
 273 0070 1843     		orrs	r0, r3
 274              		.loc 1 261 20 view .LVU64
 275 0072 079B     		ldr	r3, [sp, #28]
 276 0074 C518     		adds	r5, r0, r3
 277              	.LVL18:
 262:Core/Src/main.c ****                 xi = temp;           // following mandelbrot.py
 278              		.loc 1 262 17 is_stmt 1 view .LVU65
 263:Core/Src/main.c **** 
 264:Core/Src/main.c ****                 ++iteration;
 279              		.loc 1 264 17 view .LVU66
 280 0076 0123     		movs	r3, #1
 281 0078 9C46     		mov	ip, r3
 282 007a E344     		add	fp, fp, ip
 283              	.LVL19:
 284              	.L9:
 285              		.loc 1 264 17 is_stmt 0 view .LVU67
 286              	.LBE11:
 251:Core/Src/main.c ****                 int32_t xi2 = (int32_t)(((int64_t)xi * xi + (1 << (Q - 1))) >> Q);
 287              		.loc 1 251 30 is_stmt 1 view .LVU68
 288 007c 069B     		ldr	r3, [sp, #24]
 289 007e 9B45     		cmp	fp, r3
 290 0080 2FDA     		bge	.L6
 291              	.LBB12:
 252:Core/Src/main.c ****                 int32_t yi2 = (int32_t)(((int64_t)yi * yi + (1 << (Q - 1))) >> Q);
 292              		.loc 1 252 17 view .LVU69
 252:Core/Src/main.c ****                 int32_t yi2 = (int32_t)(((int64_t)yi * yi + (1 << (Q - 1))) >> Q);
 293              		.loc 1 252 42 is_stmt 0 view .LVU70
 294 0082 0494     		str	r4, [sp, #16]
 295 0084 E317     		asrs	r3, r4, #31
 296 0086 9846     		mov	r8, r3
 252:Core/Src/main.c ****                 int32_t yi2 = (int32_t)(((int64_t)yi * yi + (1 << (Q - 1))) >> Q);
 297              		.loc 1 252 54 view .LVU71
 298 0088 2200     		movs	r2, r4
 299 008a 2000     		movs	r0, r4
 300 008c 1900     		movs	r1, r3
 301 008e FFF7FEFF 		bl	__aeabi_lmul
 302              	.LVL20:
 252:Core/Src/main.c ****                 int32_t yi2 = (int32_t)(((int64_t)yi * yi + (1 << (Q - 1))) >> Q);
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s 			page 11


 303              		.loc 1 252 59 view .LVU72
 304 0092 8026     		movs	r6, #128
 305 0094 3602     		lsls	r6, r6, #8
 306 0096 0027     		movs	r7, #0
 307 0098 8019     		adds	r0, r0, r6
 308 009a 7941     		adcs	r1, r1, r7
 252:Core/Src/main.c ****                 int32_t yi2 = (int32_t)(((int64_t)yi * yi + (1 << (Q - 1))) >> Q);
 309              		.loc 1 252 77 view .LVU73
 310 009c 0C04     		lsls	r4, r1, #16
 311              	.LVL21:
 252:Core/Src/main.c ****                 int32_t yi2 = (int32_t)(((int64_t)yi * yi + (1 << (Q - 1))) >> Q);
 312              		.loc 1 252 77 view .LVU74
 313 009e 000C     		lsrs	r0, r0, #16
 314 00a0 0443     		orrs	r4, r0
 315              	.LVL22:
 253:Core/Src/main.c **** 
 316              		.loc 1 253 17 is_stmt 1 view .LVU75
 253:Core/Src/main.c **** 
 317              		.loc 1 253 42 is_stmt 0 view .LVU76
 318 00a2 0595     		str	r5, [sp, #20]
 319 00a4 EB17     		asrs	r3, r5, #31
 320 00a6 9946     		mov	r9, r3
 253:Core/Src/main.c **** 
 321              		.loc 1 253 54 view .LVU77
 322 00a8 2A00     		movs	r2, r5
 323 00aa 2800     		movs	r0, r5
 324 00ac 1900     		movs	r1, r3
 325 00ae FFF7FEFF 		bl	__aeabi_lmul
 326              	.LVL23:
 253:Core/Src/main.c **** 
 327              		.loc 1 253 59 view .LVU78
 328 00b2 8019     		adds	r0, r0, r6
 329 00b4 7941     		adcs	r1, r1, r7
 253:Core/Src/main.c **** 
 330              		.loc 1 253 77 view .LVU79
 331 00b6 0A04     		lsls	r2, r1, #16
 332 00b8 000C     		lsrs	r0, r0, #16
 333 00ba 0243     		orrs	r2, r0
 334              	.LVL24:
 256:Core/Src/main.c **** 
 335              		.loc 1 256 17 is_stmt 1 view .LVU80
 256:Core/Src/main.c **** 
 336              		.loc 1 256 21 is_stmt 0 view .LVU81
 337 00bc 0094     		str	r4, [sp]
 338 00be E317     		asrs	r3, r4, #31
 339 00c0 0193     		str	r3, [sp, #4]
 256:Core/Src/main.c **** 
 340              		.loc 1 256 34 view .LVU82
 341 00c2 0292     		str	r2, [sp, #8]
 342 00c4 D317     		asrs	r3, r2, #31
 343 00c6 0393     		str	r3, [sp, #12]
 344 00c8 029E     		ldr	r6, [sp, #8]
 345 00ca 039F     		ldr	r7, [sp, #12]
 346 00cc 0098     		ldr	r0, [sp]
 347 00ce 0199     		ldr	r1, [sp, #4]
 348 00d0 3618     		adds	r6, r6, r0
 349 00d2 4F41     		adcs	r7, r7, r1
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s 			page 12


 256:Core/Src/main.c **** 
 350              		.loc 1 256 20 view .LVU83
 351 00d4 002F     		cmp	r7, #0
 352 00d6 04DC     		bgt	.L6
 353 00d8 BBD1     		bne	.L13
 354 00da 8023     		movs	r3, #128
 355 00dc DB02     		lsls	r3, r3, #11
 356 00de 9E42     		cmp	r6, r3
 357 00e0 B7D9     		bls	.L13
 358              	.LVL25:
 359              	.L6:
 256:Core/Src/main.c **** 
 360              		.loc 1 256 20 view .LVU84
 361              	.LBE12:
 265:Core/Src/main.c ****             }
 266:Core/Src/main.c **** 
 267:Core/Src/main.c ****             mandelbrot_sum += iteration;
 362              		.loc 1 267 28 view .LVU85
 363 00e2 D146     		mov	r9, r10
 364              		.loc 1 267 13 is_stmt 1 view .LVU86
 365              		.loc 1 267 28 is_stmt 0 view .LVU87
 366 00e4 5B46     		mov	r3, fp
 367 00e6 0893     		str	r3, [sp, #32]
 368 00e8 DB17     		asrs	r3, r3, #31
 369 00ea 0993     		str	r3, [sp, #36]
 370 00ec 0A9B     		ldr	r3, [sp, #40]
 371 00ee 0B9C     		ldr	r4, [sp, #44]
 372 00f0 0899     		ldr	r1, [sp, #32]
 373 00f2 099A     		ldr	r2, [sp, #36]
 374 00f4 5B18     		adds	r3, r3, r1
 375 00f6 5441     		adcs	r4, r4, r2
 376 00f8 0A93     		str	r3, [sp, #40]
 377 00fa 0B94     		str	r4, [sp, #44]
 378              	.LVL26:
 268:Core/Src/main.c ****             x0 += x_step; // add step instead of multiplying new x value
 379              		.loc 1 268 13 is_stmt 1 view .LVU88
 380              		.loc 1 268 16 is_stmt 0 view .LVU89
 381 00fc 0E9B     		ldr	r3, [sp, #56]
 382              	.LVL27:
 383              		.loc 1 268 16 view .LVU90
 384 00fe 9C46     		mov	ip, r3
 385 0100 E144     		add	r9, r9, ip
 386              	.LVL28:
 387              		.loc 1 268 16 view .LVU91
 388              	.LBE10:
 247:Core/Src/main.c ****             int32_t xi = 0, yi = 0;
 389              		.loc 1 247 36 is_stmt 1 discriminator 2 view .LVU92
 390 0102 0C9B     		ldr	r3, [sp, #48]
 391 0104 0133     		adds	r3, r3, #1
 392 0106 0C93     		str	r3, [sp, #48]
 393              	.LVL29:
 394              	.L10:
 247:Core/Src/main.c ****             int32_t xi = 0, yi = 0;
 395              		.loc 1 247 27 discriminator 1 view .LVU93
 396 0108 0C9B     		ldr	r3, [sp, #48]
 397 010a 0D9A     		ldr	r2, [sp, #52]
 398 010c 9342     		cmp	r3, r2
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s 			page 13


 399 010e 05DA     		bge	.L14
 400              	.LBB13:
 249:Core/Src/main.c **** 
 401              		.loc 1 249 17 is_stmt 0 view .LVU94
 402 0110 0023     		movs	r3, #0
 248:Core/Src/main.c ****             int iteration = 0;
 403              		.loc 1 248 29 view .LVU95
 404 0112 9B46     		mov	fp, r3
 248:Core/Src/main.c ****             int iteration = 0;
 405              		.loc 1 248 21 view .LVU96
 406 0114 0024     		movs	r4, #0
 407 0116 1D00     		movs	r5, r3
 408 0118 CA46     		mov	r10, r9
 409 011a AFE7     		b	.L9
 410              	.LVL30:
 411              	.L14:
 248:Core/Src/main.c ****             int iteration = 0;
 412              		.loc 1 248 21 view .LVU97
 413              	.LBE13:
 414              	.LBE9:
 269:Core/Src/main.c ****         }
 270:Core/Src/main.c ****         y0 += y_step;     // add step instead of multiplying new y value
 415              		.loc 1 270 9 is_stmt 1 view .LVU98
 416              		.loc 1 270 12 is_stmt 0 view .LVU99
 417 011c 079B     		ldr	r3, [sp, #28]
 418              	.LVL31:
 419              		.loc 1 270 12 view .LVU100
 420 011e 119A     		ldr	r2, [sp, #68]
 421 0120 9446     		mov	ip, r2
 422 0122 6344     		add	r3, r3, ip
 423 0124 0793     		str	r3, [sp, #28]
 424              	.LVL32:
 425              		.loc 1 270 12 view .LVU101
 426              	.LBE8:
 244:Core/Src/main.c ****         int32_t x0 = x_left;			// starting constant
 427              		.loc 1 244 33 is_stmt 1 discriminator 2 view .LVU102
 428 0126 0F9B     		ldr	r3, [sp, #60]
 429              	.LVL33:
 244:Core/Src/main.c ****         int32_t x0 = x_left;			// starting constant
 430              		.loc 1 244 33 is_stmt 0 discriminator 2 view .LVU103
 431 0128 0133     		adds	r3, r3, #1
 432 012a 0F93     		str	r3, [sp, #60]
 433              	.LVL34:
 434              	.L5:
 244:Core/Src/main.c ****         int32_t x0 = x_left;			// starting constant
 435              		.loc 1 244 23 is_stmt 1 discriminator 1 view .LVU104
 436 012c 0F9B     		ldr	r3, [sp, #60]
 437 012e 109A     		ldr	r2, [sp, #64]
 438 0130 9342     		cmp	r3, r2
 439 0132 04DA     		bge	.L15
 440              	.LBB15:
 441              	.LBB14:
 247:Core/Src/main.c ****             int32_t xi = 0, yi = 0;
 442              		.loc 1 247 18 is_stmt 0 view .LVU105
 443 0134 0026     		movs	r6, #0
 444              	.LBE14:
 245:Core/Src/main.c **** 
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s 			page 14


 445              		.loc 1 245 17 view .LVU106
 446 0136 074B     		ldr	r3, .L16+4
 447 0138 9946     		mov	r9, r3
 448 013a 0C96     		str	r6, [sp, #48]
 449 013c E4E7     		b	.L10
 450              	.LVL35:
 451              	.L15:
 245:Core/Src/main.c **** 
 452              		.loc 1 245 17 view .LVU107
 453              	.LBE15:
 454              	.LBE16:
 271:Core/Src/main.c ****     }
 272:Core/Src/main.c **** 
 273:Core/Src/main.c ****     return mandelbrot_sum;
 455              		.loc 1 273 5 is_stmt 1 view .LVU108
 274:Core/Src/main.c **** }
 456              		.loc 1 274 1 is_stmt 0 view .LVU109
 457 013e 0A98     		ldr	r0, [sp, #40]
 458 0140 0B99     		ldr	r1, [sp, #44]
 459 0142 13B0     		add	sp, sp, #76
 460              		@ sp needed
 461 0144 F0BC     		pop	{r4, r5, r6, r7}
 462 0146 BB46     		mov	fp, r7
 463 0148 B246     		mov	r10, r6
 464 014a A946     		mov	r9, r5
 465 014c A046     		mov	r8, r4
 466 014e F0BD     		pop	{r4, r5, r6, r7, pc}
 467              	.L17:
 468              		.align	2
 469              	.L16:
 470 0150 0000FFFF 		.word	-65536
 471 0154 0080FDFF 		.word	-163840
 472              		.cfi_endproc
 473              	.LFE43:
 475              		.global	__aeabi_i2d
 476              		.global	__aeabi_ddiv
 477              		.global	__aeabi_dmul
 478              		.global	__aeabi_dsub
 479              		.global	__aeabi_dadd
 480              		.global	__aeabi_dcmpgt
 481              		.section	.text.calculate_mandelbrot_double,"ax",%progbits
 482              		.align	1
 483              		.global	calculate_mandelbrot_double
 484              		.syntax unified
 485              		.code	16
 486              		.thumb_func
 488              	calculate_mandelbrot_double:
 489              	.LVL36:
 490              	.LFB44:
 275:Core/Src/main.c **** 
 276:Core/Src/main.c **** 
 277:Core/Src/main.c **** //TODO: Mandelbroat using variable type double
 278:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations)
 279:Core/Src/main.c **** {
 491              		.loc 1 279 1 is_stmt 1 view -0
 492              		.cfi_startproc
 493              		@ args = 0, pretend = 0, frame = 64
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s 			page 15


 494              		@ frame_needed = 0, uses_anonymous_args = 0
 495              		.loc 1 279 1 is_stmt 0 view .LVU111
 496 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 497              	.LCFI5:
 498              		.cfi_def_cfa_offset 20
 499              		.cfi_offset 4, -20
 500              		.cfi_offset 5, -16
 501              		.cfi_offset 6, -12
 502              		.cfi_offset 7, -8
 503              		.cfi_offset 14, -4
 504 0002 DE46     		mov	lr, fp
 505 0004 5746     		mov	r7, r10
 506 0006 4E46     		mov	r6, r9
 507 0008 4546     		mov	r5, r8
 508 000a E0B5     		push	{r5, r6, r7, lr}
 509              	.LCFI6:
 510              		.cfi_def_cfa_offset 36
 511              		.cfi_offset 8, -36
 512              		.cfi_offset 9, -32
 513              		.cfi_offset 10, -28
 514              		.cfi_offset 11, -24
 515 000c 91B0     		sub	sp, sp, #68
 516              	.LCFI7:
 517              		.cfi_def_cfa_offset 104
 518 000e 8346     		mov	fp, r0
 519 0010 0F91     		str	r1, [sp, #60]
 520 0012 9146     		mov	r9, r2
 280:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 521              		.loc 1 280 5 is_stmt 1 view .LVU112
 522              	.LVL37:
 281:Core/Src/main.c ****     //TODO: Complete the function implementation
 282:Core/Src/main.c ****     checksum = 0;
 523              		.loc 1 282 5 view .LVU113
 524              		.loc 1 282 14 is_stmt 0 view .LVU114
 525 0014 5749     		ldr	r1, .L29
 526              	.LVL38:
 527              		.loc 1 282 14 view .LVU115
 528 0016 0022     		movs	r2, #0
 529              	.LVL39:
 530              		.loc 1 282 14 view .LVU116
 531 0018 0023     		movs	r3, #0
 532 001a 0A60     		str	r2, [r1]
 533 001c 4B60     		str	r3, [r1, #4]
 283:Core/Src/main.c ****     for (int y = 0; y < height; y++)
 534              		.loc 1 283 5 is_stmt 1 view .LVU117
 535              	.LBB17:
 536              		.loc 1 283 10 view .LVU118
 537              	.LVL40:
 538              		.loc 1 283 14 is_stmt 0 view .LVU119
 539 001e 0023     		movs	r3, #0
 540 0020 0E93     		str	r3, [sp, #56]
 541              	.LBE17:
 280:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 542              		.loc 1 280 14 view .LVU120
 543 0022 0023     		movs	r3, #0
 544 0024 0024     		movs	r4, #0
 545 0026 0C93     		str	r3, [sp, #48]
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s 			page 16


 546 0028 0D94     		str	r4, [sp, #52]
 547 002a 4B46     		mov	r3, r9
 548 002c 0593     		str	r3, [sp, #20]
 549              	.LBB24:
 550              		.loc 1 283 5 view .LVU121
 551 002e 8DE0     		b	.L19
 552              	.LVL41:
 553              	.L26:
 554              	.LBB18:
 555              	.LBB19:
 556              	.LBB20:
 284:Core/Src/main.c ****     {
 285:Core/Src/main.c ****     	for (int x = 0; x < width ; x++)
 286:Core/Src/main.c ****     	{
 287:Core/Src/main.c ****     		double x_0 = ((double)x/width)*3.5 - 2.5;
 288:Core/Src/main.c ****     		double y_0 = (double)y/height * 2.0 - 1.0;
 289:Core/Src/main.c **** 
 290:Core/Src/main.c ****     		double x_i = 0;
 291:Core/Src/main.c ****     		double y_i = 0;
 292:Core/Src/main.c ****     		int iteration = 0;
 293:Core/Src/main.c **** 
 294:Core/Src/main.c **** 
 295:Core/Src/main.c ****     		while (iteration < max_iterations)
 296:Core/Src/main.c ****     		{
 297:Core/Src/main.c **** 
 298:Core/Src/main.c ****     			double x_i_sq = x_i*x_i;
 299:Core/Src/main.c ****     			double y_i_sq = y_i*y_i;
 300:Core/Src/main.c **** 
 301:Core/Src/main.c ****     			if(x_i_sq + y_i_sq > 4.0)
 302:Core/Src/main.c ****     			{
 303:Core/Src/main.c ****     				break;
 304:Core/Src/main.c ****     			}
 305:Core/Src/main.c ****     			double temp  = x_i_sq - y_i_sq;
 557              		.loc 1 305 8 is_stmt 1 view .LVU122
 558              		.loc 1 305 15 is_stmt 0 view .LVU123
 559 0030 029A     		ldr	r2, [sp, #8]
 560 0032 039B     		ldr	r3, [sp, #12]
 561 0034 0098     		ldr	r0, [sp]
 562 0036 0199     		ldr	r1, [sp, #4]
 563 0038 FFF7FEFF 		bl	__aeabi_dsub
 564              	.LVL42:
 565 003c 0090     		str	r0, [sp]
 566 003e 0191     		str	r1, [sp, #4]
 567              	.LVL43:
 306:Core/Src/main.c ****     			y_i = 2.0*x_i*y_i + y_0;
 568              		.loc 1 306 8 is_stmt 1 view .LVU124
 569              		.loc 1 306 17 is_stmt 0 view .LVU125
 570 0040 3200     		movs	r2, r6
 571 0042 3B00     		movs	r3, r7
 572 0044 3000     		movs	r0, r6
 573              	.LVL44:
 574              		.loc 1 306 17 view .LVU126
 575 0046 3900     		movs	r1, r7
 576 0048 FFF7FEFF 		bl	__aeabi_dadd
 577              	.LVL45:
 578              		.loc 1 306 21 view .LVU127
 579 004c 2200     		movs	r2, r4
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s 			page 17


 580 004e 2B00     		movs	r3, r5
 581 0050 FFF7FEFF 		bl	__aeabi_dmul
 582              	.LVL46:
 583              		.loc 1 306 12 view .LVU128
 584 0054 089A     		ldr	r2, [sp, #32]
 585 0056 099B     		ldr	r3, [sp, #36]
 586 0058 FFF7FEFF 		bl	__aeabi_dadd
 587              	.LVL47:
 588 005c 0400     		movs	r4, r0
 589              	.LVL48:
 590              		.loc 1 306 12 view .LVU129
 591 005e 0D00     		movs	r5, r1
 592              	.LVL49:
 307:Core/Src/main.c **** 
 308:Core/Src/main.c ****     			x_i = temp + x_0;
 593              		.loc 1 308 8 is_stmt 1 view .LVU130
 594              		.loc 1 308 12 is_stmt 0 view .LVU131
 595 0060 009A     		ldr	r2, [sp]
 596 0062 019B     		ldr	r3, [sp, #4]
 597 0064 0698     		ldr	r0, [sp, #24]
 598 0066 0799     		ldr	r1, [sp, #28]
 599 0068 FFF7FEFF 		bl	__aeabi_dadd
 600              	.LVL50:
 601 006c 0600     		movs	r6, r0
 602              	.LVL51:
 603              		.loc 1 308 12 view .LVU132
 604 006e 0F00     		movs	r7, r1
 605              	.LVL52:
 309:Core/Src/main.c **** 
 310:Core/Src/main.c ****     			iteration = iteration +1;
 606              		.loc 1 310 8 is_stmt 1 view .LVU133
 607              		.loc 1 310 18 is_stmt 0 view .LVU134
 608 0070 0123     		movs	r3, #1
 609 0072 9C46     		mov	ip, r3
 610 0074 E044     		add	r8, r8, ip
 611              	.LVL53:
 612              	.L20:
 613              		.loc 1 310 18 view .LVU135
 614              	.LBE20:
 295:Core/Src/main.c ****     		{
 615              		.loc 1 295 24 is_stmt 1 view .LVU136
 616 0076 059B     		ldr	r3, [sp, #20]
 617 0078 9845     		cmp	r8, r3
 618 007a 1BDA     		bge	.L21
 619              	.LBB21:
 298:Core/Src/main.c ****     			double y_i_sq = y_i*y_i;
 620              		.loc 1 298 8 view .LVU137
 298:Core/Src/main.c ****     			double y_i_sq = y_i*y_i;
 621              		.loc 1 298 15 is_stmt 0 view .LVU138
 622 007c 3200     		movs	r2, r6
 623 007e 3B00     		movs	r3, r7
 624 0080 3000     		movs	r0, r6
 625 0082 3900     		movs	r1, r7
 626 0084 FFF7FEFF 		bl	__aeabi_dmul
 627              	.LVL54:
 628 0088 0090     		str	r0, [sp]
 629 008a 0191     		str	r1, [sp, #4]
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s 			page 18


 630              	.LVL55:
 299:Core/Src/main.c **** 
 631              		.loc 1 299 8 is_stmt 1 view .LVU139
 299:Core/Src/main.c **** 
 632              		.loc 1 299 15 is_stmt 0 view .LVU140
 633 008c 2200     		movs	r2, r4
 634 008e 2B00     		movs	r3, r5
 635 0090 2000     		movs	r0, r4
 636              	.LVL56:
 299:Core/Src/main.c **** 
 637              		.loc 1 299 15 view .LVU141
 638 0092 2900     		movs	r1, r5
 639 0094 FFF7FEFF 		bl	__aeabi_dmul
 640              	.LVL57:
 641 0098 0200     		movs	r2, r0
 642 009a 0B00     		movs	r3, r1
 643              	.LVL58:
 301:Core/Src/main.c ****     			{
 644              		.loc 1 301 8 is_stmt 1 view .LVU142
 301:Core/Src/main.c ****     			{
 645              		.loc 1 301 18 is_stmt 0 view .LVU143
 646 009c 0292     		str	r2, [sp, #8]
 647 009e 0393     		str	r3, [sp, #12]
 648 00a0 0098     		ldr	r0, [sp]
 649 00a2 0199     		ldr	r1, [sp, #4]
 650 00a4 FFF7FEFF 		bl	__aeabi_dadd
 651              	.LVL59:
 301:Core/Src/main.c ****     			{
 652              		.loc 1 301 10 view .LVU144
 653 00a8 0022     		movs	r2, #0
 654 00aa 334B     		ldr	r3, .L29+4
 655 00ac FFF7FEFF 		bl	__aeabi_dcmpgt
 656              	.LVL60:
 657 00b0 0028     		cmp	r0, #0
 658 00b2 BDD0     		beq	.L26
 659              	.LVL61:
 660              	.L21:
 301:Core/Src/main.c ****     			{
 661              		.loc 1 301 10 view .LVU145
 662              	.LBE21:
 311:Core/Src/main.c **** 
 312:Core/Src/main.c ****     		}
 313:Core/Src/main.c **** 
 314:Core/Src/main.c ****     		mandelbrot_sum = mandelbrot_sum + iteration;
 663              		.loc 1 314 39 view .LVU146
 664 00b4 4346     		mov	r3, r8
 665              		.loc 1 314 7 is_stmt 1 view .LVU147
 666              		.loc 1 314 39 is_stmt 0 view .LVU148
 667 00b6 0A93     		str	r3, [sp, #40]
 668 00b8 DB17     		asrs	r3, r3, #31
 669 00ba 0B93     		str	r3, [sp, #44]
 670              		.loc 1 314 22 view .LVU149
 671 00bc 0C9B     		ldr	r3, [sp, #48]
 672 00be 0D9C     		ldr	r4, [sp, #52]
 673 00c0 0A99     		ldr	r1, [sp, #40]
 674 00c2 0B9A     		ldr	r2, [sp, #44]
 675 00c4 5B18     		adds	r3, r3, r1
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s 			page 19


 676 00c6 5441     		adcs	r4, r4, r2
 677 00c8 0C93     		str	r3, [sp, #48]
 678 00ca 0D94     		str	r4, [sp, #52]
 679              	.LVL62:
 680              		.loc 1 314 22 view .LVU150
 681              	.LBE19:
 285:Core/Src/main.c ****     	{
 682              		.loc 1 285 35 is_stmt 1 discriminator 2 view .LVU151
 683 00cc 0123     		movs	r3, #1
 684              	.LVL63:
 285:Core/Src/main.c ****     	{
 685              		.loc 1 285 35 is_stmt 0 discriminator 2 view .LVU152
 686 00ce 9C46     		mov	ip, r3
 687 00d0 E344     		add	fp, fp, ip
 688              	.LVL64:
 689              	.L24:
 285:Core/Src/main.c ****     	{
 690              		.loc 1 285 24 is_stmt 1 discriminator 1 view .LVU153
 691 00d2 CB45     		cmp	fp, r9
 692 00d4 36DA     		bge	.L27
 693              	.LBB22:
 287:Core/Src/main.c ****     		double y_0 = (double)y/height * 2.0 - 1.0;
 694              		.loc 1 287 7 view .LVU154
 287:Core/Src/main.c ****     		double y_0 = (double)y/height * 2.0 - 1.0;
 695              		.loc 1 287 21 is_stmt 0 view .LVU155
 696 00d6 5846     		mov	r0, fp
 697 00d8 FFF7FEFF 		bl	__aeabi_i2d
 698              	.LVL65:
 699 00dc 0400     		movs	r4, r0
 700 00de 0D00     		movs	r5, r1
 287:Core/Src/main.c ****     		double y_0 = (double)y/height * 2.0 - 1.0;
 701              		.loc 1 287 30 view .LVU156
 702 00e0 4846     		mov	r0, r9
 703 00e2 FFF7FEFF 		bl	__aeabi_i2d
 704              	.LVL66:
 705 00e6 0200     		movs	r2, r0
 706 00e8 0B00     		movs	r3, r1
 707 00ea 2000     		movs	r0, r4
 708 00ec 2900     		movs	r1, r5
 709 00ee FFF7FEFF 		bl	__aeabi_ddiv
 710              	.LVL67:
 287:Core/Src/main.c ****     		double y_0 = (double)y/height * 2.0 - 1.0;
 711              		.loc 1 287 37 view .LVU157
 712 00f2 0022     		movs	r2, #0
 713 00f4 214B     		ldr	r3, .L29+8
 714 00f6 FFF7FEFF 		bl	__aeabi_dmul
 715              	.LVL68:
 287:Core/Src/main.c ****     		double y_0 = (double)y/height * 2.0 - 1.0;
 716              		.loc 1 287 14 view .LVU158
 717 00fa 0022     		movs	r2, #0
 718 00fc 204B     		ldr	r3, .L29+12
 719 00fe FFF7FEFF 		bl	__aeabi_dsub
 720              	.LVL69:
 721 0102 0690     		str	r0, [sp, #24]
 722 0104 0791     		str	r1, [sp, #28]
 723              	.LVL70:
 288:Core/Src/main.c **** 
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s 			page 20


 724              		.loc 1 288 7 is_stmt 1 view .LVU159
 288:Core/Src/main.c **** 
 725              		.loc 1 288 20 is_stmt 0 view .LVU160
 726 0106 0E98     		ldr	r0, [sp, #56]
 727              	.LVL71:
 288:Core/Src/main.c **** 
 728              		.loc 1 288 20 view .LVU161
 729 0108 FFF7FEFF 		bl	__aeabi_i2d
 730              	.LVL72:
 731 010c 0400     		movs	r4, r0
 732 010e 0D00     		movs	r5, r1
 288:Core/Src/main.c **** 
 733              		.loc 1 288 29 view .LVU162
 734 0110 5046     		mov	r0, r10
 735 0112 FFF7FEFF 		bl	__aeabi_i2d
 736              	.LVL73:
 737 0116 0200     		movs	r2, r0
 738 0118 0B00     		movs	r3, r1
 739 011a 2000     		movs	r0, r4
 740 011c 2900     		movs	r1, r5
 741 011e FFF7FEFF 		bl	__aeabi_ddiv
 742              	.LVL74:
 288:Core/Src/main.c **** 
 743              		.loc 1 288 37 view .LVU163
 744 0122 0200     		movs	r2, r0
 745 0124 0B00     		movs	r3, r1
 746 0126 FFF7FEFF 		bl	__aeabi_dadd
 747              	.LVL75:
 288:Core/Src/main.c **** 
 748              		.loc 1 288 14 view .LVU164
 749 012a 0022     		movs	r2, #0
 750 012c 154B     		ldr	r3, .L29+16
 751 012e FFF7FEFF 		bl	__aeabi_dsub
 752              	.LVL76:
 753 0132 0890     		str	r0, [sp, #32]
 754 0134 0991     		str	r1, [sp, #36]
 755              	.LVL77:
 290:Core/Src/main.c ****     		double y_i = 0;
 756              		.loc 1 290 7 is_stmt 1 view .LVU165
 291:Core/Src/main.c ****     		int iteration = 0;
 757              		.loc 1 291 7 view .LVU166
 292:Core/Src/main.c **** 
 758              		.loc 1 292 7 view .LVU167
 295:Core/Src/main.c ****     		{
 759              		.loc 1 295 7 view .LVU168
 292:Core/Src/main.c **** 
 760              		.loc 1 292 11 is_stmt 0 view .LVU169
 761 0136 0023     		movs	r3, #0
 291:Core/Src/main.c ****     		int iteration = 0;
 762              		.loc 1 291 14 view .LVU170
 763 0138 0024     		movs	r4, #0
 764 013a 0025     		movs	r5, #0
 290:Core/Src/main.c ****     		double y_i = 0;
 765              		.loc 1 290 14 view .LVU171
 766 013c 2600     		movs	r6, r4
 767 013e 2F00     		movs	r7, r5
 768 0140 9846     		mov	r8, r3
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s 			page 21


 295:Core/Src/main.c ****     		{
 769              		.loc 1 295 13 view .LVU172
 770 0142 98E7     		b	.L20
 771              	.LVL78:
 772              	.L27:
 295:Core/Src/main.c ****     		{
 773              		.loc 1 295 13 view .LVU173
 774              	.LBE22:
 775              	.LBE18:
 283:Core/Src/main.c ****     {
 776              		.loc 1 283 34 discriminator 2 view .LVU174
 777 0144 CB46     		mov	fp, r9
 778              	.LVL79:
 283:Core/Src/main.c ****     {
 779              		.loc 1 283 34 is_stmt 1 discriminator 2 view .LVU175
 780 0146 0E9B     		ldr	r3, [sp, #56]
 781 0148 0133     		adds	r3, r3, #1
 782 014a 0E93     		str	r3, [sp, #56]
 783              	.LVL80:
 784              	.L19:
 283:Core/Src/main.c ****     {
 785              		.loc 1 283 23 discriminator 1 view .LVU176
 786 014c 0E9B     		ldr	r3, [sp, #56]
 787 014e 0F9A     		ldr	r2, [sp, #60]
 788 0150 9342     		cmp	r3, r2
 789 0152 05DA     		bge	.L28
 790              	.LBB23:
 285:Core/Src/main.c ****     	{
 791              		.loc 1 285 15 is_stmt 0 view .LVU177
 792 0154 0023     		movs	r3, #0
 793 0156 D946     		mov	r9, fp
 794 0158 9B46     		mov	fp, r3
 795              	.LVL81:
 285:Core/Src/main.c ****     	{
 796              		.loc 1 285 15 view .LVU178
 797 015a 0F9B     		ldr	r3, [sp, #60]
 798 015c 9A46     		mov	r10, r3
 799 015e B8E7     		b	.L24
 800              	.LVL82:
 801              	.L28:
 285:Core/Src/main.c ****     	{
 802              		.loc 1 285 15 view .LVU179
 803              	.LBE23:
 804              	.LBE24:
 315:Core/Src/main.c **** 
 316:Core/Src/main.c ****     	}
 317:Core/Src/main.c ****     }
 318:Core/Src/main.c ****     //checksum = mandelbrot_sum;
 319:Core/Src/main.c ****     return mandelbrot_sum;
 805              		.loc 1 319 5 is_stmt 1 view .LVU180
 320:Core/Src/main.c **** }
 806              		.loc 1 320 1 is_stmt 0 view .LVU181
 807 0160 0C98     		ldr	r0, [sp, #48]
 808 0162 0D99     		ldr	r1, [sp, #52]
 809 0164 11B0     		add	sp, sp, #68
 810              		@ sp needed
 811              	.LVL83:
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s 			page 22


 812              		.loc 1 320 1 view .LVU182
 813 0166 F0BC     		pop	{r4, r5, r6, r7}
 814 0168 BB46     		mov	fp, r7
 815 016a B246     		mov	r10, r6
 816 016c A946     		mov	r9, r5
 817 016e A046     		mov	r8, r4
 818 0170 F0BD     		pop	{r4, r5, r6, r7, pc}
 819              	.L30:
 820 0172 C046     		.align	2
 821              	.L29:
 822 0174 00000000 		.word	checksum
 823 0178 00001040 		.word	1074790400
 824 017c 00000C40 		.word	1074528256
 825 0180 00000440 		.word	1074003968
 826 0184 0000F03F 		.word	1072693248
 827              		.cfi_endproc
 828              	.LFE44:
 830              		.section	.text.task1,"ax",%progbits
 831              		.align	1
 832              		.global	task1
 833              		.syntax unified
 834              		.code	16
 835              		.thumb_func
 837              	task1:
 838              	.LVL84:
 839              	.LFB45:
 321:Core/Src/main.c **** 
 322:Core/Src/main.c **** void task1(int iter) {
 840              		.loc 1 322 22 is_stmt 1 view -0
 841              		.cfi_startproc
 842              		@ args = 0, pretend = 0, frame = 0
 843              		@ frame_needed = 0, uses_anonymous_args = 0
 844              		.loc 1 322 22 is_stmt 0 view .LVU184
 845 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 846              	.LCFI8:
 847              		.cfi_def_cfa_offset 24
 848              		.cfi_offset 3, -24
 849              		.cfi_offset 4, -20
 850              		.cfi_offset 5, -16
 851              		.cfi_offset 6, -12
 852              		.cfi_offset 7, -8
 853              		.cfi_offset 14, -4
 854 0002 DE46     		mov	lr, fp
 855 0004 5746     		mov	r7, r10
 856 0006 4E46     		mov	r6, r9
 857 0008 4546     		mov	r5, r8
 858 000a E0B5     		push	{r5, r6, r7, lr}
 859              	.LCFI9:
 860              		.cfi_def_cfa_offset 40
 861              		.cfi_offset 8, -40
 862              		.cfi_offset 9, -36
 863              		.cfi_offset 10, -32
 864              		.cfi_offset 11, -28
 865 000c 8246     		mov	r10, r0
 323:Core/Src/main.c **** 	for (int i=0; i<5; i++) {
 866              		.loc 1 323 2 is_stmt 1 view .LVU185
 867              	.LBB25:
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s 			page 23


 868              		.loc 1 323 7 view .LVU186
 869              	.LVL85:
 870              		.loc 1 323 11 is_stmt 0 view .LVU187
 871 000e 0023     		movs	r3, #0
 872 0010 9846     		mov	r8, r3
 873              		.loc 1 323 2 view .LVU188
 874 0012 35E0     		b	.L32
 875              	.LVL86:
 876              	.L33:
 324:Core/Src/main.c **** 		  start_time = HAL_GetTick();
 877              		.loc 1 324 5 is_stmt 1 view .LVU189
 878              		.loc 1 324 18 is_stmt 0 view .LVU190
 879 0014 FFF7FEFF 		bl	HAL_GetTick
 880              	.LVL87:
 881              		.loc 1 324 16 discriminator 1 view .LVU191
 882 0018 3B4B     		ldr	r3, .L36
 883 001a 9B46     		mov	fp, r3
 884 001c 1860     		str	r0, [r3]
 885 001e 0023     		movs	r3, #0
 886 0020 5A46     		mov	r2, fp
 887 0022 5360     		str	r3, [r2, #4]
 325:Core/Src/main.c **** 
 326:Core/Src/main.c **** 		  checksum = calculate_mandelbrot_fixed_point_arithmetic(imageDimensions[i], imageDimensions[i], 
 888              		.loc 1 326 5 is_stmt 1 view .LVU192
 889              		.loc 1 326 16 is_stmt 0 view .LVU193
 890 0024 394B     		ldr	r3, .L36+4
 891 0026 4246     		mov	r2, r8
 892 0028 9200     		lsls	r2, r2, #2
 893 002a D058     		ldr	r0, [r2, r3]
 894 002c 5246     		mov	r2, r10
 895 002e 0100     		movs	r1, r0
 896 0030 FFF7FEFF 		bl	calculate_mandelbrot_fixed_point_arithmetic
 897              	.LVL88:
 898              		.loc 1 326 14 discriminator 1 view .LVU194
 899 0034 364B     		ldr	r3, .L36+8
 900 0036 9946     		mov	r9, r3
 901 0038 1860     		str	r0, [r3]
 902 003a 5960     		str	r1, [r3, #4]
 327:Core/Src/main.c **** 
 328:Core/Src/main.c **** 		  end_time = HAL_GetTick();
 903              		.loc 1 328 5 is_stmt 1 view .LVU195
 904              		.loc 1 328 16 is_stmt 0 view .LVU196
 905 003c FFF7FEFF 		bl	HAL_GetTick
 906              	.LVL89:
 907              		.loc 1 328 16 discriminator 1 view .LVU197
 908 0040 0400     		movs	r4, r0
 909 0042 0025     		movs	r5, #0
 910              		.loc 1 328 14 discriminator 1 view .LVU198
 911 0044 334B     		ldr	r3, .L36+12
 912 0046 1C60     		str	r4, [r3]
 913 0048 5D60     		str	r5, [r3, #4]
 329:Core/Src/main.c **** 
 330:Core/Src/main.c **** 		  execution_time = end_time - start_time;
 914              		.loc 1 330 5 is_stmt 1 view .LVU199
 915              		.loc 1 330 31 is_stmt 0 view .LVU200
 916 004a 5B46     		mov	r3, fp
 917 004c 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s 			page 24


 918 004e 5B68     		ldr	r3, [r3, #4]
 919 0050 2900     		movs	r1, r5
 920 0052 801A     		subs	r0, r0, r2
 921 0054 9941     		sbcs	r1, r1, r3
 922 0056 0200     		movs	r2, r0
 923 0058 0B00     		movs	r3, r1
 924              		.loc 1 330 20 view .LVU201
 925 005a 2F49     		ldr	r1, .L36+16
 926 005c 0A60     		str	r2, [r1]
 927 005e 4B60     		str	r3, [r1, #4]
 331:Core/Src/main.c **** 		  timeArray_arithmetic[i] = execution_time;
 928              		.loc 1 331 5 is_stmt 1 view .LVU202
 929              		.loc 1 331 29 is_stmt 0 view .LVU203
 930 0060 2E49     		ldr	r1, .L36+20
 931 0062 4046     		mov	r0, r8
 932 0064 C000     		lsls	r0, r0, #3
 933 0066 0918     		adds	r1, r1, r0
 934 0068 0A60     		str	r2, [r1]
 935 006a 4B60     		str	r3, [r1, #4]
 332:Core/Src/main.c **** 		  checksumArray_arithmetic[i] = checksum;
 936              		.loc 1 332 5 is_stmt 1 view .LVU204
 937              		.loc 1 332 33 is_stmt 0 view .LVU205
 938 006c 2C49     		ldr	r1, .L36+24
 939 006e 0918     		adds	r1, r1, r0
 940 0070 4B46     		mov	r3, r9
 941 0072 1A68     		ldr	r2, [r3]
 942 0074 5B68     		ldr	r3, [r3, #4]
 943 0076 0A60     		str	r2, [r1]
 944 0078 4B60     		str	r3, [r1, #4]
 323:Core/Src/main.c **** 		  start_time = HAL_GetTick();
 945              		.loc 1 323 22 is_stmt 1 discriminator 3 view .LVU206
 946 007a 0123     		movs	r3, #1
 947 007c 9C46     		mov	ip, r3
 948 007e E044     		add	r8, r8, ip
 949              	.LVL90:
 950              	.L32:
 323:Core/Src/main.c **** 		  start_time = HAL_GetTick();
 951              		.loc 1 323 17 discriminator 1 view .LVU207
 952 0080 4346     		mov	r3, r8
 953 0082 042B     		cmp	r3, #4
 954 0084 C6DD     		ble	.L33
 955              	.LBE25:
 956              	.LBB26:
 333:Core/Src/main.c **** 	}
 334:Core/Src/main.c **** 
 335:Core/Src/main.c **** 	for (int i=0; i<5; i++) {
 957              		.loc 1 335 11 is_stmt 0 view .LVU208
 958 0086 0023     		movs	r3, #0
 959 0088 9846     		mov	r8, r3
 960              	.LVL91:
 961              		.loc 1 335 11 view .LVU209
 962 008a 33E0     		b	.L34
 963              	.LVL92:
 964              	.L35:
 336:Core/Src/main.c **** 		  start_time = HAL_GetTick();
 965              		.loc 1 336 5 is_stmt 1 view .LVU210
 966              		.loc 1 336 18 is_stmt 0 view .LVU211
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s 			page 25


 967 008c FFF7FEFF 		bl	HAL_GetTick
 968              	.LVL93:
 969              		.loc 1 336 16 discriminator 1 view .LVU212
 970 0090 1D4C     		ldr	r4, .L36
 971 0092 2060     		str	r0, [r4]
 972 0094 0023     		movs	r3, #0
 973 0096 6360     		str	r3, [r4, #4]
 337:Core/Src/main.c **** 
 338:Core/Src/main.c **** 		  checksum = calculate_mandelbrot_double(imageDimensions[i], imageDimensions[i], iter);
 974              		.loc 1 338 5 is_stmt 1 view .LVU213
 975              		.loc 1 338 16 is_stmt 0 view .LVU214
 976 0098 1C4B     		ldr	r3, .L36+4
 977 009a 4246     		mov	r2, r8
 978 009c 9200     		lsls	r2, r2, #2
 979 009e D058     		ldr	r0, [r2, r3]
 980 00a0 5246     		mov	r2, r10
 981 00a2 0100     		movs	r1, r0
 982 00a4 FFF7FEFF 		bl	calculate_mandelbrot_double
 983              	.LVL94:
 984              		.loc 1 338 14 discriminator 1 view .LVU215
 985 00a8 194B     		ldr	r3, .L36+8
 986 00aa 9946     		mov	r9, r3
 987 00ac 1860     		str	r0, [r3]
 988 00ae 5960     		str	r1, [r3, #4]
 339:Core/Src/main.c **** 
 340:Core/Src/main.c **** 		  end_time = HAL_GetTick();
 989              		.loc 1 340 5 is_stmt 1 view .LVU216
 990              		.loc 1 340 16 is_stmt 0 view .LVU217
 991 00b0 FFF7FEFF 		bl	HAL_GetTick
 992              	.LVL95:
 993              		.loc 1 340 16 discriminator 1 view .LVU218
 994 00b4 0600     		movs	r6, r0
 995 00b6 0027     		movs	r7, #0
 996              		.loc 1 340 14 discriminator 1 view .LVU219
 997 00b8 164B     		ldr	r3, .L36+12
 998 00ba 1E60     		str	r6, [r3]
 999 00bc 5F60     		str	r7, [r3, #4]
 341:Core/Src/main.c **** 
 342:Core/Src/main.c **** 		  execution_time = end_time - start_time;
 1000              		.loc 1 342 5 is_stmt 1 view .LVU220
 1001              		.loc 1 342 31 is_stmt 0 view .LVU221
 1002 00be 6568     		ldr	r5, [r4, #4]
 1003 00c0 2468     		ldr	r4, [r4]
 1004 00c2 0200     		movs	r2, r0
 1005 00c4 3B00     		movs	r3, r7
 1006 00c6 121B     		subs	r2, r2, r4
 1007 00c8 AB41     		sbcs	r3, r3, r5
 1008 00ca 1400     		movs	r4, r2
 1009 00cc 1D00     		movs	r5, r3
 1010              		.loc 1 342 20 view .LVU222
 1011 00ce 124B     		ldr	r3, .L36+16
 1012 00d0 1C60     		str	r4, [r3]
 1013 00d2 5D60     		str	r5, [r3, #4]
 343:Core/Src/main.c **** 		  timeArray_double[i] = execution_time;
 1014              		.loc 1 343 5 is_stmt 1 view .LVU223
 1015              		.loc 1 343 25 is_stmt 0 view .LVU224
 1016 00d4 134B     		ldr	r3, .L36+28
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s 			page 26


 1017 00d6 4246     		mov	r2, r8
 1018 00d8 D200     		lsls	r2, r2, #3
 1019 00da 9B18     		adds	r3, r3, r2
 1020 00dc 1C60     		str	r4, [r3]
 1021 00de 5D60     		str	r5, [r3, #4]
 344:Core/Src/main.c **** 		  checksumArray_double[i] = checksum;
 1022              		.loc 1 344 5 is_stmt 1 view .LVU225
 1023              		.loc 1 344 29 is_stmt 0 view .LVU226
 1024 00e0 114B     		ldr	r3, .L36+32
 1025 00e2 9B18     		adds	r3, r3, r2
 1026 00e4 4A46     		mov	r2, r9
 1027 00e6 1468     		ldr	r4, [r2]
 1028 00e8 5568     		ldr	r5, [r2, #4]
 1029 00ea 1C60     		str	r4, [r3]
 1030 00ec 5D60     		str	r5, [r3, #4]
 335:Core/Src/main.c **** 		  start_time = HAL_GetTick();
 1031              		.loc 1 335 22 is_stmt 1 discriminator 3 view .LVU227
 1032 00ee 0123     		movs	r3, #1
 1033 00f0 9C46     		mov	ip, r3
 1034 00f2 E044     		add	r8, r8, ip
 1035              	.LVL96:
 1036              	.L34:
 335:Core/Src/main.c **** 		  start_time = HAL_GetTick();
 1037              		.loc 1 335 17 discriminator 1 view .LVU228
 1038 00f4 4346     		mov	r3, r8
 1039 00f6 042B     		cmp	r3, #4
 1040 00f8 C8DD     		ble	.L35
 1041              	.LBE26:
 345:Core/Src/main.c **** 		}
 346:Core/Src/main.c **** }
 1042              		.loc 1 346 1 is_stmt 0 view .LVU229
 1043              		@ sp needed
 1044              	.LVL97:
 1045              	.LVL98:
 1046              		.loc 1 346 1 view .LVU230
 1047 00fa F0BC     		pop	{r4, r5, r6, r7}
 1048 00fc BB46     		mov	fp, r7
 1049 00fe B246     		mov	r10, r6
 1050 0100 A946     		mov	r9, r5
 1051 0102 A046     		mov	r8, r4
 1052 0104 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1053              	.L37:
 1054 0106 C046     		.align	2
 1055              	.L36:
 1056 0108 00000000 		.word	start_time
 1057 010c 00000000 		.word	imageDimensions
 1058 0110 00000000 		.word	checksum
 1059 0114 00000000 		.word	end_time
 1060 0118 00000000 		.word	execution_time
 1061 011c 00000000 		.word	timeArray_arithmetic
 1062 0120 00000000 		.word	checksumArray_arithmetic
 1063 0124 00000000 		.word	timeArray_double
 1064 0128 00000000 		.word	checksumArray_double
 1065              		.cfi_endproc
 1066              	.LFE45:
 1068              		.section	.text.Error_Handler,"ax",%progbits
 1069              		.align	1
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s 			page 27


 1070              		.global	Error_Handler
 1071              		.syntax unified
 1072              		.code	16
 1073              		.thumb_func
 1075              	Error_Handler:
 1076              	.LFB46:
 347:Core/Src/main.c **** 
 348:Core/Src/main.c **** /* USER CODE END 4 */
 349:Core/Src/main.c **** 
 350:Core/Src/main.c **** /**
 351:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 352:Core/Src/main.c ****   * @retval None
 353:Core/Src/main.c ****   */
 354:Core/Src/main.c **** void Error_Handler(void)
 355:Core/Src/main.c **** {
 1077              		.loc 1 355 1 is_stmt 1 view -0
 1078              		.cfi_startproc
 1079              		@ Volatile: function does not return.
 1080              		@ args = 0, pretend = 0, frame = 0
 1081              		@ frame_needed = 0, uses_anonymous_args = 0
 1082              		@ link register save eliminated.
 356:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 357:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 358:Core/Src/main.c ****   __disable_irq();
 1083              		.loc 1 358 3 view .LVU232
 1084              	.LBB27:
 1085              	.LBI27:
 1086              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s 			page 28


  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s 			page 29


  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 1087              		.loc 2 140 27 view .LVU233
 1088              	.LBB28:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s 			page 30


 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 1089              		.loc 2 142 3 view .LVU234
 1090              		.syntax divided
 1091              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1092 0000 72B6     		cpsid i
 1093              	@ 0 "" 2
 1094              		.thumb
 1095              		.syntax unified
 1096              	.L39:
 1097              	.LBE28:
 1098              	.LBE27:
 359:Core/Src/main.c ****   while (1)
 1099              		.loc 1 359 3 view .LVU235
 360:Core/Src/main.c ****   {
 361:Core/Src/main.c ****   }
 1100              		.loc 1 361 3 view .LVU236
 359:Core/Src/main.c ****   while (1)
 1101              		.loc 1 359 9 view .LVU237
 1102 0002 FEE7     		b	.L39
 1103              		.cfi_endproc
 1104              	.LFE46:
 1106              		.section	.text.SystemClock_Config,"ax",%progbits
 1107              		.align	1
 1108              		.global	SystemClock_Config
 1109              		.syntax unified
 1110              		.code	16
 1111              		.thumb_func
 1113              	SystemClock_Config:
 1114              	.LFB41:
 155:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1115              		.loc 1 155 1 view -0
 1116              		.cfi_startproc
 1117              		@ args = 0, pretend = 0, frame = 64
 1118              		@ frame_needed = 0, uses_anonymous_args = 0
 1119 0000 00B5     		push	{lr}
 1120              	.LCFI10:
 1121              		.cfi_def_cfa_offset 4
 1122              		.cfi_offset 14, -4
 1123 0002 91B0     		sub	sp, sp, #68
 1124              	.LCFI11:
 1125              		.cfi_def_cfa_offset 72
 156:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1126              		.loc 1 156 3 view .LVU239
 156:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1127              		.loc 1 156 22 is_stmt 0 view .LVU240
 1128 0004 3022     		movs	r2, #48
 1129 0006 0021     		movs	r1, #0
 1130 0008 04A8     		add	r0, sp, #16
 1131 000a FFF7FEFF 		bl	memset
 1132              	.LVL99:
 157:Core/Src/main.c **** 
 1133              		.loc 1 157 3 is_stmt 1 view .LVU241
 157:Core/Src/main.c **** 
 1134              		.loc 1 157 22 is_stmt 0 view .LVU242
 1135 000e 1022     		movs	r2, #16
 1136 0010 0021     		movs	r1, #0
 1137 0012 6846     		mov	r0, sp
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s 			page 31


 1138 0014 FFF7FEFF 		bl	memset
 1139              	.LVL100:
 162:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1140              		.loc 1 162 3 is_stmt 1 view .LVU243
 162:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1141              		.loc 1 162 36 is_stmt 0 view .LVU244
 1142 0018 0223     		movs	r3, #2
 1143 001a 0493     		str	r3, [sp, #16]
 163:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1144              		.loc 1 163 3 is_stmt 1 view .LVU245
 163:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1145              		.loc 1 163 30 is_stmt 0 view .LVU246
 1146 001c 0122     		movs	r2, #1
 1147 001e 0792     		str	r2, [sp, #28]
 164:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1148              		.loc 1 164 3 is_stmt 1 view .LVU247
 164:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1149              		.loc 1 164 41 is_stmt 0 view .LVU248
 1150 0020 0F32     		adds	r2, r2, #15
 1151 0022 0892     		str	r2, [sp, #32]
 165:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1152              		.loc 1 165 3 is_stmt 1 view .LVU249
 165:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1153              		.loc 1 165 34 is_stmt 0 view .LVU250
 1154 0024 0C93     		str	r3, [sp, #48]
 166:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL12;
 1155              		.loc 1 166 3 is_stmt 1 view .LVU251
 167:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 1156              		.loc 1 167 3 view .LVU252
 167:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 1157              		.loc 1 167 32 is_stmt 0 view .LVU253
 1158 0026 A023     		movs	r3, #160
 1159 0028 9B03     		lsls	r3, r3, #14
 1160 002a 0E93     		str	r3, [sp, #56]
 168:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1161              		.loc 1 168 3 is_stmt 1 view .LVU254
 169:Core/Src/main.c ****   {
 1162              		.loc 1 169 3 view .LVU255
 169:Core/Src/main.c ****   {
 1163              		.loc 1 169 7 is_stmt 0 view .LVU256
 1164 002c 04A8     		add	r0, sp, #16
 1165 002e FFF7FEFF 		bl	HAL_RCC_OscConfig
 1166              	.LVL101:
 169:Core/Src/main.c ****   {
 1167              		.loc 1 169 6 discriminator 1 view .LVU257
 1168 0032 0028     		cmp	r0, #0
 1169 0034 0ED1     		bne	.L43
 176:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 1170              		.loc 1 176 3 is_stmt 1 view .LVU258
 176:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 1171              		.loc 1 176 31 is_stmt 0 view .LVU259
 1172 0036 0723     		movs	r3, #7
 1173 0038 0093     		str	r3, [sp]
 178:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1174              		.loc 1 178 3 is_stmt 1 view .LVU260
 178:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1175              		.loc 1 178 34 is_stmt 0 view .LVU261
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s 			page 32


 1176 003a 053B     		subs	r3, r3, #5
 1177 003c 0193     		str	r3, [sp, #4]
 179:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1178              		.loc 1 179 3 is_stmt 1 view .LVU262
 179:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1179              		.loc 1 179 35 is_stmt 0 view .LVU263
 1180 003e 0023     		movs	r3, #0
 1181 0040 0293     		str	r3, [sp, #8]
 180:Core/Src/main.c **** 
 1182              		.loc 1 180 3 is_stmt 1 view .LVU264
 180:Core/Src/main.c **** 
 1183              		.loc 1 180 36 is_stmt 0 view .LVU265
 1184 0042 0393     		str	r3, [sp, #12]
 182:Core/Src/main.c ****   {
 1185              		.loc 1 182 3 is_stmt 1 view .LVU266
 182:Core/Src/main.c ****   {
 1186              		.loc 1 182 7 is_stmt 0 view .LVU267
 1187 0044 0121     		movs	r1, #1
 1188 0046 6846     		mov	r0, sp
 1189 0048 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1190              	.LVL102:
 182:Core/Src/main.c ****   {
 1191              		.loc 1 182 6 discriminator 1 view .LVU268
 1192 004c 0028     		cmp	r0, #0
 1193 004e 03D1     		bne	.L44
 186:Core/Src/main.c **** 
 1194              		.loc 1 186 1 view .LVU269
 1195 0050 11B0     		add	sp, sp, #68
 1196              		@ sp needed
 1197 0052 00BD     		pop	{pc}
 1198              	.L43:
 171:Core/Src/main.c ****   }
 1199              		.loc 1 171 5 is_stmt 1 view .LVU270
 1200 0054 FFF7FEFF 		bl	Error_Handler
 1201              	.LVL103:
 1202              	.L44:
 184:Core/Src/main.c ****   }
 1203              		.loc 1 184 5 view .LVU271
 1204 0058 FFF7FEFF 		bl	Error_Handler
 1205              	.LVL104:
 1206              		.cfi_endproc
 1207              	.LFE41:
 1209              		.section	.text.main,"ax",%progbits
 1210              		.align	1
 1211              		.global	main
 1212              		.syntax unified
 1213              		.code	16
 1214              		.thumb_func
 1216              	main:
 1217              	.LFB40:
  90:Core/Src/main.c **** 
 1218              		.loc 1 90 1 view -0
 1219              		.cfi_startproc
 1220              		@ Volatile: function does not return.
 1221              		@ args = 0, pretend = 0, frame = 0
 1222              		@ frame_needed = 0, uses_anonymous_args = 0
 1223 0000 70B5     		push	{r4, r5, r6, lr}
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s 			page 33


 1224              	.LCFI12:
 1225              		.cfi_def_cfa_offset 16
 1226              		.cfi_offset 4, -16
 1227              		.cfi_offset 5, -12
 1228              		.cfi_offset 6, -8
 1229              		.cfi_offset 14, -4
  99:Core/Src/main.c **** 
 1230              		.loc 1 99 3 view .LVU273
 1231 0002 FFF7FEFF 		bl	HAL_Init
 1232              	.LVL105:
 106:Core/Src/main.c **** 
 1233              		.loc 1 106 3 view .LVU274
 1234 0006 FFF7FEFF 		bl	SystemClock_Config
 1235              	.LVL106:
 113:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1236              		.loc 1 113 3 view .LVU275
 1237 000a FFF7FEFF 		bl	MX_GPIO_Init
 1238              	.LVL107:
 1239              	.L46:
 120:Core/Src/main.c ****   {
 1240              		.loc 1 120 3 view .LVU276
 126:Core/Src/main.c **** 
 1241              		.loc 1 126 7 view .LVU277
 1242 000e 0F4C     		ldr	r4, .L47
 1243 0010 0122     		movs	r2, #1
 1244 0012 0121     		movs	r1, #1
 1245 0014 2000     		movs	r0, r4
 1246 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1247              	.LVL108:
 130:Core/Src/main.c **** 
 1248              		.loc 1 130 7 view .LVU278
 1249 001a FA25     		movs	r5, #250
 1250 001c AD00     		lsls	r5, r5, #2
 1251 001e 2800     		movs	r0, r5
 1252 0020 FFF7FEFF 		bl	task1
 1253              	.LVL109:
 134:Core/Src/main.c **** 
 1254              		.loc 1 134 7 view .LVU279
 1255 0024 0122     		movs	r2, #1
 1256 0026 0221     		movs	r1, #2
 1257 0028 2000     		movs	r0, r4
 1258 002a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1259              	.LVL110:
 138:Core/Src/main.c **** 
 1260              		.loc 1 138 7 view .LVU280
 1261 002e 2800     		movs	r0, r5
 1262 0030 FFF7FEFF 		bl	HAL_Delay
 1263              	.LVL111:
 141:Core/Src/main.c **** 	  	  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 1264              		.loc 1 141 7 view .LVU281
 1265 0034 0022     		movs	r2, #0
 1266 0036 0121     		movs	r1, #1
 1267 0038 2000     		movs	r0, r4
 1268 003a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1269              	.LVL112:
 142:Core/Src/main.c **** 
 1270              		.loc 1 142 7 discriminator 1 view .LVU282
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s 			page 34


 1271 003e 0022     		movs	r2, #0
 1272 0040 0221     		movs	r1, #2
 1273 0042 2000     		movs	r0, r4
 1274 0044 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1275              	.LVL113:
 120:Core/Src/main.c ****   {
 1276              		.loc 1 120 9 view .LVU283
 1277 0048 E1E7     		b	.L46
 1278              	.L48:
 1279 004a C046     		.align	2
 1280              	.L47:
 1281 004c 00040048 		.word	1207960576
 1282              		.cfi_endproc
 1283              	.LFE40:
 1285              		.global	iterationsArray
 1286              		.section	.data.iterationsArray,"aw"
 1287              		.align	2
 1290              	iterationsArray:
 1291 0000 FA000000 		.word	250
 1292 0004 F4010000 		.word	500
 1293 0008 EE020000 		.word	750
 1294 000c E8030000 		.word	1000
 1295 0010 00000000 		.space	4
 1296              		.global	Line
 1297              		.section	.bss.Line,"aw",%nobits
 1298              		.align	2
 1301              	Line:
 1302 0000 00000000 		.space	500
 1302      00000000 
 1302      00000000 
 1302      00000000 
 1302      00000000 
 1303              		.global	initial_width
 1304              		.section	.data.initial_width,"aw"
 1305              		.align	2
 1308              	initial_width:
 1309 0000 80000000 		.word	128
 1310              		.global	initial_height
 1311              		.section	.data.initial_height,"aw"
 1312              		.align	2
 1315              	initial_height:
 1316 0000 80000000 		.word	128
 1317              		.global	checksumArray_double
 1318              		.section	.bss.checksumArray_double,"aw",%nobits
 1319              		.align	3
 1322              	checksumArray_double:
 1323 0000 00000000 		.space	40
 1323      00000000 
 1323      00000000 
 1323      00000000 
 1323      00000000 
 1324              		.global	checksumArray_arithmetic
 1325              		.section	.bss.checksumArray_arithmetic,"aw",%nobits
 1326              		.align	3
 1329              	checksumArray_arithmetic:
 1330 0000 00000000 		.space	40
 1330      00000000 
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s 			page 35


 1330      00000000 
 1330      00000000 
 1330      00000000 
 1331              		.global	timeArray_double
 1332              		.section	.bss.timeArray_double,"aw",%nobits
 1333              		.align	3
 1336              	timeArray_double:
 1337 0000 00000000 		.space	40
 1337      00000000 
 1337      00000000 
 1337      00000000 
 1337      00000000 
 1338              		.global	timeArray_arithmetic
 1339              		.section	.bss.timeArray_arithmetic,"aw",%nobits
 1340              		.align	3
 1343              	timeArray_arithmetic:
 1344 0000 00000000 		.space	40
 1344      00000000 
 1344      00000000 
 1344      00000000 
 1344      00000000 
 1345              		.global	execution_time
 1346              		.section	.bss.execution_time,"aw",%nobits
 1347              		.align	3
 1350              	execution_time:
 1351 0000 00000000 		.space	8
 1351      00000000 
 1352              		.global	checksum
 1353              		.section	.bss.checksum,"aw",%nobits
 1354              		.align	3
 1357              	checksum:
 1358 0000 00000000 		.space	8
 1358      00000000 
 1359              		.global	imageDimensions
 1360              		.section	.data.imageDimensions,"aw"
 1361              		.align	2
 1364              	imageDimensions:
 1365 0000 80000000 		.word	128
 1366 0004 A0000000 		.word	160
 1367 0008 C0000000 		.word	192
 1368 000c E0000000 		.word	224
 1369 0010 00010000 		.word	256
 1370              		.global	end_time
 1371              		.section	.bss.end_time,"aw",%nobits
 1372              		.align	3
 1375              	end_time:
 1376 0000 00000000 		.space	8
 1376      00000000 
 1377              		.global	start_time
 1378              		.section	.bss.start_time,"aw",%nobits
 1379              		.align	3
 1382              	start_time:
 1383 0000 00000000 		.space	8
 1383      00000000 
 1384              		.text
 1385              	.Letext0:
 1386              		.file 3 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s 			page 36


 1387              		.file 4 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1388              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f051x8.h"
 1389              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 1390              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 1391              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 1392              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 1393              		.file 10 "<built-in>"
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s 			page 37


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s:19     .text.MX_GPIO_Init:00000000 $t
C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s:131    .text.MX_GPIO_Init:0000006c $d
C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s:139    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 $t
C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s:145    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 calculate_mandelbrot_fixed_point_arithmetic
C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s:470    .text.calculate_mandelbrot_fixed_point_arithmetic:00000150 $d
C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s:482    .text.calculate_mandelbrot_double:00000000 $t
C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s:488    .text.calculate_mandelbrot_double:00000000 calculate_mandelbrot_double
C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s:822    .text.calculate_mandelbrot_double:00000174 $d
C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s:1357   .bss.checksum:00000000 checksum
C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s:831    .text.task1:00000000 $t
C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s:837    .text.task1:00000000 task1
C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s:1056   .text.task1:00000108 $d
C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s:1382   .bss.start_time:00000000 start_time
C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s:1364   .data.imageDimensions:00000000 imageDimensions
C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s:1375   .bss.end_time:00000000 end_time
C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s:1350   .bss.execution_time:00000000 execution_time
C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s:1343   .bss.timeArray_arithmetic:00000000 timeArray_arithmetic
C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s:1329   .bss.checksumArray_arithmetic:00000000 checksumArray_arithmetic
C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s:1336   .bss.timeArray_double:00000000 timeArray_double
C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s:1322   .bss.checksumArray_double:00000000 checksumArray_double
C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s:1069   .text.Error_Handler:00000000 $t
C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s:1075   .text.Error_Handler:00000000 Error_Handler
C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s:1107   .text.SystemClock_Config:00000000 $t
C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s:1113   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s:1210   .text.main:00000000 $t
C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s:1216   .text.main:00000000 main
C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s:1281   .text.main:0000004c $d
C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s:1290   .data.iterationsArray:00000000 iterationsArray
C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s:1287   .data.iterationsArray:00000000 $d
C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s:1301   .bss.Line:00000000 Line
C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s:1298   .bss.Line:00000000 $d
C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s:1308   .data.initial_width:00000000 initial_width
C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s:1305   .data.initial_width:00000000 $d
C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s:1315   .data.initial_height:00000000 initial_height
C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s:1312   .data.initial_height:00000000 $d
C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s:1319   .bss.checksumArray_double:00000000 $d
C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s:1326   .bss.checksumArray_arithmetic:00000000 $d
C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s:1333   .bss.timeArray_double:00000000 $d
C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s:1340   .bss.timeArray_arithmetic:00000000 $d
C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s:1347   .bss.execution_time:00000000 $d
C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s:1354   .bss.checksum:00000000 $d
C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s:1361   .data.imageDimensions:00000000 $d
C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s:1372   .bss.end_time:00000000 $d
C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s:1379   .bss.start_time:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_WritePin
HAL_GPIO_Init
__aeabi_ldivmod
__aeabi_lmul
__aeabi_i2d
__aeabi_ddiv
__aeabi_dmul
ARM GAS  C:\Users\maraz\AppData\Local\Temp\ccZDlQLJ.s 			page 38


__aeabi_dsub
__aeabi_dadd
__aeabi_dcmpgt
HAL_GetTick
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_Delay
