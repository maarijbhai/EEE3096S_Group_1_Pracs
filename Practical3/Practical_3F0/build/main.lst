ARM GAS  C:\Users\maraz\AppData\Local\Temp\cccbMrIa.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB42:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
ARM GAS  C:\Users\maraz\AppData\Local\Temp\cccbMrIa.s 			page 2


  34:Core/Src/main.c **** #define MAX_ITER 100
  35:Core/Src/main.c **** #define SCALE 1000000
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** // for bit shifting in the fixed point arithmetic function
  38:Core/Src/main.c **** #define Q   16			// scale factor
  39:Core/Src/main.c **** #define ONE (1 << Q)	// division by scale factor
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PD */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  44:Core/Src/main.c **** /* USER CODE BEGIN PM */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE END PM */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* USER CODE BEGIN PV */
  51:Core/Src/main.c **** //TODO: Define variables you think you might need
  52:Core/Src/main.c **** // - Performance timing variables (e.g execution time, throughput, pixels per second, clock cycles)
  53:Core/Src/main.c **** uint64_t start_time = 0;
  54:Core/Src/main.c **** uint64_t end_time = 0;
  55:Core/Src/main.c **** int imageDimensions[5] = {128, 160, 192, 224, 256};
  56:Core/Src/main.c **** uint64_t checksum = 0;
  57:Core/Src/main.c **** uint64_t execution_time = 0;
  58:Core/Src/main.c **** int initial_height = 128;
  59:Core/Src/main.c **** int initial_width = 128;
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /* USER CODE END PV */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  64:Core/Src/main.c **** void SystemClock_Config(void);
  65:Core/Src/main.c **** static void MX_GPIO_Init(void);
  66:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  67:Core/Src/main.c **** //TODO: Define any function prototypes you might need such as the calculate Mandelbrot function amo
  68:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations);
  69:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations);
  70:Core/Src/main.c **** /* USER CODE END PFP */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  73:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** /* USER CODE END 0 */
  76:Core/Src/main.c **** 
  77:Core/Src/main.c **** /**
  78:Core/Src/main.c ****   * @brief  The application entry point.
  79:Core/Src/main.c ****   * @retval int
  80:Core/Src/main.c ****   */
  81:Core/Src/main.c **** int main(void)
  82:Core/Src/main.c **** {
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* USER CODE END 1 */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
ARM GAS  C:\Users\maraz\AppData\Local\Temp\cccbMrIa.s 			page 3


  91:Core/Src/main.c ****   HAL_Init();
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* USER CODE END Init */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* Configure the system clock */
  98:Core/Src/main.c ****   SystemClock_Config();
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   /* USER CODE END SysInit */
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****   /* Initialize all configured peripherals */
 105:Core/Src/main.c ****   MX_GPIO_Init();
 106:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* USER CODE END 2 */
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /* Infinite loop */
 111:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 112:Core/Src/main.c ****   while (1)
 113:Core/Src/main.c ****   {
 114:Core/Src/main.c ****     /* USER CODE END WHILE */
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 117:Core/Src/main.c **** 	  //TODO: Visual indicator: Turn on LED0 to signal processing start
 118:Core/Src/main.c **** 	  	  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);
 119:Core/Src/main.c **** 
 120:Core/Src/main.c **** 
 121:Core/Src/main.c **** 	  	  //TODO: Benchmark and Profile Performance
 122:Core/Src/main.c **** 
 123:Core/Src/main.c **** 
 124:Core/Src/main.c **** 	  	  //TODO: Visual indicator: Turn on LED1 to signal processing start
 125:Core/Src/main.c **** 	  	  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_SET);
 126:Core/Src/main.c **** 
 127:Core/Src/main.c **** 
 128:Core/Src/main.c **** 	  	  //TODO: Keep the LEDs ON for 2s
 129:Core/Src/main.c **** 	  	  HAL_Delay(1000);
 130:Core/Src/main.c **** 
 131:Core/Src/main.c **** 	  	  //TODO: Turn OFF LEDs
 132:Core/Src/main.c **** 	  	  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET);
 133:Core/Src/main.c **** 	  	  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 134:Core/Src/main.c **** 
 135:Core/Src/main.c **** 
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****   }
 138:Core/Src/main.c ****   /* USER CODE END 3 */
 139:Core/Src/main.c **** }
 140:Core/Src/main.c **** 
 141:Core/Src/main.c **** /**
 142:Core/Src/main.c ****   * @brief System Clock Configuration
 143:Core/Src/main.c ****   * @retval None
 144:Core/Src/main.c ****   */
 145:Core/Src/main.c **** void SystemClock_Config(void)
 146:Core/Src/main.c **** {
 147:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
ARM GAS  C:\Users\maraz\AppData\Local\Temp\cccbMrIa.s 			page 4


 148:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 149:Core/Src/main.c **** 
 150:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 151:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 152:Core/Src/main.c ****   */
 153:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 154:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 155:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 157:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 158:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL12;
 159:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 160:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 161:Core/Src/main.c ****   {
 162:Core/Src/main.c ****     Error_Handler();
 163:Core/Src/main.c ****   }
 164:Core/Src/main.c **** 
 165:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 166:Core/Src/main.c ****   */
 167:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 168:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 169:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 170:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 171:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 172:Core/Src/main.c **** 
 173:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 174:Core/Src/main.c ****   {
 175:Core/Src/main.c ****     Error_Handler();
 176:Core/Src/main.c ****   }
 177:Core/Src/main.c **** }
 178:Core/Src/main.c **** 
 179:Core/Src/main.c **** /**
 180:Core/Src/main.c ****   * @brief GPIO Initialization Function
 181:Core/Src/main.c ****   * @param None
 182:Core/Src/main.c ****   * @retval None
 183:Core/Src/main.c ****   */
 184:Core/Src/main.c **** static void MX_GPIO_Init(void)
 185:Core/Src/main.c **** {
  26              		.loc 1 185 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 10B5     		push	{r4, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 4, -8
  34              		.cfi_offset 14, -4
  35 0002 88B0     		sub	sp, sp, #32
  36              	.LCFI1:
  37              		.cfi_def_cfa_offset 40
 186:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  38              		.loc 1 186 3 view .LVU1
  39              		.loc 1 186 20 is_stmt 0 view .LVU2
  40 0004 1422     		movs	r2, #20
  41 0006 0021     		movs	r1, #0
  42 0008 03A8     		add	r0, sp, #12
  43 000a FFF7FEFF 		bl	memset
ARM GAS  C:\Users\maraz\AppData\Local\Temp\cccbMrIa.s 			page 5


  44              	.LVL0:
 187:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 188:Core/Src/main.c **** 
 189:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 190:Core/Src/main.c **** 
 191:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 192:Core/Src/main.c ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  45              		.loc 1 192 3 is_stmt 1 view .LVU3
  46              	.LBB4:
  47              		.loc 1 192 3 view .LVU4
  48              		.loc 1 192 3 view .LVU5
  49 000e 174B     		ldr	r3, .L2
  50 0010 5A69     		ldr	r2, [r3, #20]
  51 0012 8021     		movs	r1, #128
  52 0014 C903     		lsls	r1, r1, #15
  53 0016 0A43     		orrs	r2, r1
  54 0018 5A61     		str	r2, [r3, #20]
  55              		.loc 1 192 3 view .LVU6
  56 001a 5A69     		ldr	r2, [r3, #20]
  57 001c 0A40     		ands	r2, r1
  58 001e 0092     		str	r2, [sp]
  59              		.loc 1 192 3 view .LVU7
  60 0020 009A     		ldr	r2, [sp]
  61              	.LBE4:
  62              		.loc 1 192 3 view .LVU8
 193:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  63              		.loc 1 193 3 view .LVU9
  64              	.LBB5:
  65              		.loc 1 193 3 view .LVU10
  66              		.loc 1 193 3 view .LVU11
  67 0022 5A69     		ldr	r2, [r3, #20]
  68 0024 8021     		movs	r1, #128
  69 0026 C902     		lsls	r1, r1, #11
  70 0028 0A43     		orrs	r2, r1
  71 002a 5A61     		str	r2, [r3, #20]
  72              		.loc 1 193 3 view .LVU12
  73 002c 5A69     		ldr	r2, [r3, #20]
  74 002e 0A40     		ands	r2, r1
  75 0030 0192     		str	r2, [sp, #4]
  76              		.loc 1 193 3 view .LVU13
  77 0032 019A     		ldr	r2, [sp, #4]
  78              	.LBE5:
  79              		.loc 1 193 3 view .LVU14
 194:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  80              		.loc 1 194 3 view .LVU15
  81              	.LBB6:
  82              		.loc 1 194 3 view .LVU16
  83              		.loc 1 194 3 view .LVU17
  84 0034 5A69     		ldr	r2, [r3, #20]
  85 0036 8021     		movs	r1, #128
  86 0038 8902     		lsls	r1, r1, #10
  87 003a 0A43     		orrs	r2, r1
  88 003c 5A61     		str	r2, [r3, #20]
  89              		.loc 1 194 3 view .LVU18
  90 003e 5B69     		ldr	r3, [r3, #20]
  91 0040 0B40     		ands	r3, r1
  92 0042 0293     		str	r3, [sp, #8]
ARM GAS  C:\Users\maraz\AppData\Local\Temp\cccbMrIa.s 			page 6


  93              		.loc 1 194 3 view .LVU19
  94 0044 029B     		ldr	r3, [sp, #8]
  95              	.LBE6:
  96              		.loc 1 194 3 view .LVU20
 195:Core/Src/main.c **** 
 196:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 197:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
  97              		.loc 1 197 3 view .LVU21
  98 0046 0A4C     		ldr	r4, .L2+4
  99 0048 0022     		movs	r2, #0
 100 004a FF21     		movs	r1, #255
 101 004c 2000     		movs	r0, r4
 102 004e FFF7FEFF 		bl	HAL_GPIO_WritePin
 103              	.LVL1:
 198:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7, GPIO_PIN_RESET);
 199:Core/Src/main.c **** 
 200:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 PB2 PB3
 201:Core/Src/main.c ****                            PB4 PB5 PB6 PB7 */
 202:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 104              		.loc 1 202 3 view .LVU22
 105              		.loc 1 202 23 is_stmt 0 view .LVU23
 106 0052 FF23     		movs	r3, #255
 107 0054 0393     		str	r3, [sp, #12]
 203:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 204:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 108              		.loc 1 204 3 is_stmt 1 view .LVU24
 109              		.loc 1 204 24 is_stmt 0 view .LVU25
 110 0056 FE3B     		subs	r3, r3, #254
 111 0058 0493     		str	r3, [sp, #16]
 205:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 112              		.loc 1 205 3 is_stmt 1 view .LVU26
 113              		.loc 1 205 24 is_stmt 0 view .LVU27
 114 005a 0023     		movs	r3, #0
 115 005c 0593     		str	r3, [sp, #20]
 206:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 116              		.loc 1 206 3 is_stmt 1 view .LVU28
 117              		.loc 1 206 25 is_stmt 0 view .LVU29
 118 005e 0693     		str	r3, [sp, #24]
 207:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 119              		.loc 1 207 3 is_stmt 1 view .LVU30
 120 0060 03A9     		add	r1, sp, #12
 121 0062 2000     		movs	r0, r4
 122 0064 FFF7FEFF 		bl	HAL_GPIO_Init
 123              	.LVL2:
 208:Core/Src/main.c **** 
 209:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_2 */
 210:Core/Src/main.c **** 
 211:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
 212:Core/Src/main.c **** }
 124              		.loc 1 212 1 is_stmt 0 view .LVU31
 125 0068 08B0     		add	sp, sp, #32
 126              		@ sp needed
 127 006a 10BD     		pop	{r4, pc}
 128              	.L3:
 129              		.align	2
 130              	.L2:
 131 006c 00100240 		.word	1073876992
ARM GAS  C:\Users\maraz\AppData\Local\Temp\cccbMrIa.s 			page 7


 132 0070 00040048 		.word	1207960576
 133              		.cfi_endproc
 134              	.LFE42:
 136              		.global	__aeabi_ldivmod
 137              		.global	__aeabi_lmul
 138              		.section	.text.calculate_mandelbrot_fixed_point_arithmetic,"ax",%progbits
 139              		.align	1
 140              		.global	calculate_mandelbrot_fixed_point_arithmetic
 141              		.syntax unified
 142              		.code	16
 143              		.thumb_func
 145              	calculate_mandelbrot_fixed_point_arithmetic:
 146              	.LVL3:
 147              	.LFB43:
 213:Core/Src/main.c **** 
 214:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 215:Core/Src/main.c **** //TODO: Function signatures you defined previously , implement them here
 216:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations)
 217:Core/Src/main.c **** {
 148              		.loc 1 217 1 is_stmt 1 view -0
 149              		.cfi_startproc
 150              		@ args = 0, pretend = 0, frame = 72
 151              		@ frame_needed = 0, uses_anonymous_args = 0
 152              		.loc 1 217 1 is_stmt 0 view .LVU33
 153 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 154              	.LCFI2:
 155              		.cfi_def_cfa_offset 20
 156              		.cfi_offset 4, -20
 157              		.cfi_offset 5, -16
 158              		.cfi_offset 6, -12
 159              		.cfi_offset 7, -8
 160              		.cfi_offset 14, -4
 161 0002 DE46     		mov	lr, fp
 162 0004 5746     		mov	r7, r10
 163 0006 4E46     		mov	r6, r9
 164 0008 4546     		mov	r5, r8
 165 000a E0B5     		push	{r5, r6, r7, lr}
 166              	.LCFI3:
 167              		.cfi_def_cfa_offset 36
 168              		.cfi_offset 8, -36
 169              		.cfi_offset 9, -32
 170              		.cfi_offset 10, -28
 171              		.cfi_offset 11, -24
 172 000c 93B0     		sub	sp, sp, #76
 173              	.LCFI4:
 174              		.cfi_def_cfa_offset 112
 175 000e 0700     		movs	r7, r0
 176 0010 8846     		mov	r8, r1
 177 0012 0692     		str	r2, [sp, #24]
 218:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 178              		.loc 1 218 5 is_stmt 1 view .LVU34
 179              	.LVL4:
 219:Core/Src/main.c **** 
 220:Core/Src/main.c ****     // This function utilizes bit shifting to decreases the computational costs of division on deci
 221:Core/Src/main.c **** 
 222:Core/Src/main.c ****     // For the initial loop, x and y are zero so instead of computing it and lastly subtracting the
 223:Core/Src/main.c ****     // this code sets the initial starting point to the constant
ARM GAS  C:\Users\maraz\AppData\Local\Temp\cccbMrIa.s 			page 8


 224:Core/Src/main.c ****     const int32_t x_left = -( (5 * ONE) / 2 ); // -2.5 as x starting point
 180              		.loc 1 224 5 view .LVU35
 225:Core/Src/main.c ****     const int32_t y_top  = -ONE;               // -1.0 as y starting point
 181              		.loc 1 225 5 view .LVU36
 226:Core/Src/main.c **** 
 227:Core/Src/main.c ****     // Instead of recomputing x*... and y*..., we just add the multiplication each loop as it would
 228:Core/Src/main.c ****     // This way addition uses less computational power than multiplication
 229:Core/Src/main.c ****     const int32_t x_step = (int32_t)(((int64_t)7 * ONE) / (2 * width));			// The 2 in the denominat
 182              		.loc 1 229 5 view .LVU37
 183              		.loc 1 229 62 is_stmt 0 view .LVU38
 184 0014 4200     		lsls	r2, r0, #1
 185              	.LVL5:
 186              		.loc 1 229 62 view .LVU39
 187 0016 D317     		asrs	r3, r2, #31
 188              		.loc 1 229 57 view .LVU40
 189 0018 E020     		movs	r0, #224
 190              	.LVL6:
 191              		.loc 1 229 57 view .LVU41
 192 001a C002     		lsls	r0, r0, #11
 193 001c 0021     		movs	r1, #0
 194              	.LVL7:
 195              		.loc 1 229 57 view .LVU42
 196 001e FFF7FEFF 		bl	__aeabi_ldivmod
 197              	.LVL8:
 198              		.loc 1 229 19 view .LVU43
 199 0022 8146     		mov	r9, r0
 200              	.LVL9:
 230:Core/Src/main.c ****     const int32_t y_step = (int32_t)(((int64_t)2 * ONE) / height);				// Bit shift the top before d
 201              		.loc 1 230 5 is_stmt 1 view .LVU44
 202              		.loc 1 230 57 is_stmt 0 view .LVU45
 203 0024 4346     		mov	r3, r8
 204 0026 DB17     		asrs	r3, r3, #31
 205 0028 4246     		mov	r2, r8
 206 002a 8020     		movs	r0, #128
 207              	.LVL10:
 208              		.loc 1 230 57 view .LVU46
 209 002c 8002     		lsls	r0, r0, #10
 210 002e 0021     		movs	r1, #0
 211              	.LVL11:
 212              		.loc 1 230 57 view .LVU47
 213 0030 FFF7FEFF 		bl	__aeabi_ldivmod
 214              	.LVL12:
 231:Core/Src/main.c **** 
 232:Core/Src/main.c ****     const int32_t FOUR = 4 * ONE;				// for condition in while loop
 215              		.loc 1 232 5 is_stmt 1 view .LVU48
 233:Core/Src/main.c **** 
 234:Core/Src/main.c ****     int32_t y0 = y_top;				// starting constant
 216              		.loc 1 234 5 view .LVU49
 235:Core/Src/main.c ****     for (int y = 0; y < height; ++y) {
 217              		.loc 1 235 5 view .LVU50
 218              	.LBB7:
 219              		.loc 1 235 10 view .LVU51
 220              		.loc 1 235 14 is_stmt 0 view .LVU52
 221 0034 0025     		movs	r5, #0
 222              	.LBE7:
 234:Core/Src/main.c ****     for (int y = 0; y < height; ++y) {
 223              		.loc 1 234 13 view .LVU53
ARM GAS  C:\Users\maraz\AppData\Local\Temp\cccbMrIa.s 			page 9


 224 0036 464B     		ldr	r3, .L16
 225 0038 0793     		str	r3, [sp, #28]
 218:Core/Src/main.c **** 
 226              		.loc 1 218 14 view .LVU54
 227 003a 0023     		movs	r3, #0
 228 003c 0024     		movs	r4, #0
 229 003e 0A93     		str	r3, [sp, #40]
 230 0040 0B94     		str	r4, [sp, #44]
 231 0042 0F95     		str	r5, [sp, #60]
 232 0044 4B46     		mov	r3, r9
 233 0046 0E93     		str	r3, [sp, #56]
 234 0048 1190     		str	r0, [sp, #68]
 235 004a 0D97     		str	r7, [sp, #52]
 236 004c 4346     		mov	r3, r8
 237 004e 1093     		str	r3, [sp, #64]
 238              	.LBB16:
 239              		.loc 1 235 5 view .LVU55
 240 0050 6CE0     		b	.L5
 241              	.LVL13:
 242              	.L13:
 243              	.LBB8:
 244              	.LBB9:
 245              	.LBB10:
 246              	.LBB11:
 236:Core/Src/main.c ****         int32_t x0 = x_left;			// starting constant
 237:Core/Src/main.c **** 
 238:Core/Src/main.c ****         for (int x = 0; x < width; ++x) {
 239:Core/Src/main.c ****             int32_t xi = 0, yi = 0;
 240:Core/Src/main.c ****             int iteration = 0;
 241:Core/Src/main.c **** 
 242:Core/Src/main.c ****             while (iteration < max_iterations) {
 243:Core/Src/main.c ****                 int32_t xi2 = (int32_t)(((int64_t)xi * xi + (1 << (Q - 1))) >> Q);
 244:Core/Src/main.c ****                 int32_t yi2 = (int32_t)(((int64_t)yi * yi + (1 << (Q - 1))) >> Q);
 245:Core/Src/main.c **** 
 246:Core/Src/main.c ****                 // after calculating square values for this loop check if condition is still met
 247:Core/Src/main.c ****                 if ((int64_t)xi2 + yi2 > FOUR) break;
 248:Core/Src/main.c **** 
 249:Core/Src/main.c ****                 int32_t temp = xi2 - yi2 + x0;
 247              		.loc 1 249 17 is_stmt 1 view .LVU56
 248              		.loc 1 249 36 is_stmt 0 view .LVU57
 249 0052 A41A     		subs	r4, r4, r2
 250              	.LVL14:
 251              		.loc 1 249 25 view .LVU58
 252 0054 5444     		add	r4, r4, r10
 253              	.LVL15:
 250:Core/Src/main.c **** 
 251:Core/Src/main.c ****                 // Q is 2^16, so Q-1 = 2^15 to account for 2*xi*yi
 252:Core/Src/main.c ****                 yi = (int32_t)(((int64_t)xi * yi + (1 << (Q - 2))) >> (Q - 1)) + y0;
 254              		.loc 1 252 17 is_stmt 1 view .LVU59
 255              		.loc 1 252 45 is_stmt 0 view .LVU60
 256 0056 059A     		ldr	r2, [sp, #20]
 257              	.LVL16:
 258              		.loc 1 252 45 view .LVU61
 259 0058 4B46     		mov	r3, r9
 260 005a 0498     		ldr	r0, [sp, #16]
 261 005c 4146     		mov	r1, r8
 262 005e FFF7FEFF 		bl	__aeabi_lmul
ARM GAS  C:\Users\maraz\AppData\Local\Temp\cccbMrIa.s 			page 10


 263              	.LVL17:
 264              		.loc 1 252 50 view .LVU62
 265 0062 8022     		movs	r2, #128
 266 0064 D201     		lsls	r2, r2, #7
 267 0066 0023     		movs	r3, #0
 268 0068 8018     		adds	r0, r0, r2
 269 006a 5941     		adcs	r1, r1, r3
 270              		.loc 1 252 68 view .LVU63
 271 006c 4B04     		lsls	r3, r1, #17
 272 006e C00B     		lsrs	r0, r0, #15
 273 0070 1843     		orrs	r0, r3
 274              		.loc 1 252 20 view .LVU64
 275 0072 079B     		ldr	r3, [sp, #28]
 276 0074 C518     		adds	r5, r0, r3
 277              	.LVL18:
 253:Core/Src/main.c ****                 xi = temp;           // following mandelbrot.py
 278              		.loc 1 253 17 is_stmt 1 view .LVU65
 254:Core/Src/main.c **** 
 255:Core/Src/main.c ****                 ++iteration;
 279              		.loc 1 255 17 view .LVU66
 280 0076 0123     		movs	r3, #1
 281 0078 9C46     		mov	ip, r3
 282 007a E344     		add	fp, fp, ip
 283              	.LVL19:
 284              	.L9:
 285              		.loc 1 255 17 is_stmt 0 view .LVU67
 286              	.LBE11:
 242:Core/Src/main.c ****                 int32_t xi2 = (int32_t)(((int64_t)xi * xi + (1 << (Q - 1))) >> Q);
 287              		.loc 1 242 30 is_stmt 1 view .LVU68
 288 007c 069B     		ldr	r3, [sp, #24]
 289 007e 9B45     		cmp	fp, r3
 290 0080 2FDA     		bge	.L6
 291              	.LBB12:
 243:Core/Src/main.c ****                 int32_t yi2 = (int32_t)(((int64_t)yi * yi + (1 << (Q - 1))) >> Q);
 292              		.loc 1 243 17 view .LVU69
 243:Core/Src/main.c ****                 int32_t yi2 = (int32_t)(((int64_t)yi * yi + (1 << (Q - 1))) >> Q);
 293              		.loc 1 243 42 is_stmt 0 view .LVU70
 294 0082 0494     		str	r4, [sp, #16]
 295 0084 E317     		asrs	r3, r4, #31
 296 0086 9846     		mov	r8, r3
 243:Core/Src/main.c ****                 int32_t yi2 = (int32_t)(((int64_t)yi * yi + (1 << (Q - 1))) >> Q);
 297              		.loc 1 243 54 view .LVU71
 298 0088 2200     		movs	r2, r4
 299 008a 2000     		movs	r0, r4
 300 008c 1900     		movs	r1, r3
 301 008e FFF7FEFF 		bl	__aeabi_lmul
 302              	.LVL20:
 243:Core/Src/main.c ****                 int32_t yi2 = (int32_t)(((int64_t)yi * yi + (1 << (Q - 1))) >> Q);
 303              		.loc 1 243 59 view .LVU72
 304 0092 8026     		movs	r6, #128
 305 0094 3602     		lsls	r6, r6, #8
 306 0096 0027     		movs	r7, #0
 307 0098 8019     		adds	r0, r0, r6
 308 009a 7941     		adcs	r1, r1, r7
 243:Core/Src/main.c ****                 int32_t yi2 = (int32_t)(((int64_t)yi * yi + (1 << (Q - 1))) >> Q);
 309              		.loc 1 243 77 view .LVU73
 310 009c 0C04     		lsls	r4, r1, #16
ARM GAS  C:\Users\maraz\AppData\Local\Temp\cccbMrIa.s 			page 11


 311              	.LVL21:
 243:Core/Src/main.c ****                 int32_t yi2 = (int32_t)(((int64_t)yi * yi + (1 << (Q - 1))) >> Q);
 312              		.loc 1 243 77 view .LVU74
 313 009e 000C     		lsrs	r0, r0, #16
 314 00a0 0443     		orrs	r4, r0
 315              	.LVL22:
 244:Core/Src/main.c **** 
 316              		.loc 1 244 17 is_stmt 1 view .LVU75
 244:Core/Src/main.c **** 
 317              		.loc 1 244 42 is_stmt 0 view .LVU76
 318 00a2 0595     		str	r5, [sp, #20]
 319 00a4 EB17     		asrs	r3, r5, #31
 320 00a6 9946     		mov	r9, r3
 244:Core/Src/main.c **** 
 321              		.loc 1 244 54 view .LVU77
 322 00a8 2A00     		movs	r2, r5
 323 00aa 2800     		movs	r0, r5
 324 00ac 1900     		movs	r1, r3
 325 00ae FFF7FEFF 		bl	__aeabi_lmul
 326              	.LVL23:
 244:Core/Src/main.c **** 
 327              		.loc 1 244 59 view .LVU78
 328 00b2 8019     		adds	r0, r0, r6
 329 00b4 7941     		adcs	r1, r1, r7
 244:Core/Src/main.c **** 
 330              		.loc 1 244 77 view .LVU79
 331 00b6 0A04     		lsls	r2, r1, #16
 332 00b8 000C     		lsrs	r0, r0, #16
 333 00ba 0243     		orrs	r2, r0
 334              	.LVL24:
 247:Core/Src/main.c **** 
 335              		.loc 1 247 17 is_stmt 1 view .LVU80
 247:Core/Src/main.c **** 
 336              		.loc 1 247 21 is_stmt 0 view .LVU81
 337 00bc 0094     		str	r4, [sp]
 338 00be E317     		asrs	r3, r4, #31
 339 00c0 0193     		str	r3, [sp, #4]
 247:Core/Src/main.c **** 
 340              		.loc 1 247 34 view .LVU82
 341 00c2 0292     		str	r2, [sp, #8]
 342 00c4 D317     		asrs	r3, r2, #31
 343 00c6 0393     		str	r3, [sp, #12]
 344 00c8 029E     		ldr	r6, [sp, #8]
 345 00ca 039F     		ldr	r7, [sp, #12]
 346 00cc 0098     		ldr	r0, [sp]
 347 00ce 0199     		ldr	r1, [sp, #4]
 348 00d0 3618     		adds	r6, r6, r0
 349 00d2 4F41     		adcs	r7, r7, r1
 247:Core/Src/main.c **** 
 350              		.loc 1 247 20 view .LVU83
 351 00d4 002F     		cmp	r7, #0
 352 00d6 04DC     		bgt	.L6
 353 00d8 BBD1     		bne	.L13
 354 00da 8023     		movs	r3, #128
 355 00dc DB02     		lsls	r3, r3, #11
 356 00de 9E42     		cmp	r6, r3
 357 00e0 B7D9     		bls	.L13
ARM GAS  C:\Users\maraz\AppData\Local\Temp\cccbMrIa.s 			page 12


 358              	.LVL25:
 359              	.L6:
 247:Core/Src/main.c **** 
 360              		.loc 1 247 20 view .LVU84
 361              	.LBE12:
 256:Core/Src/main.c ****             }
 257:Core/Src/main.c **** 
 258:Core/Src/main.c ****             mandelbrot_sum += iteration;
 362              		.loc 1 258 28 view .LVU85
 363 00e2 D146     		mov	r9, r10
 364              		.loc 1 258 13 is_stmt 1 view .LVU86
 365              		.loc 1 258 28 is_stmt 0 view .LVU87
 366 00e4 5B46     		mov	r3, fp
 367 00e6 0893     		str	r3, [sp, #32]
 368 00e8 DB17     		asrs	r3, r3, #31
 369 00ea 0993     		str	r3, [sp, #36]
 370 00ec 0A9B     		ldr	r3, [sp, #40]
 371 00ee 0B9C     		ldr	r4, [sp, #44]
 372 00f0 0899     		ldr	r1, [sp, #32]
 373 00f2 099A     		ldr	r2, [sp, #36]
 374 00f4 5B18     		adds	r3, r3, r1
 375 00f6 5441     		adcs	r4, r4, r2
 376 00f8 0A93     		str	r3, [sp, #40]
 377 00fa 0B94     		str	r4, [sp, #44]
 378              	.LVL26:
 259:Core/Src/main.c ****             x0 += x_step; // add step instead of multiplying new x value
 379              		.loc 1 259 13 is_stmt 1 view .LVU88
 380              		.loc 1 259 16 is_stmt 0 view .LVU89
 381 00fc 0E9B     		ldr	r3, [sp, #56]
 382              	.LVL27:
 383              		.loc 1 259 16 view .LVU90
 384 00fe 9C46     		mov	ip, r3
 385 0100 E144     		add	r9, r9, ip
 386              	.LVL28:
 387              		.loc 1 259 16 view .LVU91
 388              	.LBE10:
 238:Core/Src/main.c ****             int32_t xi = 0, yi = 0;
 389              		.loc 1 238 36 is_stmt 1 discriminator 2 view .LVU92
 390 0102 0C9B     		ldr	r3, [sp, #48]
 391 0104 0133     		adds	r3, r3, #1
 392 0106 0C93     		str	r3, [sp, #48]
 393              	.LVL29:
 394              	.L10:
 238:Core/Src/main.c ****             int32_t xi = 0, yi = 0;
 395              		.loc 1 238 27 discriminator 1 view .LVU93
 396 0108 0C9B     		ldr	r3, [sp, #48]
 397 010a 0D9A     		ldr	r2, [sp, #52]
 398 010c 9342     		cmp	r3, r2
 399 010e 05DA     		bge	.L14
 400              	.LBB13:
 240:Core/Src/main.c **** 
 401              		.loc 1 240 17 is_stmt 0 view .LVU94
 402 0110 0023     		movs	r3, #0
 239:Core/Src/main.c ****             int iteration = 0;
 403              		.loc 1 239 29 view .LVU95
 404 0112 9B46     		mov	fp, r3
 239:Core/Src/main.c ****             int iteration = 0;
ARM GAS  C:\Users\maraz\AppData\Local\Temp\cccbMrIa.s 			page 13


 405              		.loc 1 239 21 view .LVU96
 406 0114 0024     		movs	r4, #0
 407 0116 1D00     		movs	r5, r3
 408 0118 CA46     		mov	r10, r9
 409 011a AFE7     		b	.L9
 410              	.LVL30:
 411              	.L14:
 239:Core/Src/main.c ****             int iteration = 0;
 412              		.loc 1 239 21 view .LVU97
 413              	.LBE13:
 414              	.LBE9:
 260:Core/Src/main.c ****         }
 261:Core/Src/main.c ****         y0 += y_step;     // add step instead of multiplying new y value
 415              		.loc 1 261 9 is_stmt 1 view .LVU98
 416              		.loc 1 261 12 is_stmt 0 view .LVU99
 417 011c 079B     		ldr	r3, [sp, #28]
 418              	.LVL31:
 419              		.loc 1 261 12 view .LVU100
 420 011e 119A     		ldr	r2, [sp, #68]
 421 0120 9446     		mov	ip, r2
 422 0122 6344     		add	r3, r3, ip
 423 0124 0793     		str	r3, [sp, #28]
 424              	.LVL32:
 425              		.loc 1 261 12 view .LVU101
 426              	.LBE8:
 235:Core/Src/main.c ****         int32_t x0 = x_left;			// starting constant
 427              		.loc 1 235 33 is_stmt 1 discriminator 2 view .LVU102
 428 0126 0F9B     		ldr	r3, [sp, #60]
 429              	.LVL33:
 235:Core/Src/main.c ****         int32_t x0 = x_left;			// starting constant
 430              		.loc 1 235 33 is_stmt 0 discriminator 2 view .LVU103
 431 0128 0133     		adds	r3, r3, #1
 432 012a 0F93     		str	r3, [sp, #60]
 433              	.LVL34:
 434              	.L5:
 235:Core/Src/main.c ****         int32_t x0 = x_left;			// starting constant
 435              		.loc 1 235 23 is_stmt 1 discriminator 1 view .LVU104
 436 012c 0F9B     		ldr	r3, [sp, #60]
 437 012e 109A     		ldr	r2, [sp, #64]
 438 0130 9342     		cmp	r3, r2
 439 0132 04DA     		bge	.L15
 440              	.LBB15:
 441              	.LBB14:
 238:Core/Src/main.c ****             int32_t xi = 0, yi = 0;
 442              		.loc 1 238 18 is_stmt 0 view .LVU105
 443 0134 0026     		movs	r6, #0
 444              	.LBE14:
 236:Core/Src/main.c **** 
 445              		.loc 1 236 17 view .LVU106
 446 0136 074B     		ldr	r3, .L16+4
 447 0138 9946     		mov	r9, r3
 448 013a 0C96     		str	r6, [sp, #48]
 449 013c E4E7     		b	.L10
 450              	.LVL35:
 451              	.L15:
 236:Core/Src/main.c **** 
 452              		.loc 1 236 17 view .LVU107
ARM GAS  C:\Users\maraz\AppData\Local\Temp\cccbMrIa.s 			page 14


 453              	.LBE15:
 454              	.LBE16:
 262:Core/Src/main.c ****     }
 263:Core/Src/main.c **** 
 264:Core/Src/main.c ****     return mandelbrot_sum;
 455              		.loc 1 264 5 is_stmt 1 view .LVU108
 265:Core/Src/main.c **** }
 456              		.loc 1 265 1 is_stmt 0 view .LVU109
 457 013e 0A98     		ldr	r0, [sp, #40]
 458 0140 0B99     		ldr	r1, [sp, #44]
 459 0142 13B0     		add	sp, sp, #76
 460              		@ sp needed
 461 0144 F0BC     		pop	{r4, r5, r6, r7}
 462 0146 BB46     		mov	fp, r7
 463 0148 B246     		mov	r10, r6
 464 014a A946     		mov	r9, r5
 465 014c A046     		mov	r8, r4
 466 014e F0BD     		pop	{r4, r5, r6, r7, pc}
 467              	.L17:
 468              		.align	2
 469              	.L16:
 470 0150 0000FFFF 		.word	-65536
 471 0154 0080FDFF 		.word	-163840
 472              		.cfi_endproc
 473              	.LFE43:
 475              		.global	__aeabi_i2d
 476              		.global	__aeabi_ddiv
 477              		.global	__aeabi_dmul
 478              		.global	__aeabi_dsub
 479              		.global	__aeabi_dadd
 480              		.global	__aeabi_dcmpgt
 481              		.section	.text.calculate_mandelbrot_double,"ax",%progbits
 482              		.align	1
 483              		.global	calculate_mandelbrot_double
 484              		.syntax unified
 485              		.code	16
 486              		.thumb_func
 488              	calculate_mandelbrot_double:
 489              	.LVL36:
 490              	.LFB44:
 266:Core/Src/main.c **** 
 267:Core/Src/main.c **** 
 268:Core/Src/main.c **** //TODO: Mandelbroat using variable type double
 269:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations)
 270:Core/Src/main.c **** {
 491              		.loc 1 270 1 is_stmt 1 view -0
 492              		.cfi_startproc
 493              		@ args = 0, pretend = 0, frame = 64
 494              		@ frame_needed = 0, uses_anonymous_args = 0
 495              		.loc 1 270 1 is_stmt 0 view .LVU111
 496 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 497              	.LCFI5:
 498              		.cfi_def_cfa_offset 20
 499              		.cfi_offset 4, -20
 500              		.cfi_offset 5, -16
 501              		.cfi_offset 6, -12
 502              		.cfi_offset 7, -8
ARM GAS  C:\Users\maraz\AppData\Local\Temp\cccbMrIa.s 			page 15


 503              		.cfi_offset 14, -4
 504 0002 DE46     		mov	lr, fp
 505 0004 5746     		mov	r7, r10
 506 0006 4E46     		mov	r6, r9
 507 0008 4546     		mov	r5, r8
 508 000a E0B5     		push	{r5, r6, r7, lr}
 509              	.LCFI6:
 510              		.cfi_def_cfa_offset 36
 511              		.cfi_offset 8, -36
 512              		.cfi_offset 9, -32
 513              		.cfi_offset 10, -28
 514              		.cfi_offset 11, -24
 515 000c 91B0     		sub	sp, sp, #68
 516              	.LCFI7:
 517              		.cfi_def_cfa_offset 104
 518 000e 8346     		mov	fp, r0
 519 0010 0F91     		str	r1, [sp, #60]
 520 0012 9146     		mov	r9, r2
 271:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 521              		.loc 1 271 5 is_stmt 1 view .LVU112
 522              	.LVL37:
 272:Core/Src/main.c ****     //TODO: Complete the function implementation
 273:Core/Src/main.c ****     checksum = 0;
 523              		.loc 1 273 5 view .LVU113
 524              		.loc 1 273 14 is_stmt 0 view .LVU114
 525 0014 5749     		ldr	r1, .L29
 526              	.LVL38:
 527              		.loc 1 273 14 view .LVU115
 528 0016 0022     		movs	r2, #0
 529              	.LVL39:
 530              		.loc 1 273 14 view .LVU116
 531 0018 0023     		movs	r3, #0
 532 001a 0A60     		str	r2, [r1]
 533 001c 4B60     		str	r3, [r1, #4]
 274:Core/Src/main.c ****     for (int y = 0; y < height; y++)
 534              		.loc 1 274 5 is_stmt 1 view .LVU117
 535              	.LBB17:
 536              		.loc 1 274 10 view .LVU118
 537              	.LVL40:
 538              		.loc 1 274 14 is_stmt 0 view .LVU119
 539 001e 0023     		movs	r3, #0
 540 0020 0E93     		str	r3, [sp, #56]
 541              	.LBE17:
 271:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 542              		.loc 1 271 14 view .LVU120
 543 0022 0023     		movs	r3, #0
 544 0024 0024     		movs	r4, #0
 545 0026 0C93     		str	r3, [sp, #48]
 546 0028 0D94     		str	r4, [sp, #52]
 547 002a 4B46     		mov	r3, r9
 548 002c 0593     		str	r3, [sp, #20]
 549              	.LBB24:
 550              		.loc 1 274 5 view .LVU121
 551 002e 8DE0     		b	.L19
 552              	.LVL41:
 553              	.L26:
 554              	.LBB18:
ARM GAS  C:\Users\maraz\AppData\Local\Temp\cccbMrIa.s 			page 16


 555              	.LBB19:
 556              	.LBB20:
 275:Core/Src/main.c ****     {
 276:Core/Src/main.c ****     	for (int x = 0; x < width ; x++)
 277:Core/Src/main.c ****     	{
 278:Core/Src/main.c ****     		double x_0 = ((double)x/width)*3.5 - 2.5;
 279:Core/Src/main.c ****     		double y_0 = (double)y/height * 2.0 - 1.0;
 280:Core/Src/main.c **** 
 281:Core/Src/main.c ****     		double x_i = 0;
 282:Core/Src/main.c ****     		double y_i = 0;
 283:Core/Src/main.c ****     		int iteration = 0;
 284:Core/Src/main.c **** 
 285:Core/Src/main.c **** 
 286:Core/Src/main.c ****     		while (iteration < max_iterations)
 287:Core/Src/main.c ****     		{
 288:Core/Src/main.c **** 
 289:Core/Src/main.c ****     			double x_i_sq = x_i*x_i;
 290:Core/Src/main.c ****     			double y_i_sq = y_i*y_i;
 291:Core/Src/main.c **** 
 292:Core/Src/main.c ****     			if(x_i_sq + y_i_sq > 4.0)
 293:Core/Src/main.c ****     			{
 294:Core/Src/main.c ****     				break;
 295:Core/Src/main.c ****     			}
 296:Core/Src/main.c ****     			double temp  = x_i_sq - y_i_sq;
 557              		.loc 1 296 8 is_stmt 1 view .LVU122
 558              		.loc 1 296 15 is_stmt 0 view .LVU123
 559 0030 029A     		ldr	r2, [sp, #8]
 560 0032 039B     		ldr	r3, [sp, #12]
 561 0034 0098     		ldr	r0, [sp]
 562 0036 0199     		ldr	r1, [sp, #4]
 563 0038 FFF7FEFF 		bl	__aeabi_dsub
 564              	.LVL42:
 565 003c 0090     		str	r0, [sp]
 566 003e 0191     		str	r1, [sp, #4]
 567              	.LVL43:
 297:Core/Src/main.c ****     			y_i = 2.0*x_i*y_i + y_0;
 568              		.loc 1 297 8 is_stmt 1 view .LVU124
 569              		.loc 1 297 17 is_stmt 0 view .LVU125
 570 0040 3200     		movs	r2, r6
 571 0042 3B00     		movs	r3, r7
 572 0044 3000     		movs	r0, r6
 573              	.LVL44:
 574              		.loc 1 297 17 view .LVU126
 575 0046 3900     		movs	r1, r7
 576 0048 FFF7FEFF 		bl	__aeabi_dadd
 577              	.LVL45:
 578              		.loc 1 297 21 view .LVU127
 579 004c 2200     		movs	r2, r4
 580 004e 2B00     		movs	r3, r5
 581 0050 FFF7FEFF 		bl	__aeabi_dmul
 582              	.LVL46:
 583              		.loc 1 297 12 view .LVU128
 584 0054 089A     		ldr	r2, [sp, #32]
 585 0056 099B     		ldr	r3, [sp, #36]
 586 0058 FFF7FEFF 		bl	__aeabi_dadd
 587              	.LVL47:
 588 005c 0400     		movs	r4, r0
ARM GAS  C:\Users\maraz\AppData\Local\Temp\cccbMrIa.s 			page 17


 589              	.LVL48:
 590              		.loc 1 297 12 view .LVU129
 591 005e 0D00     		movs	r5, r1
 592              	.LVL49:
 298:Core/Src/main.c **** 
 299:Core/Src/main.c ****     			x_i = temp + x_0;
 593              		.loc 1 299 8 is_stmt 1 view .LVU130
 594              		.loc 1 299 12 is_stmt 0 view .LVU131
 595 0060 009A     		ldr	r2, [sp]
 596 0062 019B     		ldr	r3, [sp, #4]
 597 0064 0698     		ldr	r0, [sp, #24]
 598 0066 0799     		ldr	r1, [sp, #28]
 599 0068 FFF7FEFF 		bl	__aeabi_dadd
 600              	.LVL50:
 601 006c 0600     		movs	r6, r0
 602              	.LVL51:
 603              		.loc 1 299 12 view .LVU132
 604 006e 0F00     		movs	r7, r1
 605              	.LVL52:
 300:Core/Src/main.c **** 
 301:Core/Src/main.c ****     			iteration = iteration +1;
 606              		.loc 1 301 8 is_stmt 1 view .LVU133
 607              		.loc 1 301 18 is_stmt 0 view .LVU134
 608 0070 0123     		movs	r3, #1
 609 0072 9C46     		mov	ip, r3
 610 0074 E044     		add	r8, r8, ip
 611              	.LVL53:
 612              	.L20:
 613              		.loc 1 301 18 view .LVU135
 614              	.LBE20:
 286:Core/Src/main.c ****     		{
 615              		.loc 1 286 24 is_stmt 1 view .LVU136
 616 0076 059B     		ldr	r3, [sp, #20]
 617 0078 9845     		cmp	r8, r3
 618 007a 1BDA     		bge	.L21
 619              	.LBB21:
 289:Core/Src/main.c ****     			double y_i_sq = y_i*y_i;
 620              		.loc 1 289 8 view .LVU137
 289:Core/Src/main.c ****     			double y_i_sq = y_i*y_i;
 621              		.loc 1 289 15 is_stmt 0 view .LVU138
 622 007c 3200     		movs	r2, r6
 623 007e 3B00     		movs	r3, r7
 624 0080 3000     		movs	r0, r6
 625 0082 3900     		movs	r1, r7
 626 0084 FFF7FEFF 		bl	__aeabi_dmul
 627              	.LVL54:
 628 0088 0090     		str	r0, [sp]
 629 008a 0191     		str	r1, [sp, #4]
 630              	.LVL55:
 290:Core/Src/main.c **** 
 631              		.loc 1 290 8 is_stmt 1 view .LVU139
 290:Core/Src/main.c **** 
 632              		.loc 1 290 15 is_stmt 0 view .LVU140
 633 008c 2200     		movs	r2, r4
 634 008e 2B00     		movs	r3, r5
 635 0090 2000     		movs	r0, r4
 636              	.LVL56:
ARM GAS  C:\Users\maraz\AppData\Local\Temp\cccbMrIa.s 			page 18


 290:Core/Src/main.c **** 
 637              		.loc 1 290 15 view .LVU141
 638 0092 2900     		movs	r1, r5
 639 0094 FFF7FEFF 		bl	__aeabi_dmul
 640              	.LVL57:
 641 0098 0200     		movs	r2, r0
 642 009a 0B00     		movs	r3, r1
 643              	.LVL58:
 292:Core/Src/main.c ****     			{
 644              		.loc 1 292 8 is_stmt 1 view .LVU142
 292:Core/Src/main.c ****     			{
 645              		.loc 1 292 18 is_stmt 0 view .LVU143
 646 009c 0292     		str	r2, [sp, #8]
 647 009e 0393     		str	r3, [sp, #12]
 648 00a0 0098     		ldr	r0, [sp]
 649 00a2 0199     		ldr	r1, [sp, #4]
 650 00a4 FFF7FEFF 		bl	__aeabi_dadd
 651              	.LVL59:
 292:Core/Src/main.c ****     			{
 652              		.loc 1 292 10 view .LVU144
 653 00a8 0022     		movs	r2, #0
 654 00aa 334B     		ldr	r3, .L29+4
 655 00ac FFF7FEFF 		bl	__aeabi_dcmpgt
 656              	.LVL60:
 657 00b0 0028     		cmp	r0, #0
 658 00b2 BDD0     		beq	.L26
 659              	.LVL61:
 660              	.L21:
 292:Core/Src/main.c ****     			{
 661              		.loc 1 292 10 view .LVU145
 662              	.LBE21:
 302:Core/Src/main.c **** 
 303:Core/Src/main.c ****     		}
 304:Core/Src/main.c **** 
 305:Core/Src/main.c ****     		mandelbrot_sum = mandelbrot_sum + iteration;
 663              		.loc 1 305 39 view .LVU146
 664 00b4 4346     		mov	r3, r8
 665              		.loc 1 305 7 is_stmt 1 view .LVU147
 666              		.loc 1 305 39 is_stmt 0 view .LVU148
 667 00b6 0A93     		str	r3, [sp, #40]
 668 00b8 DB17     		asrs	r3, r3, #31
 669 00ba 0B93     		str	r3, [sp, #44]
 670              		.loc 1 305 22 view .LVU149
 671 00bc 0C9B     		ldr	r3, [sp, #48]
 672 00be 0D9C     		ldr	r4, [sp, #52]
 673 00c0 0A99     		ldr	r1, [sp, #40]
 674 00c2 0B9A     		ldr	r2, [sp, #44]
 675 00c4 5B18     		adds	r3, r3, r1
 676 00c6 5441     		adcs	r4, r4, r2
 677 00c8 0C93     		str	r3, [sp, #48]
 678 00ca 0D94     		str	r4, [sp, #52]
 679              	.LVL62:
 680              		.loc 1 305 22 view .LVU150
 681              	.LBE19:
 276:Core/Src/main.c ****     	{
 682              		.loc 1 276 35 is_stmt 1 discriminator 2 view .LVU151
 683 00cc 0123     		movs	r3, #1
ARM GAS  C:\Users\maraz\AppData\Local\Temp\cccbMrIa.s 			page 19


 684              	.LVL63:
 276:Core/Src/main.c ****     	{
 685              		.loc 1 276 35 is_stmt 0 discriminator 2 view .LVU152
 686 00ce 9C46     		mov	ip, r3
 687 00d0 E344     		add	fp, fp, ip
 688              	.LVL64:
 689              	.L24:
 276:Core/Src/main.c ****     	{
 690              		.loc 1 276 24 is_stmt 1 discriminator 1 view .LVU153
 691 00d2 CB45     		cmp	fp, r9
 692 00d4 36DA     		bge	.L27
 693              	.LBB22:
 278:Core/Src/main.c ****     		double y_0 = (double)y/height * 2.0 - 1.0;
 694              		.loc 1 278 7 view .LVU154
 278:Core/Src/main.c ****     		double y_0 = (double)y/height * 2.0 - 1.0;
 695              		.loc 1 278 21 is_stmt 0 view .LVU155
 696 00d6 5846     		mov	r0, fp
 697 00d8 FFF7FEFF 		bl	__aeabi_i2d
 698              	.LVL65:
 699 00dc 0400     		movs	r4, r0
 700 00de 0D00     		movs	r5, r1
 278:Core/Src/main.c ****     		double y_0 = (double)y/height * 2.0 - 1.0;
 701              		.loc 1 278 30 view .LVU156
 702 00e0 4846     		mov	r0, r9
 703 00e2 FFF7FEFF 		bl	__aeabi_i2d
 704              	.LVL66:
 705 00e6 0200     		movs	r2, r0
 706 00e8 0B00     		movs	r3, r1
 707 00ea 2000     		movs	r0, r4
 708 00ec 2900     		movs	r1, r5
 709 00ee FFF7FEFF 		bl	__aeabi_ddiv
 710              	.LVL67:
 278:Core/Src/main.c ****     		double y_0 = (double)y/height * 2.0 - 1.0;
 711              		.loc 1 278 37 view .LVU157
 712 00f2 0022     		movs	r2, #0
 713 00f4 214B     		ldr	r3, .L29+8
 714 00f6 FFF7FEFF 		bl	__aeabi_dmul
 715              	.LVL68:
 278:Core/Src/main.c ****     		double y_0 = (double)y/height * 2.0 - 1.0;
 716              		.loc 1 278 14 view .LVU158
 717 00fa 0022     		movs	r2, #0
 718 00fc 204B     		ldr	r3, .L29+12
 719 00fe FFF7FEFF 		bl	__aeabi_dsub
 720              	.LVL69:
 721 0102 0690     		str	r0, [sp, #24]
 722 0104 0791     		str	r1, [sp, #28]
 723              	.LVL70:
 279:Core/Src/main.c **** 
 724              		.loc 1 279 7 is_stmt 1 view .LVU159
 279:Core/Src/main.c **** 
 725              		.loc 1 279 20 is_stmt 0 view .LVU160
 726 0106 0E98     		ldr	r0, [sp, #56]
 727              	.LVL71:
 279:Core/Src/main.c **** 
 728              		.loc 1 279 20 view .LVU161
 729 0108 FFF7FEFF 		bl	__aeabi_i2d
 730              	.LVL72:
ARM GAS  C:\Users\maraz\AppData\Local\Temp\cccbMrIa.s 			page 20


 731 010c 0400     		movs	r4, r0
 732 010e 0D00     		movs	r5, r1
 279:Core/Src/main.c **** 
 733              		.loc 1 279 29 view .LVU162
 734 0110 5046     		mov	r0, r10
 735 0112 FFF7FEFF 		bl	__aeabi_i2d
 736              	.LVL73:
 737 0116 0200     		movs	r2, r0
 738 0118 0B00     		movs	r3, r1
 739 011a 2000     		movs	r0, r4
 740 011c 2900     		movs	r1, r5
 741 011e FFF7FEFF 		bl	__aeabi_ddiv
 742              	.LVL74:
 279:Core/Src/main.c **** 
 743              		.loc 1 279 37 view .LVU163
 744 0122 0200     		movs	r2, r0
 745 0124 0B00     		movs	r3, r1
 746 0126 FFF7FEFF 		bl	__aeabi_dadd
 747              	.LVL75:
 279:Core/Src/main.c **** 
 748              		.loc 1 279 14 view .LVU164
 749 012a 0022     		movs	r2, #0
 750 012c 154B     		ldr	r3, .L29+16
 751 012e FFF7FEFF 		bl	__aeabi_dsub
 752              	.LVL76:
 753 0132 0890     		str	r0, [sp, #32]
 754 0134 0991     		str	r1, [sp, #36]
 755              	.LVL77:
 281:Core/Src/main.c ****     		double y_i = 0;
 756              		.loc 1 281 7 is_stmt 1 view .LVU165
 282:Core/Src/main.c ****     		int iteration = 0;
 757              		.loc 1 282 7 view .LVU166
 283:Core/Src/main.c **** 
 758              		.loc 1 283 7 view .LVU167
 286:Core/Src/main.c ****     		{
 759              		.loc 1 286 7 view .LVU168
 283:Core/Src/main.c **** 
 760              		.loc 1 283 11 is_stmt 0 view .LVU169
 761 0136 0023     		movs	r3, #0
 282:Core/Src/main.c ****     		int iteration = 0;
 762              		.loc 1 282 14 view .LVU170
 763 0138 0024     		movs	r4, #0
 764 013a 0025     		movs	r5, #0
 281:Core/Src/main.c ****     		double y_i = 0;
 765              		.loc 1 281 14 view .LVU171
 766 013c 2600     		movs	r6, r4
 767 013e 2F00     		movs	r7, r5
 768 0140 9846     		mov	r8, r3
 286:Core/Src/main.c ****     		{
 769              		.loc 1 286 13 view .LVU172
 770 0142 98E7     		b	.L20
 771              	.LVL78:
 772              	.L27:
 286:Core/Src/main.c ****     		{
 773              		.loc 1 286 13 view .LVU173
 774              	.LBE22:
 775              	.LBE18:
ARM GAS  C:\Users\maraz\AppData\Local\Temp\cccbMrIa.s 			page 21


 274:Core/Src/main.c ****     {
 776              		.loc 1 274 34 discriminator 2 view .LVU174
 777 0144 CB46     		mov	fp, r9
 778              	.LVL79:
 274:Core/Src/main.c ****     {
 779              		.loc 1 274 34 is_stmt 1 discriminator 2 view .LVU175
 780 0146 0E9B     		ldr	r3, [sp, #56]
 781 0148 0133     		adds	r3, r3, #1
 782 014a 0E93     		str	r3, [sp, #56]
 783              	.LVL80:
 784              	.L19:
 274:Core/Src/main.c ****     {
 785              		.loc 1 274 23 discriminator 1 view .LVU176
 786 014c 0E9B     		ldr	r3, [sp, #56]
 787 014e 0F9A     		ldr	r2, [sp, #60]
 788 0150 9342     		cmp	r3, r2
 789 0152 05DA     		bge	.L28
 790              	.LBB23:
 276:Core/Src/main.c ****     	{
 791              		.loc 1 276 15 is_stmt 0 view .LVU177
 792 0154 0023     		movs	r3, #0
 793 0156 D946     		mov	r9, fp
 794 0158 9B46     		mov	fp, r3
 795              	.LVL81:
 276:Core/Src/main.c ****     	{
 796              		.loc 1 276 15 view .LVU178
 797 015a 0F9B     		ldr	r3, [sp, #60]
 798 015c 9A46     		mov	r10, r3
 799 015e B8E7     		b	.L24
 800              	.LVL82:
 801              	.L28:
 276:Core/Src/main.c ****     	{
 802              		.loc 1 276 15 view .LVU179
 803              	.LBE23:
 804              	.LBE24:
 306:Core/Src/main.c **** 
 307:Core/Src/main.c ****     	}
 308:Core/Src/main.c ****     }
 309:Core/Src/main.c ****     //checksum = mandelbrot_sum;
 310:Core/Src/main.c ****     return mandelbrot_sum;
 805              		.loc 1 310 5 is_stmt 1 view .LVU180
 311:Core/Src/main.c **** }
 806              		.loc 1 311 1 is_stmt 0 view .LVU181
 807 0160 0C98     		ldr	r0, [sp, #48]
 808 0162 0D99     		ldr	r1, [sp, #52]
 809 0164 11B0     		add	sp, sp, #68
 810              		@ sp needed
 811              	.LVL83:
 812              		.loc 1 311 1 view .LVU182
 813 0166 F0BC     		pop	{r4, r5, r6, r7}
 814 0168 BB46     		mov	fp, r7
 815 016a B246     		mov	r10, r6
 816 016c A946     		mov	r9, r5
 817 016e A046     		mov	r8, r4
 818 0170 F0BD     		pop	{r4, r5, r6, r7, pc}
 819              	.L30:
 820 0172 C046     		.align	2
ARM GAS  C:\Users\maraz\AppData\Local\Temp\cccbMrIa.s 			page 22


 821              	.L29:
 822 0174 00000000 		.word	checksum
 823 0178 00001040 		.word	1074790400
 824 017c 00000C40 		.word	1074528256
 825 0180 00000440 		.word	1074003968
 826 0184 0000F03F 		.word	1072693248
 827              		.cfi_endproc
 828              	.LFE44:
 830              		.section	.text.Error_Handler,"ax",%progbits
 831              		.align	1
 832              		.global	Error_Handler
 833              		.syntax unified
 834              		.code	16
 835              		.thumb_func
 837              	Error_Handler:
 838              	.LFB45:
 312:Core/Src/main.c **** 
 313:Core/Src/main.c **** /* USER CODE END 4 */
 314:Core/Src/main.c **** 
 315:Core/Src/main.c **** /**
 316:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 317:Core/Src/main.c ****   * @retval None
 318:Core/Src/main.c ****   */
 319:Core/Src/main.c **** void Error_Handler(void)
 320:Core/Src/main.c **** {
 839              		.loc 1 320 1 is_stmt 1 view -0
 840              		.cfi_startproc
 841              		@ Volatile: function does not return.
 842              		@ args = 0, pretend = 0, frame = 0
 843              		@ frame_needed = 0, uses_anonymous_args = 0
 844              		@ link register save eliminated.
 321:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 322:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 323:Core/Src/main.c ****   __disable_irq();
 845              		.loc 1 323 3 view .LVU184
 846              	.LBB25:
 847              	.LBI25:
 848              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
ARM GAS  C:\Users\maraz\AppData\Local\Temp\cccbMrIa.s 			page 23


  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
ARM GAS  C:\Users\maraz\AppData\Local\Temp\cccbMrIa.s 			page 24


  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\maraz\AppData\Local\Temp\cccbMrIa.s 			page 25


 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 849              		.loc 2 140 27 view .LVU185
 850              	.LBB26:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 851              		.loc 2 142 3 view .LVU186
 852              		.syntax divided
 853              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 854 0000 72B6     		cpsid i
 855              	@ 0 "" 2
 856              		.thumb
 857              		.syntax unified
 858              	.L32:
 859              	.LBE26:
 860              	.LBE25:
 324:Core/Src/main.c ****   while (1)
 861              		.loc 1 324 3 view .LVU187
 325:Core/Src/main.c ****   {
 326:Core/Src/main.c ****   }
 862              		.loc 1 326 3 view .LVU188
 324:Core/Src/main.c ****   while (1)
 863              		.loc 1 324 9 view .LVU189
 864 0002 FEE7     		b	.L32
 865              		.cfi_endproc
 866              	.LFE45:
 868              		.section	.text.SystemClock_Config,"ax",%progbits
 869              		.align	1
 870              		.global	SystemClock_Config
 871              		.syntax unified
 872              		.code	16
 873              		.thumb_func
 875              	SystemClock_Config:
 876              	.LFB41:
 146:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 877              		.loc 1 146 1 view -0
 878              		.cfi_startproc
 879              		@ args = 0, pretend = 0, frame = 64
 880              		@ frame_needed = 0, uses_anonymous_args = 0
 881 0000 00B5     		push	{lr}
 882              	.LCFI8:
 883              		.cfi_def_cfa_offset 4
 884              		.cfi_offset 14, -4
 885 0002 91B0     		sub	sp, sp, #68
 886              	.LCFI9:
 887              		.cfi_def_cfa_offset 72
 147:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 888              		.loc 1 147 3 view .LVU191
 147:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 889              		.loc 1 147 22 is_stmt 0 view .LVU192
 890 0004 3022     		movs	r2, #48
 891 0006 0021     		movs	r1, #0
ARM GAS  C:\Users\maraz\AppData\Local\Temp\cccbMrIa.s 			page 26


 892 0008 04A8     		add	r0, sp, #16
 893 000a FFF7FEFF 		bl	memset
 894              	.LVL84:
 148:Core/Src/main.c **** 
 895              		.loc 1 148 3 is_stmt 1 view .LVU193
 148:Core/Src/main.c **** 
 896              		.loc 1 148 22 is_stmt 0 view .LVU194
 897 000e 1022     		movs	r2, #16
 898 0010 0021     		movs	r1, #0
 899 0012 6846     		mov	r0, sp
 900 0014 FFF7FEFF 		bl	memset
 901              	.LVL85:
 153:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 902              		.loc 1 153 3 is_stmt 1 view .LVU195
 153:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 903              		.loc 1 153 36 is_stmt 0 view .LVU196
 904 0018 0223     		movs	r3, #2
 905 001a 0493     		str	r3, [sp, #16]
 154:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 906              		.loc 1 154 3 is_stmt 1 view .LVU197
 154:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 907              		.loc 1 154 30 is_stmt 0 view .LVU198
 908 001c 0122     		movs	r2, #1
 909 001e 0792     		str	r2, [sp, #28]
 155:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 910              		.loc 1 155 3 is_stmt 1 view .LVU199
 155:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 911              		.loc 1 155 41 is_stmt 0 view .LVU200
 912 0020 0F32     		adds	r2, r2, #15
 913 0022 0892     		str	r2, [sp, #32]
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 914              		.loc 1 156 3 is_stmt 1 view .LVU201
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 915              		.loc 1 156 34 is_stmt 0 view .LVU202
 916 0024 0C93     		str	r3, [sp, #48]
 157:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL12;
 917              		.loc 1 157 3 is_stmt 1 view .LVU203
 158:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 918              		.loc 1 158 3 view .LVU204
 158:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 919              		.loc 1 158 32 is_stmt 0 view .LVU205
 920 0026 A023     		movs	r3, #160
 921 0028 9B03     		lsls	r3, r3, #14
 922 002a 0E93     		str	r3, [sp, #56]
 159:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 923              		.loc 1 159 3 is_stmt 1 view .LVU206
 160:Core/Src/main.c ****   {
 924              		.loc 1 160 3 view .LVU207
 160:Core/Src/main.c ****   {
 925              		.loc 1 160 7 is_stmt 0 view .LVU208
 926 002c 04A8     		add	r0, sp, #16
 927 002e FFF7FEFF 		bl	HAL_RCC_OscConfig
 928              	.LVL86:
 160:Core/Src/main.c ****   {
 929              		.loc 1 160 6 discriminator 1 view .LVU209
 930 0032 0028     		cmp	r0, #0
 931 0034 0ED1     		bne	.L36
ARM GAS  C:\Users\maraz\AppData\Local\Temp\cccbMrIa.s 			page 27


 167:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 932              		.loc 1 167 3 is_stmt 1 view .LVU210
 167:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 933              		.loc 1 167 31 is_stmt 0 view .LVU211
 934 0036 0723     		movs	r3, #7
 935 0038 0093     		str	r3, [sp]
 169:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 936              		.loc 1 169 3 is_stmt 1 view .LVU212
 169:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 937              		.loc 1 169 34 is_stmt 0 view .LVU213
 938 003a 053B     		subs	r3, r3, #5
 939 003c 0193     		str	r3, [sp, #4]
 170:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 940              		.loc 1 170 3 is_stmt 1 view .LVU214
 170:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 941              		.loc 1 170 35 is_stmt 0 view .LVU215
 942 003e 0023     		movs	r3, #0
 943 0040 0293     		str	r3, [sp, #8]
 171:Core/Src/main.c **** 
 944              		.loc 1 171 3 is_stmt 1 view .LVU216
 171:Core/Src/main.c **** 
 945              		.loc 1 171 36 is_stmt 0 view .LVU217
 946 0042 0393     		str	r3, [sp, #12]
 173:Core/Src/main.c ****   {
 947              		.loc 1 173 3 is_stmt 1 view .LVU218
 173:Core/Src/main.c ****   {
 948              		.loc 1 173 7 is_stmt 0 view .LVU219
 949 0044 0121     		movs	r1, #1
 950 0046 6846     		mov	r0, sp
 951 0048 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 952              	.LVL87:
 173:Core/Src/main.c ****   {
 953              		.loc 1 173 6 discriminator 1 view .LVU220
 954 004c 0028     		cmp	r0, #0
 955 004e 03D1     		bne	.L37
 177:Core/Src/main.c **** 
 956              		.loc 1 177 1 view .LVU221
 957 0050 11B0     		add	sp, sp, #68
 958              		@ sp needed
 959 0052 00BD     		pop	{pc}
 960              	.L36:
 162:Core/Src/main.c ****   }
 961              		.loc 1 162 5 is_stmt 1 view .LVU222
 962 0054 FFF7FEFF 		bl	Error_Handler
 963              	.LVL88:
 964              	.L37:
 175:Core/Src/main.c ****   }
 965              		.loc 1 175 5 view .LVU223
 966 0058 FFF7FEFF 		bl	Error_Handler
 967              	.LVL89:
 968              		.cfi_endproc
 969              	.LFE41:
 971              		.section	.text.main,"ax",%progbits
 972              		.align	1
 973              		.global	main
 974              		.syntax unified
 975              		.code	16
ARM GAS  C:\Users\maraz\AppData\Local\Temp\cccbMrIa.s 			page 28


 976              		.thumb_func
 978              	main:
 979              	.LFB40:
  82:Core/Src/main.c **** 
 980              		.loc 1 82 1 view -0
 981              		.cfi_startproc
 982              		@ Volatile: function does not return.
 983              		@ args = 0, pretend = 0, frame = 0
 984              		@ frame_needed = 0, uses_anonymous_args = 0
 985 0000 10B5     		push	{r4, lr}
 986              	.LCFI10:
 987              		.cfi_def_cfa_offset 8
 988              		.cfi_offset 4, -8
 989              		.cfi_offset 14, -4
  91:Core/Src/main.c **** 
 990              		.loc 1 91 3 view .LVU225
 991 0002 FFF7FEFF 		bl	HAL_Init
 992              	.LVL90:
  98:Core/Src/main.c **** 
 993              		.loc 1 98 3 view .LVU226
 994 0006 FFF7FEFF 		bl	SystemClock_Config
 995              	.LVL91:
 105:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 996              		.loc 1 105 3 view .LVU227
 997 000a FFF7FEFF 		bl	MX_GPIO_Init
 998              	.LVL92:
 999              	.L39:
 112:Core/Src/main.c ****   {
 1000              		.loc 1 112 3 view .LVU228
 118:Core/Src/main.c **** 
 1001              		.loc 1 118 7 view .LVU229
 1002 000e 0D4C     		ldr	r4, .L40
 1003 0010 0122     		movs	r2, #1
 1004 0012 0121     		movs	r1, #1
 1005 0014 2000     		movs	r0, r4
 1006 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1007              	.LVL93:
 125:Core/Src/main.c **** 
 1008              		.loc 1 125 7 view .LVU230
 1009 001a 0122     		movs	r2, #1
 1010 001c 0221     		movs	r1, #2
 1011 001e 2000     		movs	r0, r4
 1012 0020 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1013              	.LVL94:
 129:Core/Src/main.c **** 
 1014              		.loc 1 129 7 view .LVU231
 1015 0024 FA20     		movs	r0, #250
 1016 0026 8000     		lsls	r0, r0, #2
 1017 0028 FFF7FEFF 		bl	HAL_Delay
 1018              	.LVL95:
 132:Core/Src/main.c **** 	  	  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 1019              		.loc 1 132 7 view .LVU232
 1020 002c 0022     		movs	r2, #0
 1021 002e 0121     		movs	r1, #1
 1022 0030 2000     		movs	r0, r4
 1023 0032 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1024              	.LVL96:
ARM GAS  C:\Users\maraz\AppData\Local\Temp\cccbMrIa.s 			page 29


 133:Core/Src/main.c **** 
 1025              		.loc 1 133 7 discriminator 1 view .LVU233
 1026 0036 0022     		movs	r2, #0
 1027 0038 0221     		movs	r1, #2
 1028 003a 2000     		movs	r0, r4
 1029 003c FFF7FEFF 		bl	HAL_GPIO_WritePin
 1030              	.LVL97:
 112:Core/Src/main.c ****   {
 1031              		.loc 1 112 9 view .LVU234
 1032 0040 E5E7     		b	.L39
 1033              	.L41:
 1034 0042 C046     		.align	2
 1035              	.L40:
 1036 0044 00040048 		.word	1207960576
 1037              		.cfi_endproc
 1038              	.LFE40:
 1040              		.global	initial_width
 1041              		.section	.data.initial_width,"aw"
 1042              		.align	2
 1045              	initial_width:
 1046 0000 80000000 		.word	128
 1047              		.global	initial_height
 1048              		.section	.data.initial_height,"aw"
 1049              		.align	2
 1052              	initial_height:
 1053 0000 80000000 		.word	128
 1054              		.global	execution_time
 1055              		.section	.bss.execution_time,"aw",%nobits
 1056              		.align	3
 1059              	execution_time:
 1060 0000 00000000 		.space	8
 1060      00000000 
 1061              		.global	checksum
 1062              		.section	.bss.checksum,"aw",%nobits
 1063              		.align	3
 1066              	checksum:
 1067 0000 00000000 		.space	8
 1067      00000000 
 1068              		.global	imageDimensions
 1069              		.section	.data.imageDimensions,"aw"
 1070              		.align	2
 1073              	imageDimensions:
 1074 0000 80000000 		.word	128
 1075 0004 A0000000 		.word	160
 1076 0008 C0000000 		.word	192
 1077 000c E0000000 		.word	224
 1078 0010 00010000 		.word	256
 1079              		.global	end_time
 1080              		.section	.bss.end_time,"aw",%nobits
 1081              		.align	3
 1084              	end_time:
 1085 0000 00000000 		.space	8
 1085      00000000 
 1086              		.global	start_time
 1087              		.section	.bss.start_time,"aw",%nobits
 1088              		.align	3
 1091              	start_time:
ARM GAS  C:\Users\maraz\AppData\Local\Temp\cccbMrIa.s 			page 30


 1092 0000 00000000 		.space	8
 1092      00000000 
 1093              		.text
 1094              	.Letext0:
 1095              		.file 3 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1096              		.file 4 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1097              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f051x8.h"
 1098              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 1099              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 1100              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 1101              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 1102              		.file 10 "<built-in>"
ARM GAS  C:\Users\maraz\AppData\Local\Temp\cccbMrIa.s 			page 31


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\maraz\AppData\Local\Temp\cccbMrIa.s:19     .text.MX_GPIO_Init:00000000 $t
C:\Users\maraz\AppData\Local\Temp\cccbMrIa.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\maraz\AppData\Local\Temp\cccbMrIa.s:131    .text.MX_GPIO_Init:0000006c $d
C:\Users\maraz\AppData\Local\Temp\cccbMrIa.s:139    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 $t
C:\Users\maraz\AppData\Local\Temp\cccbMrIa.s:145    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 calculate_mandelbrot_fixed_point_arithmetic
C:\Users\maraz\AppData\Local\Temp\cccbMrIa.s:470    .text.calculate_mandelbrot_fixed_point_arithmetic:00000150 $d
C:\Users\maraz\AppData\Local\Temp\cccbMrIa.s:482    .text.calculate_mandelbrot_double:00000000 $t
C:\Users\maraz\AppData\Local\Temp\cccbMrIa.s:488    .text.calculate_mandelbrot_double:00000000 calculate_mandelbrot_double
C:\Users\maraz\AppData\Local\Temp\cccbMrIa.s:822    .text.calculate_mandelbrot_double:00000174 $d
C:\Users\maraz\AppData\Local\Temp\cccbMrIa.s:1066   .bss.checksum:00000000 checksum
C:\Users\maraz\AppData\Local\Temp\cccbMrIa.s:831    .text.Error_Handler:00000000 $t
C:\Users\maraz\AppData\Local\Temp\cccbMrIa.s:837    .text.Error_Handler:00000000 Error_Handler
C:\Users\maraz\AppData\Local\Temp\cccbMrIa.s:869    .text.SystemClock_Config:00000000 $t
C:\Users\maraz\AppData\Local\Temp\cccbMrIa.s:875    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\maraz\AppData\Local\Temp\cccbMrIa.s:972    .text.main:00000000 $t
C:\Users\maraz\AppData\Local\Temp\cccbMrIa.s:978    .text.main:00000000 main
C:\Users\maraz\AppData\Local\Temp\cccbMrIa.s:1036   .text.main:00000044 $d
C:\Users\maraz\AppData\Local\Temp\cccbMrIa.s:1045   .data.initial_width:00000000 initial_width
C:\Users\maraz\AppData\Local\Temp\cccbMrIa.s:1042   .data.initial_width:00000000 $d
C:\Users\maraz\AppData\Local\Temp\cccbMrIa.s:1052   .data.initial_height:00000000 initial_height
C:\Users\maraz\AppData\Local\Temp\cccbMrIa.s:1049   .data.initial_height:00000000 $d
C:\Users\maraz\AppData\Local\Temp\cccbMrIa.s:1059   .bss.execution_time:00000000 execution_time
C:\Users\maraz\AppData\Local\Temp\cccbMrIa.s:1056   .bss.execution_time:00000000 $d
C:\Users\maraz\AppData\Local\Temp\cccbMrIa.s:1063   .bss.checksum:00000000 $d
C:\Users\maraz\AppData\Local\Temp\cccbMrIa.s:1073   .data.imageDimensions:00000000 imageDimensions
C:\Users\maraz\AppData\Local\Temp\cccbMrIa.s:1070   .data.imageDimensions:00000000 $d
C:\Users\maraz\AppData\Local\Temp\cccbMrIa.s:1084   .bss.end_time:00000000 end_time
C:\Users\maraz\AppData\Local\Temp\cccbMrIa.s:1081   .bss.end_time:00000000 $d
C:\Users\maraz\AppData\Local\Temp\cccbMrIa.s:1091   .bss.start_time:00000000 start_time
C:\Users\maraz\AppData\Local\Temp\cccbMrIa.s:1088   .bss.start_time:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_WritePin
HAL_GPIO_Init
__aeabi_ldivmod
__aeabi_lmul
__aeabi_i2d
__aeabi_ddiv
__aeabi_dmul
__aeabi_dsub
__aeabi_dadd
__aeabi_dcmpgt
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_Delay
