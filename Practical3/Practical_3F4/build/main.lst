ARM GAS  C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.SystemClock_Config,"ax",%progbits
  21              		.align	1
  22              		.global	SystemClock_Config
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	SystemClock_Config:
  28              	.LFB138:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "stm32f4xx_hal.h"
  22:Core/Src/main.c **** #include <stdint.h>
  23:Core/Src/main.c **** #include <stdio.h>
  24:Core/Src/main.c **** #include "core_cm4.h"
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  27:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* USER CODE END Includes */
  30:Core/Src/main.c **** 
ARM GAS  C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s 			page 2


  31:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  32:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* USER CODE END PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PD */
  38:Core/Src/main.c **** #define MAX_ITER 100
  39:Core/Src/main.c **** #define SCALE 1000000
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** // for bit shifting in the fixed point arithmetic function
  42:Core/Src/main.c **** #define Q   16			// scale factor
  43:Core/Src/main.c **** #define ONE (1 << Q)	// division by scale factor
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE END PD */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  48:Core/Src/main.c **** /* USER CODE BEGIN PM */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* USER CODE END PM */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* USER CODE BEGIN PV */
  55:Core/Src/main.c **** //TODO: Define variables you think you might need
  56:Core/Src/main.c **** // - Performance timing variables (e.g execution time, throughput, pixels per second, clock cycles)
  57:Core/Src/main.c **** uint64_t start_time = 0;
  58:Core/Src/main.c **** uint64_t end_time = 0;
  59:Core/Src/main.c **** int imageDimensions[5] = {128, 160, 192, 224, 256};
  60:Core/Src/main.c **** uint64_t checksum = 0;
  61:Core/Src/main.c **** uint64_t execution_time = 0;
  62:Core/Src/main.c **** int initial_height = 128;
  63:Core/Src/main.c **** int initial_width = 128;
  64:Core/Src/main.c **** volatile double time_sec;
  65:Core/Src/main.c **** volatile uint32_t total_runtime_ms;
  66:Core/Src/main.c **** uint64_t  checkSumArr[5] = {0};
  67:Core/Src/main.c **** uint64_t execution_timeArr[5] = {0};
  68:Core/Src/main.c **** //volatile uint64_t cycles;
  69:Core/Src/main.c **** //volatile double throughput;
  70:Core/Src/main.c **** uint32_t runtime = 0;
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** /* USER CODE END PV */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  76:Core/Src/main.c **** void SystemClock_Config(void);
  77:Core/Src/main.c **** static void MX_GPIO_Init(void);
  78:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  79:Core/Src/main.c **** //TODO: Define any function prototypes you might need such as the calculate Mandelbrot function amo
  80:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations);
  81:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations);
  82:Core/Src/main.c **** uint64_t calculate_mandelbrot_float(int width, int height, int max_iterations);
  83:Core/Src/main.c **** static inline void cycle_counter_init(void);
  84:Core/Src/main.c **** static inline uint32_t cycle_counter_get(void);
  85:Core/Src/main.c **** static inline uint64_t cycle_diff(uint32_t start, uint32_t end);
  86:Core/Src/main.c **** 
  87:Core/Src/main.c **** /* USER CODE END PFP */
ARM GAS  C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s 			page 3


  88:Core/Src/main.c **** 
  89:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  90:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  91:Core/Src/main.c **** 
  92:Core/Src/main.c **** /* USER CODE END 0 */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c **** /**
  95:Core/Src/main.c ****   * @brief  The application entry point.
  96:Core/Src/main.c ****   * @retval int
  97:Core/Src/main.c ****   */
  98:Core/Src/main.c **** int main(void)
  99:Core/Src/main.c **** {
 100:Core/Src/main.c **** 
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****   /* USER CODE END 1 */
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 109:Core/Src/main.c ****   HAL_Init();
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   /* USER CODE END Init */
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   /* Configure the system clock */
 116:Core/Src/main.c ****   SystemClock_Config();
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****   /* USER CODE END SysInit */
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   /* Initialize all configured peripherals */
 123:Core/Src/main.c ****   MX_GPIO_Init();
 124:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****   //uint32_t program_start = HAL_GetTick();
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****   uint32_t start, end;
 129:Core/Src/main.c **** 
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****    cycle_counter_init();
 132:Core/Src/main.c **** 
 133:Core/Src/main.c ****    for(int i = 0; i < 5; i++)
 134:Core/Src/main.c ****    {
 135:Core/Src/main.c **** 
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****    start_time = HAL_GetTick();
 138:Core/Src/main.c ****    start = DWT->CYCCNT;
 139:Core/Src/main.c **** 
 140:Core/Src/main.c **** 
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****    //uint32_t pixels = initial_height*initial_width;
 143:Core/Src/main.c ****    //getting the start cycle to get the cycle count
 144:Core/Src/main.c ****    uint32_t start_cycle = cycle_counter_get();
ARM GAS  C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s 			page 4


 145:Core/Src/main.c **** 
 146:Core/Src/main.c **** 
 147:Core/Src/main.c ****     //TODO: Call the Mandelbrot Function and store the output in the checksum variable defined init
 148:Core/Src/main.c ****     //checksum = calculate_mandelbrot_fixed_point_arithmetic(imageDimensions[i], imageDimensions[i]
 149:Core/Src/main.c ****     //checksum = calculate_mandelbrot_double(imageDimensions[i], imageDimensions[i], MAX_ITER);
 150:Core/Src/main.c ****    checkSumArr[i] = calculate_mandelbrot_float(imageDimensions[i], imageDimensions[i], MAX_ITER);
 151:Core/Src/main.c **** 
 152:Core/Src/main.c ****     //TODO: Record the end time
 153:Core/Src/main.c ****    end_time = HAL_GetTick();
 154:Core/Src/main.c **** 
 155:Core/Src/main.c **** 
 156:Core/Src/main.c ****    end = DWT->CYCCNT;
 157:Core/Src/main.c ****    uint32_t cycles = end - start;
 158:Core/Src/main.c ****    time_sec = (double)cycles / SystemCoreClock;
 159:Core/Src/main.c **** 
 160:Core/Src/main.c **** 
 161:Core/Src/main.c **** 
 162:Core/Src/main.c **** 
 163:Core/Src/main.c **** 
 164:Core/Src/main.c ****    //getting the end cycle to get the cycle count
 165:Core/Src/main.c ****    uint32_t end_cycle = cycle_counter_get();
 166:Core/Src/main.c **** 
 167:Core/Src/main.c ****     cycles = cycle_diff(start_cycle,end_cycle);
 168:Core/Src/main.c **** 
 169:Core/Src/main.c ****     //TODO: Calculate the execution time
 170:Core/Src/main.c ****    execution_timeArr[i] = end_time - start_time;
 171:Core/Src/main.c **** 
 172:Core/Src/main.c ****    //throughput = (double)pixels / ((double)execution_time / 1000.0);
 173:Core/Src/main.c **** 
 174:Core/Src/main.c ****    }
 175:Core/Src/main.c ****     //TODO: Turn on LED 1 to signify the end of the operation
 176:Core/Src/main.c ****    HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_SET);
 177:Core/Src/main.c **** 
 178:Core/Src/main.c ****     //TODO: Hold the LEDs on for a 1s delay
 179:Core/Src/main.c ****    HAL_Delay(1000);
 180:Core/Src/main.c **** 
 181:Core/Src/main.c ****     //TODO: Turn off the LEDs
 182:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET);
 183:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 184:Core/Src/main.c **** 
 185:Core/Src/main.c ****     runtime = HAL_GetTick();
 186:Core/Src/main.c **** 
 187:Core/Src/main.c ****   /* USER CODE END 2 */
 188:Core/Src/main.c **** 
 189:Core/Src/main.c ****   /* Infinite loop */
 190:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 191:Core/Src/main.c ****   while (1)
 192:Core/Src/main.c ****   {
 193:Core/Src/main.c ****     /* USER CODE END WHILE */
 194:Core/Src/main.c **** 
 195:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 196:Core/Src/main.c **** 	  //TODO: Visual indicator: Turn on LED0 to signal processing start
 197:Core/Src/main.c **** 	  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);
 198:Core/Src/main.c **** 
 199:Core/Src/main.c **** 
 200:Core/Src/main.c **** 	  //TODO: Benchmark and Profile Performance
 201:Core/Src/main.c **** 
ARM GAS  C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s 			page 5


 202:Core/Src/main.c **** 
 203:Core/Src/main.c **** 	  //TODO: Visual indicator: Turn on LED1 to signal processing start
 204:Core/Src/main.c **** 	  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_SET);
 205:Core/Src/main.c **** 
 206:Core/Src/main.c **** 
 207:Core/Src/main.c **** 	  //TODO: Keep the LEDs ON for 2s
 208:Core/Src/main.c **** 	  HAL_Delay(1000);
 209:Core/Src/main.c **** 
 210:Core/Src/main.c **** 	  //TODO: Turn OFF LEDs
 211:Core/Src/main.c **** 	  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET);
 212:Core/Src/main.c **** 	  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 213:Core/Src/main.c ****   }
 214:Core/Src/main.c ****   /* USER CODE END 3 */
 215:Core/Src/main.c **** 
 216:Core/Src/main.c **** 
 217:Core/Src/main.c ****   //total_runtime_ms = program_end - program_start;
 218:Core/Src/main.c **** }
 219:Core/Src/main.c **** 
 220:Core/Src/main.c **** /**
 221:Core/Src/main.c ****   * @brief System Clock Configuration
 222:Core/Src/main.c ****   * @retval None
 223:Core/Src/main.c ****   */
 224:Core/Src/main.c **** void SystemClock_Config(void)
 225:Core/Src/main.c **** {
  29              		.loc 1 225 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 80
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 00B5     		push	{lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 14, -4
  37 0002 95B0     		sub	sp, sp, #84
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 88
 226:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  40              		.loc 1 226 3 view .LVU1
  41              		.loc 1 226 22 is_stmt 0 view .LVU2
  42 0004 3422     		movs	r2, #52
  43 0006 0021     		movs	r1, #0
  44 0008 07A8     		add	r0, sp, #28
  45 000a FFF7FEFF 		bl	memset
  46              	.LVL0:
 227:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  47              		.loc 1 227 3 is_stmt 1 view .LVU3
  48              		.loc 1 227 22 is_stmt 0 view .LVU4
  49 000e 0023     		movs	r3, #0
  50 0010 0293     		str	r3, [sp, #8]
  51 0012 0393     		str	r3, [sp, #12]
  52 0014 0493     		str	r3, [sp, #16]
  53 0016 0593     		str	r3, [sp, #20]
  54 0018 0693     		str	r3, [sp, #24]
 228:Core/Src/main.c **** 
 229:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 230:Core/Src/main.c ****   */
 231:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
  55              		.loc 1 231 3 is_stmt 1 view .LVU5
ARM GAS  C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s 			page 6


  56              	.LBB24:
  57              		.loc 1 231 3 view .LVU6
  58 001a 0093     		str	r3, [sp]
  59              		.loc 1 231 3 view .LVU7
  60 001c 214A     		ldr	r2, .L9
  61 001e 116C     		ldr	r1, [r2, #64]
  62 0020 41F08051 		orr	r1, r1, #268435456
  63 0024 1164     		str	r1, [r2, #64]
  64              		.loc 1 231 3 view .LVU8
  65 0026 126C     		ldr	r2, [r2, #64]
  66 0028 02F08052 		and	r2, r2, #268435456
  67 002c 0092     		str	r2, [sp]
  68              		.loc 1 231 3 view .LVU9
  69 002e 009A     		ldr	r2, [sp]
  70              	.LBE24:
  71              		.loc 1 231 3 view .LVU10
 232:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
  72              		.loc 1 232 3 view .LVU11
  73              	.LBB25:
  74              		.loc 1 232 3 view .LVU12
  75 0030 0193     		str	r3, [sp, #4]
  76              		.loc 1 232 3 view .LVU13
  77 0032 1D4A     		ldr	r2, .L9+4
  78 0034 1368     		ldr	r3, [r2]
  79 0036 23F44043 		bic	r3, r3, #49152
  80 003a 43F48043 		orr	r3, r3, #16384
  81 003e 1360     		str	r3, [r2]
  82              		.loc 1 232 3 view .LVU14
  83 0040 1368     		ldr	r3, [r2]
  84 0042 03F44043 		and	r3, r3, #49152
  85 0046 0193     		str	r3, [sp, #4]
  86              		.loc 1 232 3 view .LVU15
  87 0048 019B     		ldr	r3, [sp, #4]
  88              	.LBE25:
  89              		.loc 1 232 3 view .LVU16
 233:Core/Src/main.c **** 
 234:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 235:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 236:Core/Src/main.c ****   */
 237:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
  90              		.loc 1 237 3 view .LVU17
  91              		.loc 1 237 36 is_stmt 0 view .LVU18
  92 004a 0123     		movs	r3, #1
  93 004c 0793     		str	r3, [sp, #28]
 238:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  94              		.loc 1 238 3 is_stmt 1 view .LVU19
  95              		.loc 1 238 30 is_stmt 0 view .LVU20
  96 004e 4FF48033 		mov	r3, #65536
  97 0052 0893     		str	r3, [sp, #32]
 239:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  98              		.loc 1 239 3 is_stmt 1 view .LVU21
  99              		.loc 1 239 34 is_stmt 0 view .LVU22
 100 0054 0223     		movs	r3, #2
 101 0056 0D93     		str	r3, [sp, #52]
 240:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 102              		.loc 1 240 3 is_stmt 1 view .LVU23
 103              		.loc 1 240 35 is_stmt 0 view .LVU24
ARM GAS  C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s 			page 7


 104 0058 4FF48002 		mov	r2, #4194304
 105 005c 0E92     		str	r2, [sp, #56]
 241:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 15;
 106              		.loc 1 241 3 is_stmt 1 view .LVU25
 107              		.loc 1 241 30 is_stmt 0 view .LVU26
 108 005e 0F22     		movs	r2, #15
 109 0060 0F92     		str	r2, [sp, #60]
 242:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 110              		.loc 1 242 3 is_stmt 1 view .LVU27
 111              		.loc 1 242 30 is_stmt 0 view .LVU28
 112 0062 9022     		movs	r2, #144
 113 0064 1092     		str	r2, [sp, #64]
 243:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 114              		.loc 1 243 3 is_stmt 1 view .LVU29
 115              		.loc 1 243 30 is_stmt 0 view .LVU30
 116 0066 1193     		str	r3, [sp, #68]
 244:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 117              		.loc 1 244 3 is_stmt 1 view .LVU31
 118              		.loc 1 244 30 is_stmt 0 view .LVU32
 119 0068 1293     		str	r3, [sp, #72]
 245:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 120              		.loc 1 245 3 is_stmt 1 view .LVU33
 121              		.loc 1 245 30 is_stmt 0 view .LVU34
 122 006a 1393     		str	r3, [sp, #76]
 246:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 123              		.loc 1 246 3 is_stmt 1 view .LVU35
 124              		.loc 1 246 7 is_stmt 0 view .LVU36
 125 006c 07A8     		add	r0, sp, #28
 126 006e FFF7FEFF 		bl	HAL_RCC_OscConfig
 127              	.LVL1:
 128              		.loc 1 246 6 discriminator 1 view .LVU37
 129 0072 98B9     		cbnz	r0, .L7
 247:Core/Src/main.c ****   {
 248:Core/Src/main.c ****     Error_Handler();
 249:Core/Src/main.c ****   }
 250:Core/Src/main.c **** 
 251:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 252:Core/Src/main.c ****   */
 253:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 130              		.loc 1 253 3 is_stmt 1 view .LVU38
 131              		.loc 1 253 31 is_stmt 0 view .LVU39
 132 0074 0F23     		movs	r3, #15
 133 0076 0293     		str	r3, [sp, #8]
 254:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 255:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 134              		.loc 1 255 3 is_stmt 1 view .LVU40
 135              		.loc 1 255 34 is_stmt 0 view .LVU41
 136 0078 0223     		movs	r3, #2
 137 007a 0393     		str	r3, [sp, #12]
 256:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 138              		.loc 1 256 3 is_stmt 1 view .LVU42
 139              		.loc 1 256 35 is_stmt 0 view .LVU43
 140 007c 0023     		movs	r3, #0
 141 007e 0493     		str	r3, [sp, #16]
 257:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 142              		.loc 1 257 3 is_stmt 1 view .LVU44
 143              		.loc 1 257 36 is_stmt 0 view .LVU45
ARM GAS  C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s 			page 8


 144 0080 4FF4A053 		mov	r3, #5120
 145 0084 0593     		str	r3, [sp, #20]
 258:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 146              		.loc 1 258 3 is_stmt 1 view .LVU46
 147              		.loc 1 258 36 is_stmt 0 view .LVU47
 148 0086 4FF48053 		mov	r3, #4096
 149 008a 0693     		str	r3, [sp, #24]
 259:Core/Src/main.c **** 
 260:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 150              		.loc 1 260 3 is_stmt 1 view .LVU48
 151              		.loc 1 260 7 is_stmt 0 view .LVU49
 152 008c 0321     		movs	r1, #3
 153 008e 02A8     		add	r0, sp, #8
 154 0090 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 155              	.LVL2:
 156              		.loc 1 260 6 discriminator 1 view .LVU50
 157 0094 20B9     		cbnz	r0, .L8
 261:Core/Src/main.c ****   {
 262:Core/Src/main.c ****     Error_Handler();
 263:Core/Src/main.c ****   }
 264:Core/Src/main.c **** }
 158              		.loc 1 264 1 view .LVU51
 159 0096 15B0     		add	sp, sp, #84
 160              	.LCFI2:
 161              		.cfi_remember_state
 162              		.cfi_def_cfa_offset 4
 163              		@ sp needed
 164 0098 5DF804FB 		ldr	pc, [sp], #4
 165              	.L7:
 166              	.LCFI3:
 167              		.cfi_restore_state
 248:Core/Src/main.c ****   }
 168              		.loc 1 248 5 is_stmt 1 view .LVU52
 169              	.LBB26:
 170              	.LBI26:
 265:Core/Src/main.c **** 
 266:Core/Src/main.c **** /**
 267:Core/Src/main.c ****   * @brief GPIO Initialization Function
 268:Core/Src/main.c ****   * @param None
 269:Core/Src/main.c ****   * @retval None
 270:Core/Src/main.c ****   */
 271:Core/Src/main.c **** static void MX_GPIO_Init(void)
 272:Core/Src/main.c **** {
 273:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 274:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 275:Core/Src/main.c **** 
 276:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 277:Core/Src/main.c **** 
 278:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 279:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 280:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 281:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 282:Core/Src/main.c **** 
 283:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 284:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 285:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7, GPIO_PIN_RESET);
 286:Core/Src/main.c **** 
ARM GAS  C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s 			page 9


 287:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 PB2 PB3
 288:Core/Src/main.c ****                            PB4 PB5 PB6 PB7 */
 289:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 290:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 291:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 292:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 293:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 294:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 295:Core/Src/main.c **** 
 296:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_2 */
 297:Core/Src/main.c **** 
 298:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
 299:Core/Src/main.c **** }
 300:Core/Src/main.c **** 
 301:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 302:Core/Src/main.c **** //TODO: Function signatures you defined previously , implement them here
 303:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations)
 304:Core/Src/main.c **** {
 305:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 306:Core/Src/main.c **** 
 307:Core/Src/main.c ****     // This function utilizes bit shifting to decreases the computational costs of division on deci
 308:Core/Src/main.c **** 
 309:Core/Src/main.c ****     // For the initial loop, x and y are zero so instead of computing it and lastly subtracting the
 310:Core/Src/main.c ****     // this code sets the initial starting point to the constant
 311:Core/Src/main.c ****     const int32_t x_left = -( (5 * ONE) / 2 ); // -2.5 as x starting point
 312:Core/Src/main.c ****     const int32_t y_top  = -ONE;               // -1.0 as y starting point
 313:Core/Src/main.c **** 
 314:Core/Src/main.c ****     // Instead of recomputing x*... and y*..., we just add the multiplication each loop as it would
 315:Core/Src/main.c ****     // This way addition uses less computational power than multiplication
 316:Core/Src/main.c ****     const int32_t x_step = (int32_t)(((int64_t)7 * ONE) / (2 * width));			// The 2 in the denominat
 317:Core/Src/main.c ****     const int32_t y_step = (int32_t)(((int64_t)2 * ONE) / height);				// Bit shift the top before d
 318:Core/Src/main.c **** 
 319:Core/Src/main.c ****     const int32_t FOUR = 4 * ONE;				// for condition in while loop
 320:Core/Src/main.c **** 
 321:Core/Src/main.c ****     int32_t y0 = y_top;				// starting constant
 322:Core/Src/main.c ****     for (int y = 0; y < height; ++y) {
 323:Core/Src/main.c ****         int32_t x0 = x_left;			// starting constant
 324:Core/Src/main.c **** 
 325:Core/Src/main.c ****         for (int x = 0; x < width; ++x) {
 326:Core/Src/main.c ****             int32_t xi = 0, yi = 0;
 327:Core/Src/main.c ****             int iteration = 0;
 328:Core/Src/main.c **** 
 329:Core/Src/main.c ****             while (iteration < max_iterations) {
 330:Core/Src/main.c ****                 int32_t xi2 = (int32_t)(((int64_t)xi * xi + (1 << (Q - 1))) >> Q);
 331:Core/Src/main.c ****                 int32_t yi2 = (int32_t)(((int64_t)yi * yi + (1 << (Q - 1))) >> Q);
 332:Core/Src/main.c **** 
 333:Core/Src/main.c ****                 // after calculating square values for this loop check if condition is still met
 334:Core/Src/main.c ****                 if ((int64_t)xi2 + yi2 > FOUR) break;
 335:Core/Src/main.c **** 
 336:Core/Src/main.c ****                 int32_t temp = xi2 - yi2 + x0;
 337:Core/Src/main.c **** 
 338:Core/Src/main.c ****                 // Q is 2^16, so Q-1 = 2^15 to account for 2*xi*yi
 339:Core/Src/main.c ****                 yi = (int32_t)(((int64_t)xi * yi + (1 << (Q - 2))) >> (Q - 1)) + y0;
 340:Core/Src/main.c ****                 xi = temp;           // following mandelbrot.py
 341:Core/Src/main.c **** 
 342:Core/Src/main.c ****                 ++iteration;
 343:Core/Src/main.c ****             }
ARM GAS  C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s 			page 10


 344:Core/Src/main.c **** 
 345:Core/Src/main.c ****             mandelbrot_sum += iteration;
 346:Core/Src/main.c ****             x0 += x_step; // add step instead of multiplying new x value
 347:Core/Src/main.c ****         }
 348:Core/Src/main.c ****         y0 += y_step;     // add step instead of multiplying new y value
 349:Core/Src/main.c ****     }
 350:Core/Src/main.c **** 
 351:Core/Src/main.c ****     return mandelbrot_sum;
 352:Core/Src/main.c **** }
 353:Core/Src/main.c **** 
 354:Core/Src/main.c **** uint64_t calculate_mandelbrot_float(int width, int height, int max_iterations)
 355:Core/Src/main.c **** {
 356:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 357:Core/Src/main.c ****     //TODO: Complete the function implementation
 358:Core/Src/main.c ****     checksum = 0;
 359:Core/Src/main.c ****     for (int y = 0; y < height; y++)
 360:Core/Src/main.c ****     {
 361:Core/Src/main.c ****         for (int x = 0; x < width ; x++)
 362:Core/Src/main.c ****         {
 363:Core/Src/main.c ****             float x_0 = ((float)x / width) * 3.5f - 2.5f;
 364:Core/Src/main.c ****             float y_0 = (float)y / height * 2.0f - 1.0f;
 365:Core/Src/main.c **** 
 366:Core/Src/main.c ****             float x_i = 0.0f;
 367:Core/Src/main.c ****             float y_i = 0.0f;
 368:Core/Src/main.c ****             int iteration = 0;
 369:Core/Src/main.c **** 
 370:Core/Src/main.c ****             while (iteration < max_iterations)
 371:Core/Src/main.c ****             {
 372:Core/Src/main.c ****                 float x_i_sq = x_i * x_i;
 373:Core/Src/main.c ****                 float y_i_sq = y_i * y_i;
 374:Core/Src/main.c **** 
 375:Core/Src/main.c ****                 if (x_i_sq + y_i_sq > 4.0f)
 376:Core/Src/main.c ****                 {
 377:Core/Src/main.c ****                     break;
 378:Core/Src/main.c ****                 }
 379:Core/Src/main.c ****                 float temp = x_i_sq - y_i_sq;
 380:Core/Src/main.c ****                 y_i = 2.0f * x_i * y_i + y_0;
 381:Core/Src/main.c **** 
 382:Core/Src/main.c ****                 x_i = temp + x_0;
 383:Core/Src/main.c **** 
 384:Core/Src/main.c ****                 iteration = iteration + 1;
 385:Core/Src/main.c ****             }
 386:Core/Src/main.c **** 
 387:Core/Src/main.c ****             mandelbrot_sum = mandelbrot_sum + iteration;
 388:Core/Src/main.c ****         }
 389:Core/Src/main.c ****     }
 390:Core/Src/main.c ****     //checksum = mandelbrot_sum;
 391:Core/Src/main.c ****     return mandelbrot_sum;
 392:Core/Src/main.c **** }
 393:Core/Src/main.c **** 
 394:Core/Src/main.c **** //TODO: Mandelbroat using variable type double
 395:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations)
 396:Core/Src/main.c **** {
 397:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 398:Core/Src/main.c ****     //TODO: Complete the function implementation
 399:Core/Src/main.c ****     checksum = 0;
 400:Core/Src/main.c ****     for (int y = 0; y < height; y++)
ARM GAS  C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s 			page 11


 401:Core/Src/main.c ****     {
 402:Core/Src/main.c ****     	for (int x = 0; x < width ; x++)
 403:Core/Src/main.c ****     	{
 404:Core/Src/main.c ****     		double x_0 = ((double)x/width)*3.5 - 2.5;
 405:Core/Src/main.c ****     		double y_0 = (double)y/height * 2.0 - 1.0;
 406:Core/Src/main.c **** 
 407:Core/Src/main.c ****     		double x_i = 0;
 408:Core/Src/main.c ****     		double y_i = 0;
 409:Core/Src/main.c ****     		int iteration = 0;
 410:Core/Src/main.c **** 
 411:Core/Src/main.c **** 
 412:Core/Src/main.c ****     		while (iteration < max_iterations)
 413:Core/Src/main.c ****     		{
 414:Core/Src/main.c **** 
 415:Core/Src/main.c ****     			double x_i_sq = x_i*x_i;
 416:Core/Src/main.c ****     			double y_i_sq = y_i*y_i;
 417:Core/Src/main.c **** 
 418:Core/Src/main.c ****     			if(x_i_sq + y_i_sq > 4.0)
 419:Core/Src/main.c ****     			{
 420:Core/Src/main.c ****     				break;
 421:Core/Src/main.c ****     			}
 422:Core/Src/main.c ****     			double temp  = x_i_sq - y_i_sq;
 423:Core/Src/main.c ****     			y_i = 2.0*x_i*y_i + y_0;
 424:Core/Src/main.c **** 
 425:Core/Src/main.c ****     			x_i = temp + x_0;
 426:Core/Src/main.c **** 
 427:Core/Src/main.c ****     			iteration = iteration +1;
 428:Core/Src/main.c **** 
 429:Core/Src/main.c ****     		}
 430:Core/Src/main.c **** 
 431:Core/Src/main.c ****     		mandelbrot_sum = mandelbrot_sum + iteration;
 432:Core/Src/main.c **** 
 433:Core/Src/main.c ****     	}
 434:Core/Src/main.c ****     }
 435:Core/Src/main.c ****     //checksum = mandelbrot_sum;
 436:Core/Src/main.c ****     return mandelbrot_sum;
 437:Core/Src/main.c **** }
 438:Core/Src/main.c **** 
 439:Core/Src/main.c **** 
 440:Core/Src/main.c **** 
 441:Core/Src/main.c **** static inline void cycle_counter_init(void)
 442:Core/Src/main.c ****  {
 443:Core/Src/main.c **** 	  CoreDebug->DEMCR |= CoreDebug_DEMCR_TRCENA_Msk;
 444:Core/Src/main.c **** 	  DWT->CYCCNT = 0;
 445:Core/Src/main.c **** 	  DWT->CTRL |= DWT_CTRL_CYCCNTENA_Msk;
 446:Core/Src/main.c ****  }
 447:Core/Src/main.c **** 
 448:Core/Src/main.c **** 
 449:Core/Src/main.c **** 
 450:Core/Src/main.c ****  static inline uint32_t cycle_counter_get(void)
 451:Core/Src/main.c ****  {
 452:Core/Src/main.c ****      return DWT->CYCCNT;
 453:Core/Src/main.c ****  }
 454:Core/Src/main.c **** 
 455:Core/Src/main.c ****  static inline uint64_t cycle_diff(uint32_t start, uint32_t end)
 456:Core/Src/main.c ****  {
 457:Core/Src/main.c ****      return (end >= start) ? (uint64_t)(end - start)
ARM GAS  C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s 			page 12


 458:Core/Src/main.c ****                            : (uint64_t)(0x100000000ULL - start + end);
 459:Core/Src/main.c ****  }
 460:Core/Src/main.c **** /* USER CODE END 4 */
 461:Core/Src/main.c **** 
 462:Core/Src/main.c **** /**
 463:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 464:Core/Src/main.c ****   * @retval None
 465:Core/Src/main.c ****   */
 466:Core/Src/main.c **** void Error_Handler(void)
 171              		.loc 1 466 6 view .LVU53
 467:Core/Src/main.c **** {
 468:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 469:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 470:Core/Src/main.c ****   __disable_irq();
 172              		.loc 1 470 3 view .LVU54
 173              	.LBB27:
 174              	.LBI27:
 175              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
ARM GAS  C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s 			page 13


  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
ARM GAS  C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s 			page 14


  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
ARM GAS  C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s 			page 15


 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s 			page 16


 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
ARM GAS  C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s 			page 17


 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
ARM GAS  C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s 			page 18


 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
ARM GAS  C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s 			page 19


 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
ARM GAS  C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s 			page 20


 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
ARM GAS  C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s 			page 21


 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
ARM GAS  C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s 			page 22


 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s 			page 23


 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s 			page 24


 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s 			page 25


 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s 			page 26


 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s 			page 27


 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
ARM GAS  C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s 			page 28


 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
ARM GAS  C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s 			page 29


 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 176              		.loc 2 960 27 view .LVU55
 177              	.LBB28:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 178              		.loc 2 962 3 view .LVU56
 179              		.syntax unified
 180              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 181 009c 72B6     		cpsid i
 182              	@ 0 "" 2
 183              		.thumb
 184              		.syntax unified
 185              	.L3:
 186              	.LBE28:
 187              	.LBE27:
 471:Core/Src/main.c ****   while (1)
 188              		.loc 1 471 3 view .LVU57
 472:Core/Src/main.c ****   {
 473:Core/Src/main.c ****   }
 189              		.loc 1 473 3 view .LVU58
 471:Core/Src/main.c ****   while (1)
 190              		.loc 1 471 9 view .LVU59
 191 009e FEE7     		b	.L3
 192              	.L8:
 193              	.LBE26:
 262:Core/Src/main.c ****   }
 194              		.loc 1 262 5 view .LVU60
 195              	.LBB29:
 196              	.LBI29:
 466:Core/Src/main.c **** {
 197              		.loc 1 466 6 view .LVU61
 470:Core/Src/main.c ****   while (1)
 198              		.loc 1 470 3 view .LVU62
 199              	.LBB30:
 200              	.LBI30:
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 201              		.loc 2 960 27 view .LVU63
 202              	.LBB31:
 203              		.loc 2 962 3 view .LVU64
 204              		.syntax unified
 205              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 206 00a0 72B6     		cpsid i
 207              	@ 0 "" 2
 208              		.thumb
 209              		.syntax unified
 210              	.L5:
 211              	.LBE31:
 212              	.LBE30:
 471:Core/Src/main.c ****   {
ARM GAS  C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s 			page 30


 213              		.loc 1 471 3 view .LVU65
 214              		.loc 1 473 3 view .LVU66
 471:Core/Src/main.c ****   {
 215              		.loc 1 471 9 view .LVU67
 216 00a2 FEE7     		b	.L5
 217              	.L10:
 218              		.align	2
 219              	.L9:
 220 00a4 00380240 		.word	1073887232
 221 00a8 00700040 		.word	1073770496
 222              	.LBE29:
 223              		.cfi_endproc
 224              	.LFE138:
 226              		.global	__aeabi_ldivmod
 227              		.section	.text.calculate_mandelbrot_fixed_point_arithmetic,"ax",%progbits
 228              		.align	1
 229              		.global	calculate_mandelbrot_fixed_point_arithmetic
 230              		.syntax unified
 231              		.thumb
 232              		.thumb_func
 234              	calculate_mandelbrot_fixed_point_arithmetic:
 235              	.LVL3:
 236              	.LFB140:
 304:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 237              		.loc 1 304 1 view -0
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 32
 240              		@ frame_needed = 0, uses_anonymous_args = 0
 304:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 241              		.loc 1 304 1 is_stmt 0 view .LVU69
 242 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 243              	.LCFI4:
 244              		.cfi_def_cfa_offset 36
 245              		.cfi_offset 4, -36
 246              		.cfi_offset 5, -32
 247              		.cfi_offset 6, -28
 248              		.cfi_offset 7, -24
 249              		.cfi_offset 8, -20
 250              		.cfi_offset 9, -16
 251              		.cfi_offset 10, -12
 252              		.cfi_offset 11, -8
 253              		.cfi_offset 14, -4
 254 0004 89B0     		sub	sp, sp, #36
 255              	.LCFI5:
 256              		.cfi_def_cfa_offset 72
 257 0006 0390     		str	r0, [sp, #12]
 258 0008 0E46     		mov	r6, r1
 259 000a 1446     		mov	r4, r2
 305:Core/Src/main.c **** 
 260              		.loc 1 305 5 is_stmt 1 view .LVU70
 261              	.LVL4:
 311:Core/Src/main.c ****     const int32_t y_top  = -ONE;               // -1.0 as y starting point
 262              		.loc 1 311 5 view .LVU71
 312:Core/Src/main.c **** 
 263              		.loc 1 312 5 view .LVU72
 316:Core/Src/main.c ****     const int32_t y_step = (int32_t)(((int64_t)2 * ONE) / height);				// Bit shift the top before d
 264              		.loc 1 316 5 view .LVU73
ARM GAS  C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s 			page 31


 316:Core/Src/main.c ****     const int32_t y_step = (int32_t)(((int64_t)2 * ONE) / height);				// Bit shift the top before d
 265              		.loc 1 316 57 is_stmt 0 view .LVU74
 266 000c 4200     		lsls	r2, r0, #1
 267              	.LVL5:
 316:Core/Src/main.c ****     const int32_t y_step = (int32_t)(((int64_t)2 * ONE) / height);				// Bit shift the top before d
 268              		.loc 1 316 57 view .LVU75
 269 000e 40F38073 		sbfx	r3, r0, #30, #1
 270 0012 4FF4E020 		mov	r0, #458752
 271              	.LVL6:
 316:Core/Src/main.c ****     const int32_t y_step = (int32_t)(((int64_t)2 * ONE) / height);				// Bit shift the top before d
 272              		.loc 1 316 57 view .LVU76
 273 0016 0021     		movs	r1, #0
 274              	.LVL7:
 316:Core/Src/main.c ****     const int32_t y_step = (int32_t)(((int64_t)2 * ONE) / height);				// Bit shift the top before d
 275              		.loc 1 316 57 view .LVU77
 276 0018 FFF7FEFF 		bl	__aeabi_ldivmod
 277              	.LVL8:
 278 001c 0490     		str	r0, [sp, #16]
 279              	.LVL9:
 317:Core/Src/main.c **** 
 280              		.loc 1 317 5 is_stmt 1 view .LVU78
 317:Core/Src/main.c **** 
 281              		.loc 1 317 57 is_stmt 0 view .LVU79
 282 001e 3246     		mov	r2, r6
 283 0020 F317     		asrs	r3, r6, #31
 284 0022 4FF40030 		mov	r0, #131072
 285              	.LVL10:
 317:Core/Src/main.c **** 
 286              		.loc 1 317 57 view .LVU80
 287 0026 0021     		movs	r1, #0
 288 0028 FFF7FEFF 		bl	__aeabi_ldivmod
 289              	.LVL11:
 319:Core/Src/main.c **** 
 290              		.loc 1 319 5 is_stmt 1 view .LVU81
 321:Core/Src/main.c ****     for (int y = 0; y < height; ++y) {
 291              		.loc 1 321 5 view .LVU82
 322:Core/Src/main.c ****         int32_t x0 = x_left;			// starting constant
 292              		.loc 1 322 5 view .LVU83
 293              	.LBB32:
 322:Core/Src/main.c ****         int32_t x0 = x_left;			// starting constant
 294              		.loc 1 322 10 view .LVU84
 322:Core/Src/main.c ****         int32_t x0 = x_left;			// starting constant
 295              		.loc 1 322 23 discriminator 1 view .LVU85
 296 002c 002E     		cmp	r6, #0
 297 002e 0BDD     		ble	.L23
 322:Core/Src/main.c ****         int32_t x0 = x_left;			// starting constant
 298              		.loc 1 322 14 is_stmt 0 view .LVU86
 299 0030 0023     		movs	r3, #0
 300              	.LBE32:
 321:Core/Src/main.c ****     for (int y = 0; y < height; ++y) {
 301              		.loc 1 321 13 view .LVU87
 302 0032 DFF8F880 		ldr	r8, .L26+4
 305:Core/Src/main.c **** 
 303              		.loc 1 305 14 view .LVU88
 304 0036 0193     		str	r3, [sp, #4]
 305 0038 9B46     		mov	fp, r3
 306              	.LBB46:
ARM GAS  C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s 			page 32


 307              	.LBB33:
 308              	.LBB34:
 309              	.LBB35:
 310              	.LBB36:
 334:Core/Src/main.c **** 
 311              		.loc 1 334 20 view .LVU89
 312 003a DFF8F490 		ldr	r9, .L26+8
 313 003e 0690     		str	r0, [sp, #24]
 314 0040 1A46     		mov	r2, r3
 315 0042 0796     		str	r6, [sp, #28]
 316 0044 A646     		mov	lr, r4
 317 0046 66E0     		b	.L12
 318              	.L23:
 334:Core/Src/main.c **** 
 319              		.loc 1 334 20 view .LVU90
 320              	.LBE36:
 321              	.LBE35:
 322              	.LBE34:
 323              	.LBE33:
 324              	.LBE46:
 305:Core/Src/main.c **** 
 325              		.loc 1 305 14 view .LVU91
 326 0048 0023     		movs	r3, #0
 327 004a 0193     		str	r3, [sp, #4]
 328 004c 9B46     		mov	fp, r3
 329              	.LVL12:
 330              	.L11:
 352:Core/Src/main.c **** 
 331              		.loc 1 352 1 view .LVU92
 332 004e 0198     		ldr	r0, [sp, #4]
 333 0050 5946     		mov	r1, fp
 334 0052 09B0     		add	sp, sp, #36
 335              	.LCFI6:
 336              		.cfi_remember_state
 337              		.cfi_def_cfa_offset 36
 338              		@ sp needed
 339 0054 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 340              	.LVL13:
 341              	.L25:
 342              	.LCFI7:
 343              		.cfi_restore_state
 344              	.LBB47:
 345              	.LBB44:
 346              	.LBB42:
 347              	.LBB40:
 352:Core/Src/main.c **** 
 348              		.loc 1 352 1 view .LVU93
 349 0058 DDF808A0 		ldr	r10, [sp, #8]
 350 005c 7746     		mov	r7, lr
 351              	.LVL14:
 352              	.L14:
 345:Core/Src/main.c ****             x0 += x_step; // add step instead of multiplying new x value
 353              		.loc 1 345 13 is_stmt 1 view .LVU94
 345:Core/Src/main.c ****             x0 += x_step; // add step instead of multiplying new x value
 354              		.loc 1 345 28 is_stmt 0 view .LVU95
 355 005e 019B     		ldr	r3, [sp, #4]
 356 0060 FB18     		adds	r3, r7, r3
ARM GAS  C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s 			page 33


 357 0062 0193     		str	r3, [sp, #4]
 358              	.LVL15:
 345:Core/Src/main.c ****             x0 += x_step; // add step instead of multiplying new x value
 359              		.loc 1 345 28 view .LVU96
 360 0064 4BEBE77B 		adc	fp, fp, r7, asr #31
 361              	.LVL16:
 346:Core/Src/main.c ****         }
 362              		.loc 1 346 13 is_stmt 1 view .LVU97
 346:Core/Src/main.c ****         }
 363              		.loc 1 346 16 is_stmt 0 view .LVU98
 364 0068 049B     		ldr	r3, [sp, #16]
 365              	.LVL17:
 346:Core/Src/main.c ****         }
 366              		.loc 1 346 16 view .LVU99
 367 006a 1C44     		add	r4, r4, r3
 368              	.LVL18:
 346:Core/Src/main.c ****         }
 369              		.loc 1 346 16 view .LVU100
 370              	.LBE40:
 325:Core/Src/main.c ****             int32_t xi = 0, yi = 0;
 371              		.loc 1 325 36 is_stmt 1 discriminator 2 view .LVU101
 372 006c 0AF1010A 		add	r10, r10, #1
 373              	.LVL19:
 325:Core/Src/main.c ****             int32_t xi = 0, yi = 0;
 374              		.loc 1 325 27 discriminator 1 view .LVU102
 375 0070 039B     		ldr	r3, [sp, #12]
 376 0072 5345     		cmp	r3, r10
 377 0074 48D0     		beq	.L24
 378              	.LVL20:
 379              	.L18:
 380              	.LBB41:
 329:Core/Src/main.c ****                 int32_t xi2 = (int32_t)(((int64_t)xi * xi + (1 << (Q - 1))) >> Q);
 381              		.loc 1 329 30 view .LVU103
 382 0076 BEF1000F 		cmp	lr, #0
 327:Core/Src/main.c **** 
 383              		.loc 1 327 17 is_stmt 0 view .LVU104
 384 007a D8BF     		it	le
 385 007c 0027     		movle	r7, #0
 329:Core/Src/main.c ****                 int32_t xi2 = (int32_t)(((int64_t)xi * xi + (1 << (Q - 1))) >> Q);
 386              		.loc 1 329 30 view .LVU105
 387 007e EEDD     		ble	.L14
 388              	.LBB37:
 331:Core/Src/main.c **** 
 389              		.loc 1 331 25 view .LVU106
 390 0080 0022     		movs	r2, #0
 330:Core/Src/main.c ****                 int32_t yi2 = (int32_t)(((int64_t)yi * yi + (1 << (Q - 1))) >> Q);
 391              		.loc 1 330 25 view .LVU107
 392 0082 1046     		mov	r0, r2
 393              	.LBE37:
 327:Core/Src/main.c **** 
 394              		.loc 1 327 17 view .LVU108
 395 0084 1746     		mov	r7, r2
 396              	.LBB38:
 331:Core/Src/main.c **** 
 397              		.loc 1 331 42 view .LVU109
 398 0086 1546     		mov	r5, r2
 399 0088 9446     		mov	ip, r2
ARM GAS  C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s 			page 34


 330:Core/Src/main.c ****                 int32_t yi2 = (int32_t)(((int64_t)yi * yi + (1 << (Q - 1))) >> Q);
 400              		.loc 1 330 42 view .LVU110
 401 008a 1346     		mov	r3, r2
 402 008c 1646     		mov	r6, r2
 403 008e CDF808A0 		str	r10, [sp, #8]
 404              	.LVL21:
 405              	.L17:
 336:Core/Src/main.c **** 
 406              		.loc 1 336 17 is_stmt 1 view .LVU111
 336:Core/Src/main.c **** 
 407              		.loc 1 336 36 is_stmt 0 view .LVU112
 408 0092 821A     		subs	r2, r0, r2
 409              	.LVL22:
 336:Core/Src/main.c **** 
 410              		.loc 1 336 25 view .LVU113
 411 0094 2244     		add	r2, r2, r4
 412              	.LVL23:
 339:Core/Src/main.c ****                 xi = temp;           // following mandelbrot.py
 413              		.loc 1 339 17 is_stmt 1 view .LVU114
 339:Core/Src/main.c ****                 xi = temp;           // following mandelbrot.py
 414              		.loc 1 339 45 is_stmt 0 view .LVU115
 415 0096 03FB0CFC 		mul	ip, r3, ip
 416 009a 05FB06CC 		mla	ip, r5, r6, ip
 417 009e A3FB0513 		umull	r1, r3, r3, r5
 339:Core/Src/main.c ****                 xi = temp;           // following mandelbrot.py
 418              		.loc 1 339 50 view .LVU116
 419 00a2 11F58041 		adds	r1, r1, #16384
 420 00a6 4CEB030C 		adc	ip, ip, r3
 339:Core/Src/main.c ****                 xi = temp;           // following mandelbrot.py
 421              		.loc 1 339 68 view .LVU117
 422 00aa C90B     		lsrs	r1, r1, #15
 423 00ac 41EA4C41 		orr	r1, r1, ip, lsl #17
 339:Core/Src/main.c ****                 xi = temp;           // following mandelbrot.py
 424              		.loc 1 339 20 view .LVU118
 425 00b0 4144     		add	r1, r1, r8
 426              	.LVL24:
 340:Core/Src/main.c **** 
 427              		.loc 1 340 17 is_stmt 1 view .LVU119
 342:Core/Src/main.c ****             }
 428              		.loc 1 342 17 view .LVU120
 429 00b2 0137     		adds	r7, r7, #1
 430              	.LVL25:
 342:Core/Src/main.c ****             }
 431              		.loc 1 342 17 is_stmt 0 view .LVU121
 432              	.LBE38:
 329:Core/Src/main.c ****                 int32_t xi2 = (int32_t)(((int64_t)xi * xi + (1 << (Q - 1))) >> Q);
 433              		.loc 1 329 30 is_stmt 1 view .LVU122
 434 00b4 BE45     		cmp	lr, r7
 435 00b6 CFD0     		beq	.L25
 436              	.LBB39:
 330:Core/Src/main.c ****                 int32_t yi2 = (int32_t)(((int64_t)yi * yi + (1 << (Q - 1))) >> Q);
 437              		.loc 1 330 17 view .LVU123
 330:Core/Src/main.c ****                 int32_t yi2 = (int32_t)(((int64_t)yi * yi + (1 << (Q - 1))) >> Q);
 438              		.loc 1 330 42 is_stmt 0 view .LVU124
 439 00b8 D017     		asrs	r0, r2, #31
 440              	.LVL26:
 330:Core/Src/main.c ****                 int32_t yi2 = (int32_t)(((int64_t)yi * yi + (1 << (Q - 1))) >> Q);
ARM GAS  C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s 			page 35


 441              		.loc 1 330 42 view .LVU125
 442 00ba 1346     		mov	r3, r2
 443 00bc 0646     		mov	r6, r0
 330:Core/Src/main.c ****                 int32_t yi2 = (int32_t)(((int64_t)yi * yi + (1 << (Q - 1))) >> Q);
 444              		.loc 1 330 54 view .LVU126
 445 00be 00FB02F2 		mul	r2, r0, r2
 446              	.LVL27:
 330:Core/Src/main.c ****                 int32_t yi2 = (int32_t)(((int64_t)yi * yi + (1 << (Q - 1))) >> Q);
 447              		.loc 1 330 54 view .LVU127
 448 00c2 A3FB0305 		umull	r0, r5, r3, r3
 330:Core/Src/main.c ****                 int32_t yi2 = (int32_t)(((int64_t)yi * yi + (1 << (Q - 1))) >> Q);
 449              		.loc 1 330 59 view .LVU128
 450 00c6 10F50040 		adds	r0, r0, #32768
 451 00ca 45EB4202 		adc	r2, r5, r2, lsl #1
 330:Core/Src/main.c ****                 int32_t yi2 = (int32_t)(((int64_t)yi * yi + (1 << (Q - 1))) >> Q);
 452              		.loc 1 330 77 view .LVU129
 453 00ce 000C     		lsrs	r0, r0, #16
 454 00d0 40EA0240 		orr	r0, r0, r2, lsl #16
 455              	.LVL28:
 331:Core/Src/main.c **** 
 456              		.loc 1 331 17 is_stmt 1 view .LVU130
 331:Core/Src/main.c **** 
 457              		.loc 1 331 42 is_stmt 0 view .LVU131
 458 00d4 CA17     		asrs	r2, r1, #31
 459 00d6 0D46     		mov	r5, r1
 460 00d8 9446     		mov	ip, r2
 331:Core/Src/main.c **** 
 461              		.loc 1 331 54 view .LVU132
 462 00da 02FB01F1 		mul	r1, r2, r1
 463              	.LVL29:
 331:Core/Src/main.c **** 
 464              		.loc 1 331 54 view .LVU133
 465 00de A5FB052A 		umull	r2, r10, r5, r5
 331:Core/Src/main.c **** 
 466              		.loc 1 331 59 view .LVU134
 467 00e2 12F50042 		adds	r2, r2, #32768
 468 00e6 4AEB410A 		adc	r10, r10, r1, lsl #1
 331:Core/Src/main.c **** 
 469              		.loc 1 331 77 view .LVU135
 470 00ea 120C     		lsrs	r2, r2, #16
 471 00ec 42EA0A42 		orr	r2, r2, r10, lsl #16
 472              	.LVL30:
 334:Core/Src/main.c **** 
 473              		.loc 1 334 17 is_stmt 1 view .LVU136
 334:Core/Src/main.c **** 
 474              		.loc 1 334 34 is_stmt 0 view .LVU137
 475 00f0 D117     		asrs	r1, r2, #31
 476 00f2 10EB020A 		adds	r10, r0, r2
 477 00f6 41EBE071 		adc	r1, r1, r0, asr #31
 334:Core/Src/main.c **** 
 478              		.loc 1 334 20 view .LVU138
 479 00fa CA45     		cmp	r10, r9
 480 00fc 71F10001 		sbcs	r1, r1, #0
 481 0100 C7DB     		blt	.L17
 482              	.LBE39:
 483 0102 DDF808A0 		ldr	r10, [sp, #8]
 484 0106 AAE7     		b	.L14
ARM GAS  C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s 			page 36


 485              	.LVL31:
 486              	.L24:
 334:Core/Src/main.c **** 
 487              		.loc 1 334 20 view .LVU139
 488              	.LBE41:
 489 0108 059A     		ldr	r2, [sp, #20]
 490              	.LVL32:
 491              	.L16:
 334:Core/Src/main.c **** 
 492              		.loc 1 334 20 view .LVU140
 493              	.LBE42:
 348:Core/Src/main.c ****     }
 494              		.loc 1 348 9 is_stmt 1 view .LVU141
 348:Core/Src/main.c ****     }
 495              		.loc 1 348 12 is_stmt 0 view .LVU142
 496 010a 069B     		ldr	r3, [sp, #24]
 497 010c 9844     		add	r8, r8, r3
 498              	.LVL33:
 348:Core/Src/main.c ****     }
 499              		.loc 1 348 12 view .LVU143
 500              	.LBE44:
 322:Core/Src/main.c ****         int32_t x0 = x_left;			// starting constant
 501              		.loc 1 322 33 is_stmt 1 discriminator 2 view .LVU144
 502 010e 0132     		adds	r2, r2, #1
 503              	.LVL34:
 322:Core/Src/main.c ****         int32_t x0 = x_left;			// starting constant
 504              		.loc 1 322 23 discriminator 1 view .LVU145
 505 0110 079B     		ldr	r3, [sp, #28]
 506 0112 9342     		cmp	r3, r2
 507 0114 9BD0     		beq	.L11
 508              	.LVL35:
 509              	.L12:
 510              	.LBB45:
 511              	.LBB43:
 325:Core/Src/main.c ****             int32_t xi = 0, yi = 0;
 512              		.loc 1 325 27 discriminator 1 view .LVU146
 513 0116 039B     		ldr	r3, [sp, #12]
 514 0118 002B     		cmp	r3, #0
 515 011a F6DD     		ble	.L16
 325:Core/Src/main.c ****             int32_t xi = 0, yi = 0;
 516              		.loc 1 325 18 is_stmt 0 view .LVU147
 517 011c 4FF0000A 		mov	r10, #0
 518              	.LBE43:
 323:Core/Src/main.c **** 
 519              		.loc 1 323 17 view .LVU148
 520 0120 014C     		ldr	r4, .L26
 521 0122 0592     		str	r2, [sp, #20]
 522 0124 A7E7     		b	.L18
 523              	.L27:
 524 0126 00BF     		.align	2
 525              	.L26:
 526 0128 0080FDFF 		.word	-163840
 527 012c 0000FFFF 		.word	-65536
 528 0130 01000400 		.word	262145
 529              	.LBE45:
 530              	.LBE47:
 531              		.cfi_endproc
ARM GAS  C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s 			page 37


 532              	.LFE140:
 534              		.section	.text.calculate_mandelbrot_float,"ax",%progbits
 535              		.align	1
 536              		.global	calculate_mandelbrot_float
 537              		.syntax unified
 538              		.thumb
 539              		.thumb_func
 541              	calculate_mandelbrot_float:
 542              	.LVL36:
 543              	.LFB141:
 355:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 544              		.loc 1 355 1 is_stmt 1 view -0
 545              		.cfi_startproc
 546              		@ args = 0, pretend = 0, frame = 0
 547              		@ frame_needed = 0, uses_anonymous_args = 0
 355:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 548              		.loc 1 355 1 is_stmt 0 view .LVU150
 549 0000 70B5     		push	{r4, r5, r6, lr}
 550              	.LCFI8:
 551              		.cfi_def_cfa_offset 16
 552              		.cfi_offset 4, -16
 553              		.cfi_offset 5, -12
 554              		.cfi_offset 6, -8
 555              		.cfi_offset 14, -4
 356:Core/Src/main.c ****     //TODO: Complete the function implementation
 556              		.loc 1 356 5 is_stmt 1 view .LVU151
 557              	.LVL37:
 358:Core/Src/main.c ****     for (int y = 0; y < height; y++)
 558              		.loc 1 358 5 view .LVU152
 358:Core/Src/main.c ****     for (int y = 0; y < height; y++)
 559              		.loc 1 358 14 is_stmt 0 view .LVU153
 560 0002 354B     		ldr	r3, .L42+8
 561 0004 9FED327B 		vldr.64	d7, .L42	@ int
 562 0008 83ED007B 		vstr.64	d7, [r3]	@ int
 359:Core/Src/main.c ****     {
 563              		.loc 1 359 5 is_stmt 1 view .LVU154
 564              	.LBB48:
 359:Core/Src/main.c ****     {
 565              		.loc 1 359 10 view .LVU155
 566              	.LVL38:
 359:Core/Src/main.c ****     {
 567              		.loc 1 359 23 discriminator 1 view .LVU156
 568 000c 0E1E     		subs	r6, r1, #0
 569 000e 0EDD     		ble	.L41
 570 0010 0446     		mov	r4, r0
 359:Core/Src/main.c ****     {
 571              		.loc 1 359 14 is_stmt 0 view .LVU157
 572 0012 0025     		movs	r5, #0
 573              	.LBE48:
 356:Core/Src/main.c ****     //TODO: Complete the function implementation
 574              		.loc 1 356 14 view .LVU158
 575 0014 2846     		mov	r0, r5
 576              	.LVL39:
 356:Core/Src/main.c ****     //TODO: Complete the function implementation
 577              		.loc 1 356 14 view .LVU159
 578 0016 2946     		mov	r1, r5
 579              	.LVL40:
ARM GAS  C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s 			page 38


 580              	.LBB59:
 581              	.LBB49:
 582              	.LBB50:
 364:Core/Src/main.c **** 
 583              		.loc 1 364 19 view .LVU160
 584 0018 B7EE002A 		vmov.f32	s4, #1.0e+0
 363:Core/Src/main.c ****             float y_0 = (float)y / height * 2.0f - 1.0f;
 585              		.loc 1 363 44 view .LVU161
 586 001c F0EE0C2A 		vmov.f32	s5, #3.5e+0
 363:Core/Src/main.c ****             float y_0 = (float)y / height * 2.0f - 1.0f;
 587              		.loc 1 363 19 view .LVU162
 588 0020 B0EE043A 		vmov.f32	s6, #2.5e+0
 367:Core/Src/main.c ****             int iteration = 0;
 589              		.loc 1 367 19 view .LVU163
 590 0024 4FF0000E 		mov	lr, #0
 591              	.LBB51:
 375:Core/Src/main.c ****                 {
 592              		.loc 1 375 20 view .LVU164
 593 0028 B1EE004A 		vmov.f32	s8, #4.0e+0
 594 002c 38E0     		b	.L29
 595              	.LVL41:
 596              	.L41:
 375:Core/Src/main.c ****                 {
 597              		.loc 1 375 20 view .LVU165
 598              	.LBE51:
 599              	.LBE50:
 600              	.LBE49:
 601              	.LBE59:
 356:Core/Src/main.c ****     //TODO: Complete the function implementation
 602              		.loc 1 356 14 view .LVU166
 603 002e 0020     		movs	r0, #0
 604              	.LVL42:
 356:Core/Src/main.c ****     //TODO: Complete the function implementation
 605              		.loc 1 356 14 view .LVU167
 606 0030 0146     		mov	r1, r0
 607              	.LVL43:
 608              	.L28:
 392:Core/Src/main.c **** 
 609              		.loc 1 392 1 view .LVU168
 610 0032 70BD     		pop	{r4, r5, r6, pc}
 611              	.LVL44:
 612              	.L37:
 613              	.LBB60:
 614              	.LBB57:
 615              	.LBB53:
 368:Core/Src/main.c **** 
 616              		.loc 1 368 17 view .LVU169
 617 0034 0023     		movs	r3, #0
 618              	.LVL45:
 619              	.L31:
 387:Core/Src/main.c ****         }
 620              		.loc 1 387 13 is_stmt 1 view .LVU170
 387:Core/Src/main.c ****         }
 621              		.loc 1 387 28 is_stmt 0 view .LVU171
 622 0036 1818     		adds	r0, r3, r0
 623              	.LVL46:
 387:Core/Src/main.c ****         }
ARM GAS  C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s 			page 39


 624              		.loc 1 387 28 view .LVU172
 625 0038 41EBE371 		adc	r1, r1, r3, asr #31
 626              	.LVL47:
 387:Core/Src/main.c ****         }
 627              		.loc 1 387 28 view .LVU173
 628              	.LBE53:
 361:Core/Src/main.c ****         {
 629              		.loc 1 361 38 is_stmt 1 discriminator 2 view .LVU174
 630 003c 0CF1010C 		add	ip, ip, #1
 631              	.LVL48:
 361:Core/Src/main.c ****         {
 632              		.loc 1 361 27 discriminator 1 view .LVU175
 633 0040 6445     		cmp	r4, ip
 634 0042 2AD0     		beq	.L35
 635              	.LVL49:
 636              	.L33:
 637              	.LBB54:
 363:Core/Src/main.c ****             float y_0 = (float)y / height * 2.0f - 1.0f;
 638              		.loc 1 363 13 view .LVU176
 363:Core/Src/main.c ****             float y_0 = (float)y / height * 2.0f - 1.0f;
 639              		.loc 1 363 26 is_stmt 0 view .LVU177
 640 0044 07EE90CA 		vmov	s15, ip	@ int
 641 0048 F8EEE77A 		vcvt.f32.s32	s15, s15
 363:Core/Src/main.c ****             float y_0 = (float)y / height * 2.0f - 1.0f;
 642              		.loc 1 363 35 view .LVU178
 643 004c 87EEA35A 		vdiv.f32	s10, s15, s7
 363:Core/Src/main.c ****             float y_0 = (float)y / height * 2.0f - 1.0f;
 644              		.loc 1 363 44 view .LVU179
 645 0050 25EE225A 		vmul.f32	s10, s10, s5
 363:Core/Src/main.c ****             float y_0 = (float)y / height * 2.0f - 1.0f;
 646              		.loc 1 363 19 view .LVU180
 647 0054 35EE435A 		vsub.f32	s10, s10, s6
 648              	.LVL50:
 364:Core/Src/main.c **** 
 649              		.loc 1 364 13 is_stmt 1 view .LVU181
 366:Core/Src/main.c ****             float y_i = 0.0f;
 650              		.loc 1 366 13 view .LVU182
 367:Core/Src/main.c ****             int iteration = 0;
 651              		.loc 1 367 13 view .LVU183
 368:Core/Src/main.c **** 
 652              		.loc 1 368 13 view .LVU184
 370:Core/Src/main.c ****             {
 653              		.loc 1 370 13 view .LVU185
 370:Core/Src/main.c ****             {
 654              		.loc 1 370 30 view .LVU186
 655 0058 002A     		cmp	r2, #0
 656 005a EBDD     		ble	.L37
 368:Core/Src/main.c **** 
 657              		.loc 1 368 17 is_stmt 0 view .LVU187
 658 005c 0023     		movs	r3, #0
 367:Core/Src/main.c ****             int iteration = 0;
 659              		.loc 1 367 19 view .LVU188
 660 005e 07EE10EA 		vmov	s14, lr
 366:Core/Src/main.c ****             float y_i = 0.0f;
 661              		.loc 1 366 19 view .LVU189
 662 0062 07EE90EA 		vmov	s15, lr
 663              	.LVL51:
ARM GAS  C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s 			page 40


 664              	.L32:
 665              	.LBB52:
 372:Core/Src/main.c ****                 float y_i_sq = y_i * y_i;
 666              		.loc 1 372 17 is_stmt 1 view .LVU190
 372:Core/Src/main.c ****                 float y_i_sq = y_i * y_i;
 667              		.loc 1 372 23 is_stmt 0 view .LVU191
 668 0066 67EEA76A 		vmul.f32	s13, s15, s15
 669              	.LVL52:
 373:Core/Src/main.c **** 
 670              		.loc 1 373 17 is_stmt 1 view .LVU192
 373:Core/Src/main.c **** 
 671              		.loc 1 373 23 is_stmt 0 view .LVU193
 672 006a 27EE076A 		vmul.f32	s12, s14, s14
 673              	.LVL53:
 375:Core/Src/main.c ****                 {
 674              		.loc 1 375 17 is_stmt 1 view .LVU194
 375:Core/Src/main.c ****                 {
 675              		.loc 1 375 28 is_stmt 0 view .LVU195
 676 006e 76EE865A 		vadd.f32	s11, s13, s12
 375:Core/Src/main.c ****                 {
 677              		.loc 1 375 20 view .LVU196
 678 0072 F4EEC45A 		vcmpe.f32	s11, s8
 679 0076 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 680 007a DCDC     		bgt	.L31
 379:Core/Src/main.c ****                 y_i = 2.0f * x_i * y_i + y_0;
 681              		.loc 1 379 17 is_stmt 1 view .LVU197
 682              	.LVL54:
 380:Core/Src/main.c **** 
 683              		.loc 1 380 17 view .LVU198
 380:Core/Src/main.c **** 
 684              		.loc 1 380 28 is_stmt 0 view .LVU199
 685 007c 77EEA77A 		vadd.f32	s15, s15, s15
 686              	.LVL55:
 380:Core/Src/main.c **** 
 687              		.loc 1 380 34 view .LVU200
 688 0080 27EE877A 		vmul.f32	s14, s15, s14
 689              	.LVL56:
 380:Core/Src/main.c **** 
 690              		.loc 1 380 21 view .LVU201
 691 0084 37EE247A 		vadd.f32	s14, s14, s9
 692              	.LVL57:
 382:Core/Src/main.c **** 
 693              		.loc 1 382 17 is_stmt 1 view .LVU202
 379:Core/Src/main.c ****                 y_i = 2.0f * x_i * y_i + y_0;
 694              		.loc 1 379 23 is_stmt 0 view .LVU203
 695 0088 76EEC66A 		vsub.f32	s13, s13, s12
 696              	.LVL58:
 382:Core/Src/main.c **** 
 697              		.loc 1 382 21 view .LVU204
 698 008c 76EE857A 		vadd.f32	s15, s13, s10
 699              	.LVL59:
 384:Core/Src/main.c ****             }
 700              		.loc 1 384 17 is_stmt 1 view .LVU205
 384:Core/Src/main.c ****             }
 701              		.loc 1 384 27 is_stmt 0 view .LVU206
 702 0090 0133     		adds	r3, r3, #1
 703              	.LVL60:
ARM GAS  C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s 			page 41


 384:Core/Src/main.c ****             }
 704              		.loc 1 384 27 view .LVU207
 705              	.LBE52:
 370:Core/Src/main.c ****             {
 706              		.loc 1 370 30 is_stmt 1 view .LVU208
 707 0092 9A42     		cmp	r2, r3
 708 0094 E7D1     		bne	.L32
 709 0096 1346     		mov	r3, r2
 710              	.LVL61:
 370:Core/Src/main.c ****             {
 711              		.loc 1 370 30 is_stmt 0 view .LVU209
 712 0098 CDE7     		b	.L31
 713              	.LVL62:
 714              	.L35:
 370:Core/Src/main.c ****             {
 715              		.loc 1 370 30 view .LVU210
 716              	.LBE54:
 717              	.LBE57:
 359:Core/Src/main.c ****     {
 718              		.loc 1 359 34 is_stmt 1 discriminator 2 view .LVU211
 719 009a 0135     		adds	r5, r5, #1
 720              	.LVL63:
 359:Core/Src/main.c ****     {
 721              		.loc 1 359 23 discriminator 1 view .LVU212
 722 009c AE42     		cmp	r6, r5
 723 009e C8D0     		beq	.L28
 724              	.LVL64:
 725              	.L29:
 726              	.LBB58:
 361:Core/Src/main.c ****         {
 727              		.loc 1 361 27 discriminator 1 view .LVU213
 728 00a0 002C     		cmp	r4, #0
 729 00a2 FADD     		ble	.L35
 730              	.LBB55:
 364:Core/Src/main.c **** 
 731              		.loc 1 364 25 is_stmt 0 view .LVU214
 732 00a4 07EE905A 		vmov	s15, r5	@ int
 733 00a8 F8EEE77A 		vcvt.f32.s32	s15, s15
 364:Core/Src/main.c **** 
 734              		.loc 1 364 34 view .LVU215
 735 00ac 07EE106A 		vmov	s14, r6	@ int
 736 00b0 B8EEC77A 		vcvt.f32.s32	s14, s14
 737 00b4 C7EE874A 		vdiv.f32	s9, s15, s14
 364:Core/Src/main.c **** 
 738              		.loc 1 364 43 view .LVU216
 739 00b8 74EEA44A 		vadd.f32	s9, s9, s9
 364:Core/Src/main.c **** 
 740              		.loc 1 364 19 view .LVU217
 741 00bc 74EEC24A 		vsub.f32	s9, s9, s4
 742              	.LBE55:
 361:Core/Src/main.c ****         {
 743              		.loc 1 361 18 view .LVU218
 744 00c0 4FF0000C 		mov	ip, #0
 745              	.LBB56:
 363:Core/Src/main.c ****             float y_0 = (float)y / height * 2.0f - 1.0f;
 746              		.loc 1 363 35 view .LVU219
 747 00c4 07EE904A 		vmov	s15, r4	@ int
ARM GAS  C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s 			page 42


 748 00c8 F8EEE73A 		vcvt.f32.s32	s7, s15
 749 00cc BAE7     		b	.L33
 750              	.L43:
 751 00ce 00BF     		.align	3
 752              	.L42:
 753 00d0 00000000 		.word	0
 754 00d4 00000000 		.word	0
 755 00d8 00000000 		.word	checksum
 756              	.LBE56:
 757              	.LBE58:
 758              	.LBE60:
 759              		.cfi_endproc
 760              	.LFE141:
 762              		.global	__aeabi_ui2d
 763              		.global	__aeabi_ddiv
 764              		.section	.text.main,"ax",%progbits
 765              		.align	1
 766              		.global	main
 767              		.syntax unified
 768              		.thumb
 769              		.thumb_func
 771              	main:
 772              	.LFB137:
  99:Core/Src/main.c **** 
 773              		.loc 1 99 1 is_stmt 1 view -0
 774              		.cfi_startproc
 775              		@ args = 0, pretend = 0, frame = 40
 776              		@ frame_needed = 0, uses_anonymous_args = 0
 777 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 778              	.LCFI9:
 779              		.cfi_def_cfa_offset 36
 780              		.cfi_offset 4, -36
 781              		.cfi_offset 5, -32
 782              		.cfi_offset 6, -28
 783              		.cfi_offset 7, -24
 784              		.cfi_offset 8, -20
 785              		.cfi_offset 9, -16
 786              		.cfi_offset 10, -12
 787              		.cfi_offset 11, -8
 788              		.cfi_offset 14, -4
 789 0004 8BB0     		sub	sp, sp, #44
 790              	.LCFI10:
 791              		.cfi_def_cfa_offset 80
 109:Core/Src/main.c **** 
 792              		.loc 1 109 3 view .LVU221
 793 0006 FFF7FEFF 		bl	HAL_Init
 794              	.LVL65:
 116:Core/Src/main.c **** 
 795              		.loc 1 116 3 view .LVU222
 796 000a FFF7FEFF 		bl	SystemClock_Config
 797              	.LVL66:
 123:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 798              		.loc 1 123 3 view .LVU223
 799              	.LBB74:
 800              	.LBI74:
 271:Core/Src/main.c **** {
 801              		.loc 1 271 13 view .LVU224
ARM GAS  C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s 			page 43


 802              	.LBB75:
 273:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 803              		.loc 1 273 3 view .LVU225
 273:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 804              		.loc 1 273 20 is_stmt 0 view .LVU226
 805 000e 0024     		movs	r4, #0
 806 0010 0594     		str	r4, [sp, #20]
 807 0012 0694     		str	r4, [sp, #24]
 808 0014 0794     		str	r4, [sp, #28]
 809 0016 0894     		str	r4, [sp, #32]
 810 0018 0994     		str	r4, [sp, #36]
 279:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 811              		.loc 1 279 3 is_stmt 1 view .LVU227
 812              	.LBB76:
 279:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 813              		.loc 1 279 3 view .LVU228
 814 001a 0294     		str	r4, [sp, #8]
 279:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 815              		.loc 1 279 3 view .LVU229
 816 001c 574B     		ldr	r3, .L49
 817 001e 1A6B     		ldr	r2, [r3, #48]
 818 0020 42F00402 		orr	r2, r2, #4
 819 0024 1A63     		str	r2, [r3, #48]
 279:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 820              		.loc 1 279 3 view .LVU230
 821 0026 1A6B     		ldr	r2, [r3, #48]
 822 0028 02F00402 		and	r2, r2, #4
 823 002c 0292     		str	r2, [sp, #8]
 279:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 824              		.loc 1 279 3 view .LVU231
 825 002e 029A     		ldr	r2, [sp, #8]
 826              	.LBE76:
 279:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 827              		.loc 1 279 3 view .LVU232
 280:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 828              		.loc 1 280 3 view .LVU233
 829              	.LBB77:
 280:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 830              		.loc 1 280 3 view .LVU234
 831 0030 0394     		str	r4, [sp, #12]
 280:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 832              		.loc 1 280 3 view .LVU235
 833 0032 1A6B     		ldr	r2, [r3, #48]
 834 0034 42F08002 		orr	r2, r2, #128
 835 0038 1A63     		str	r2, [r3, #48]
 280:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 836              		.loc 1 280 3 view .LVU236
 837 003a 1A6B     		ldr	r2, [r3, #48]
 838 003c 02F08002 		and	r2, r2, #128
 839 0040 0392     		str	r2, [sp, #12]
 280:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 840              		.loc 1 280 3 view .LVU237
 841 0042 039A     		ldr	r2, [sp, #12]
 842              	.LBE77:
 280:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 843              		.loc 1 280 3 view .LVU238
 281:Core/Src/main.c **** 
ARM GAS  C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s 			page 44


 844              		.loc 1 281 3 view .LVU239
 845              	.LBB78:
 281:Core/Src/main.c **** 
 846              		.loc 1 281 3 view .LVU240
 847 0044 0494     		str	r4, [sp, #16]
 281:Core/Src/main.c **** 
 848              		.loc 1 281 3 view .LVU241
 849 0046 1A6B     		ldr	r2, [r3, #48]
 850 0048 42F00202 		orr	r2, r2, #2
 851 004c 1A63     		str	r2, [r3, #48]
 281:Core/Src/main.c **** 
 852              		.loc 1 281 3 view .LVU242
 853 004e 1B6B     		ldr	r3, [r3, #48]
 854 0050 03F00203 		and	r3, r3, #2
 855 0054 0493     		str	r3, [sp, #16]
 281:Core/Src/main.c **** 
 856              		.loc 1 281 3 view .LVU243
 857 0056 049B     		ldr	r3, [sp, #16]
 858              	.LBE78:
 281:Core/Src/main.c **** 
 859              		.loc 1 281 3 view .LVU244
 284:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7, GPIO_PIN_RESET);
 860              		.loc 1 284 3 view .LVU245
 861 0058 494D     		ldr	r5, .L49+4
 862 005a 2246     		mov	r2, r4
 863 005c FF21     		movs	r1, #255
 864 005e 2846     		mov	r0, r5
 865 0060 FFF7FEFF 		bl	HAL_GPIO_WritePin
 866              	.LVL67:
 289:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 867              		.loc 1 289 3 view .LVU246
 289:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 868              		.loc 1 289 23 is_stmt 0 view .LVU247
 869 0064 FF23     		movs	r3, #255
 870 0066 0593     		str	r3, [sp, #20]
 291:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 871              		.loc 1 291 3 is_stmt 1 view .LVU248
 291:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 872              		.loc 1 291 24 is_stmt 0 view .LVU249
 873 0068 0123     		movs	r3, #1
 874 006a 0693     		str	r3, [sp, #24]
 292:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 875              		.loc 1 292 3 is_stmt 1 view .LVU250
 292:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 876              		.loc 1 292 24 is_stmt 0 view .LVU251
 877 006c 0794     		str	r4, [sp, #28]
 293:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 878              		.loc 1 293 3 is_stmt 1 view .LVU252
 293:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 879              		.loc 1 293 25 is_stmt 0 view .LVU253
 880 006e 0894     		str	r4, [sp, #32]
 294:Core/Src/main.c **** 
 881              		.loc 1 294 3 is_stmt 1 view .LVU254
 882 0070 05A9     		add	r1, sp, #20
 883 0072 2846     		mov	r0, r5
 884 0074 FFF7FEFF 		bl	HAL_GPIO_Init
 885              	.LVL68:
ARM GAS  C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s 			page 45


 886              	.LBE75:
 887              	.LBE74:
 128:Core/Src/main.c **** 
 888              		.loc 1 128 3 view .LVU255
 131:Core/Src/main.c **** 
 889              		.loc 1 131 4 view .LVU256
 890              	.LBB79:
 891              	.LBI79:
 441:Core/Src/main.c ****  {
 892              		.loc 1 441 20 view .LVU257
 893              	.LBB80:
 443:Core/Src/main.c **** 	  DWT->CYCCNT = 0;
 894              		.loc 1 443 4 view .LVU258
 443:Core/Src/main.c **** 	  DWT->CYCCNT = 0;
 895              		.loc 1 443 13 is_stmt 0 view .LVU259
 896 0078 424A     		ldr	r2, .L49+8
 897 007a D2F8FC30 		ldr	r3, [r2, #252]
 443:Core/Src/main.c **** 	  DWT->CYCCNT = 0;
 898              		.loc 1 443 21 view .LVU260
 899 007e 43F08073 		orr	r3, r3, #16777216
 900 0082 C2F8FC30 		str	r3, [r2, #252]
 444:Core/Src/main.c **** 	  DWT->CTRL |= DWT_CTRL_CYCCNTENA_Msk;
 901              		.loc 1 444 4 is_stmt 1 view .LVU261
 444:Core/Src/main.c **** 	  DWT->CTRL |= DWT_CTRL_CYCCNTENA_Msk;
 902              		.loc 1 444 16 is_stmt 0 view .LVU262
 903 0086 404B     		ldr	r3, .L49+12
 904 0088 5C60     		str	r4, [r3, #4]
 445:Core/Src/main.c ****  }
 905              		.loc 1 445 4 is_stmt 1 view .LVU263
 445:Core/Src/main.c ****  }
 906              		.loc 1 445 7 is_stmt 0 view .LVU264
 907 008a 1A68     		ldr	r2, [r3]
 445:Core/Src/main.c ****  }
 908              		.loc 1 445 14 view .LVU265
 909 008c 42F00102 		orr	r2, r2, #1
 910 0090 1A60     		str	r2, [r3]
 911              	.LBE80:
 912              	.LBE79:
 133:Core/Src/main.c ****    {
 913              		.loc 1 133 4 is_stmt 1 view .LVU266
 914              	.LBB81:
 133:Core/Src/main.c ****    {
 915              		.loc 1 133 8 view .LVU267
 916              	.LVL69:
 133:Core/Src/main.c ****    {
 917              		.loc 1 133 21 discriminator 1 view .LVU268
 918 0092 DFF81081 		ldr	r8, .L49+40
 919 0096 DFF810B1 		ldr	fp, .L49+44
 920 009a 3C4F     		ldr	r7, .L49+16
 921              	.LBB82:
 137:Core/Src/main.c ****    start = DWT->CYCCNT;
 922              		.loc 1 137 15 is_stmt 0 discriminator 1 view .LVU269
 923 009c 3C4E     		ldr	r6, .L49+20
 138:Core/Src/main.c **** 
 924              		.loc 1 138 10 view .LVU270
 925 009e 1D46     		mov	r5, r3
 153:Core/Src/main.c **** 
ARM GAS  C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s 			page 46


 926              		.loc 1 153 13 discriminator 1 view .LVU271
 927 00a0 DFF808A1 		ldr	r10, .L49+48
 928              	.LVL70:
 929              	.L45:
 137:Core/Src/main.c ****    start = DWT->CYCCNT;
 930              		.loc 1 137 4 is_stmt 1 view .LVU272
 137:Core/Src/main.c ****    start = DWT->CYCCNT;
 931              		.loc 1 137 17 is_stmt 0 view .LVU273
 932 00a4 FFF7FEFF 		bl	HAL_GetTick
 933              	.LVL71:
 137:Core/Src/main.c ****    start = DWT->CYCCNT;
 934              		.loc 1 137 17 discriminator 1 view .LVU274
 935 00a8 4FF00009 		mov	r9, #0
 936 00ac 3060     		str	r0, [r6]
 937 00ae C6F80490 		str	r9, [r6, #4]
 138:Core/Src/main.c **** 
 938              		.loc 1 138 4 is_stmt 1 view .LVU275
 138:Core/Src/main.c **** 
 939              		.loc 1 138 10 is_stmt 0 view .LVU276
 940 00b2 6B68     		ldr	r3, [r5, #4]
 941 00b4 0093     		str	r3, [sp]
 942              	.LVL72:
 144:Core/Src/main.c **** 
 943              		.loc 1 144 4 is_stmt 1 view .LVU277
 944              	.LBB83:
 945              	.LBI83:
 450:Core/Src/main.c ****  {
 946              		.loc 1 450 25 view .LVU278
 947              	.LBB84:
 452:Core/Src/main.c ****  }
 948              		.loc 1 452 6 view .LVU279
 452:Core/Src/main.c ****  }
 949              		.loc 1 452 16 is_stmt 0 view .LVU280
 950 00b6 6B68     		ldr	r3, [r5, #4]
 951              	.LVL73:
 452:Core/Src/main.c ****  }
 952              		.loc 1 452 16 view .LVU281
 953              	.LBE84:
 954              	.LBE83:
 150:Core/Src/main.c **** 
 955              		.loc 1 150 4 is_stmt 1 view .LVU282
 150:Core/Src/main.c **** 
 956              		.loc 1 150 21 is_stmt 0 view .LVU283
 957 00b8 58F8040B 		ldr	r0, [r8], #4
 958 00bc 6422     		movs	r2, #100
 959 00be 0146     		mov	r1, r0
 960 00c0 FFF7FEFF 		bl	calculate_mandelbrot_float
 961              	.LVL74:
 150:Core/Src/main.c **** 
 962              		.loc 1 150 19 discriminator 1 view .LVU284
 963 00c4 EBE80201 		strd	r0, [fp], #8
 153:Core/Src/main.c **** 
 964              		.loc 1 153 4 is_stmt 1 view .LVU285
 153:Core/Src/main.c **** 
 965              		.loc 1 153 15 is_stmt 0 view .LVU286
 966 00c8 FFF7FEFF 		bl	HAL_GetTick
 967              	.LVL75:
ARM GAS  C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s 			page 47


 968 00cc 0446     		mov	r4, r0
 153:Core/Src/main.c **** 
 969              		.loc 1 153 13 discriminator 1 view .LVU287
 970 00ce CAF80000 		str	r0, [r10]
 971 00d2 CAF80490 		str	r9, [r10, #4]
 156:Core/Src/main.c ****    uint32_t cycles = end - start;
 972              		.loc 1 156 4 is_stmt 1 view .LVU288
 156:Core/Src/main.c ****    uint32_t cycles = end - start;
 973              		.loc 1 156 8 is_stmt 0 view .LVU289
 974 00d6 6868     		ldr	r0, [r5, #4]
 975              	.LVL76:
 157:Core/Src/main.c ****    time_sec = (double)cycles / SystemCoreClock;
 976              		.loc 1 157 4 is_stmt 1 view .LVU290
 158:Core/Src/main.c **** 
 977              		.loc 1 158 4 view .LVU291
 158:Core/Src/main.c **** 
 978              		.loc 1 158 15 is_stmt 0 view .LVU292
 979 00d8 009B     		ldr	r3, [sp]
 980 00da C01A     		subs	r0, r0, r3
 981              	.LVL77:
 158:Core/Src/main.c **** 
 982              		.loc 1 158 15 view .LVU293
 983 00dc FFF7FEFF 		bl	__aeabi_ui2d
 984              	.LVL78:
 158:Core/Src/main.c **** 
 985              		.loc 1 158 15 view .LVU294
 986 00e0 CDE90001 		strd	r0, [sp]
 987              	.LVL79:
 158:Core/Src/main.c **** 
 988              		.loc 1 158 30 view .LVU295
 989 00e4 2B4B     		ldr	r3, .L49+24
 990 00e6 1868     		ldr	r0, [r3]
 991 00e8 FFF7FEFF 		bl	__aeabi_ui2d
 992              	.LVL80:
 993 00ec 0246     		mov	r2, r0
 994 00ee 0B46     		mov	r3, r1
 995 00f0 DDE90001 		ldrd	r0, [sp]
 996 00f4 FFF7FEFF 		bl	__aeabi_ddiv
 997              	.LVL81:
 158:Core/Src/main.c **** 
 998              		.loc 1 158 13 view .LVU296
 999 00f8 274B     		ldr	r3, .L49+28
 1000 00fa C3E90001 		strd	r0, [r3]
 165:Core/Src/main.c **** 
 1001              		.loc 1 165 4 is_stmt 1 view .LVU297
 1002              	.LBB85:
 1003              	.LBI85:
 450:Core/Src/main.c ****  {
 1004              		.loc 1 450 25 view .LVU298
 1005              	.LBB86:
 452:Core/Src/main.c ****  }
 1006              		.loc 1 452 6 view .LVU299
 452:Core/Src/main.c ****  }
 1007              		.loc 1 452 16 is_stmt 0 view .LVU300
 1008 00fe 6B68     		ldr	r3, [r5, #4]
 1009              	.LBE86:
 1010              	.LBE85:
ARM GAS  C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s 			page 48


 167:Core/Src/main.c **** 
 1011              		.loc 1 167 5 is_stmt 1 view .LVU301
 1012              	.LVL82:
 170:Core/Src/main.c **** 
 1013              		.loc 1 170 4 view .LVU302
 170:Core/Src/main.c **** 
 1014              		.loc 1 170 36 is_stmt 0 view .LVU303
 1015 0100 3268     		ldr	r2, [r6]
 1016 0102 7368     		ldr	r3, [r6, #4]
 1017 0104 A41A     		subs	r4, r4, r2
 1018 0106 63EB4303 		sbc	r3, r3, r3, lsl #1
 170:Core/Src/main.c **** 
 1019              		.loc 1 170 25 view .LVU304
 1020 010a 3C60     		str	r4, [r7]
 1021 010c 7B60     		str	r3, [r7, #4]
 1022 010e 0837     		adds	r7, r7, #8
 1023              	.LBE82:
 133:Core/Src/main.c ****    {
 1024              		.loc 1 133 27 is_stmt 1 discriminator 3 view .LVU305
 133:Core/Src/main.c ****    {
 1025              		.loc 1 133 21 discriminator 1 view .LVU306
 1026 0110 224B     		ldr	r3, .L49+32
 1027 0112 9845     		cmp	r8, r3
 1028 0114 C6D1     		bne	.L45
 1029              	.LBE81:
 176:Core/Src/main.c **** 
 1030              		.loc 1 176 4 view .LVU307
 1031 0116 1A4C     		ldr	r4, .L49+4
 1032 0118 0122     		movs	r2, #1
 1033 011a 0221     		movs	r1, #2
 1034 011c 2046     		mov	r0, r4
 1035 011e FFF7FEFF 		bl	HAL_GPIO_WritePin
 1036              	.LVL83:
 179:Core/Src/main.c **** 
 1037              		.loc 1 179 4 view .LVU308
 1038 0122 4FF47A70 		mov	r0, #1000
 1039 0126 FFF7FEFF 		bl	HAL_Delay
 1040              	.LVL84:
 182:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 1041              		.loc 1 182 5 view .LVU309
 1042 012a 4A46     		mov	r2, r9
 1043 012c 0121     		movs	r1, #1
 1044 012e 2046     		mov	r0, r4
 1045 0130 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1046              	.LVL85:
 183:Core/Src/main.c **** 
 1047              		.loc 1 183 5 view .LVU310
 1048 0134 4A46     		mov	r2, r9
 1049 0136 0221     		movs	r1, #2
 1050 0138 2046     		mov	r0, r4
 1051 013a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1052              	.LVL86:
 185:Core/Src/main.c **** 
 1053              		.loc 1 185 5 view .LVU311
 185:Core/Src/main.c **** 
 1054              		.loc 1 185 15 is_stmt 0 view .LVU312
 1055 013e FFF7FEFF 		bl	HAL_GetTick
ARM GAS  C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s 			page 49


 1056              	.LVL87:
 185:Core/Src/main.c **** 
 1057              		.loc 1 185 13 discriminator 1 view .LVU313
 1058 0142 174B     		ldr	r3, .L49+36
 1059 0144 1860     		str	r0, [r3]
 197:Core/Src/main.c **** 
 1060              		.loc 1 197 4 view .LVU314
 1061 0146 0125     		movs	r5, #1
 204:Core/Src/main.c **** 
 1062              		.loc 1 204 4 view .LVU315
 1063 0148 0226     		movs	r6, #2
 1064              	.L46:
 191:Core/Src/main.c ****   {
 1065              		.loc 1 191 3 is_stmt 1 view .LVU316
 197:Core/Src/main.c **** 
 1066              		.loc 1 197 4 view .LVU317
 1067 014a 2A46     		mov	r2, r5
 1068 014c 2946     		mov	r1, r5
 1069 014e 2046     		mov	r0, r4
 1070 0150 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1071              	.LVL88:
 204:Core/Src/main.c **** 
 1072              		.loc 1 204 4 view .LVU318
 1073 0154 2A46     		mov	r2, r5
 1074 0156 3146     		mov	r1, r6
 1075 0158 2046     		mov	r0, r4
 1076 015a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1077              	.LVL89:
 208:Core/Src/main.c **** 
 1078              		.loc 1 208 4 view .LVU319
 1079 015e 4FF47A70 		mov	r0, #1000
 1080 0162 FFF7FEFF 		bl	HAL_Delay
 1081              	.LVL90:
 211:Core/Src/main.c **** 	  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 1082              		.loc 1 211 4 view .LVU320
 1083 0166 0022     		movs	r2, #0
 1084 0168 2946     		mov	r1, r5
 1085 016a 2046     		mov	r0, r4
 1086 016c FFF7FEFF 		bl	HAL_GPIO_WritePin
 1087              	.LVL91:
 212:Core/Src/main.c ****   }
 1088              		.loc 1 212 4 discriminator 1 view .LVU321
 1089 0170 0022     		movs	r2, #0
 1090 0172 3146     		mov	r1, r6
 1091 0174 2046     		mov	r0, r4
 1092 0176 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1093              	.LVL92:
 191:Core/Src/main.c ****   {
 1094              		.loc 1 191 9 view .LVU322
 1095 017a E6E7     		b	.L46
 1096              	.L50:
 1097              		.align	2
 1098              	.L49:
 1099 017c 00380240 		.word	1073887232
 1100 0180 00040240 		.word	1073873920
 1101 0184 00ED00E0 		.word	-536810240
 1102 0188 001000E0 		.word	-536866816
ARM GAS  C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s 			page 50


 1103 018c 00000000 		.word	execution_timeArr
 1104 0190 00000000 		.word	start_time
 1105 0194 00000000 		.word	SystemCoreClock
 1106 0198 00000000 		.word	time_sec
 1107 019c 14000000 		.word	imageDimensions+20
 1108 01a0 00000000 		.word	runtime
 1109 01a4 00000000 		.word	imageDimensions
 1110 01a8 00000000 		.word	checkSumArr
 1111 01ac 00000000 		.word	end_time
 1112              		.cfi_endproc
 1113              	.LFE137:
 1115              		.global	__aeabi_i2d
 1116              		.global	__aeabi_dadd
 1117              		.global	__aeabi_dsub
 1118              		.global	__aeabi_dmul
 1119              		.global	__aeabi_dcmpgt
 1120              		.section	.text.calculate_mandelbrot_double,"ax",%progbits
 1121              		.align	1
 1122              		.global	calculate_mandelbrot_double
 1123              		.syntax unified
 1124              		.thumb
 1125              		.thumb_func
 1127              	calculate_mandelbrot_double:
 1128              	.LVL93:
 1129              	.LFB142:
 396:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 1130              		.loc 1 396 1 view -0
 1131              		.cfi_startproc
 1132              		@ args = 0, pretend = 0, frame = 56
 1133              		@ frame_needed = 0, uses_anonymous_args = 0
 396:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 1134              		.loc 1 396 1 is_stmt 0 view .LVU324
 1135 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1136              	.LCFI11:
 1137              		.cfi_def_cfa_offset 36
 1138              		.cfi_offset 4, -36
 1139              		.cfi_offset 5, -32
 1140              		.cfi_offset 6, -28
 1141              		.cfi_offset 7, -24
 1142              		.cfi_offset 8, -20
 1143              		.cfi_offset 9, -16
 1144              		.cfi_offset 10, -12
 1145              		.cfi_offset 11, -8
 1146              		.cfi_offset 14, -4
 1147 0004 2DED028B 		vpush.64	{d8}
 1148              	.LCFI12:
 1149              		.cfi_def_cfa_offset 44
 1150              		.cfi_offset 80, -44
 1151              		.cfi_offset 81, -40
 1152 0008 8FB0     		sub	sp, sp, #60
 1153              	.LCFI13:
 1154              		.cfi_def_cfa_offset 104
 1155 000a 0790     		str	r0, [sp, #28]
 397:Core/Src/main.c ****     //TODO: Complete the function implementation
 1156              		.loc 1 397 5 is_stmt 1 view .LVU325
 1157              	.LVL94:
 399:Core/Src/main.c ****     for (int y = 0; y < height; y++)
ARM GAS  C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s 			page 51


 1158              		.loc 1 399 5 view .LVU326
 399:Core/Src/main.c ****     for (int y = 0; y < height; y++)
 1159              		.loc 1 399 14 is_stmt 0 view .LVU327
 1160 000c 624B     		ldr	r3, .L67+8
 1161 000e 0024     		movs	r4, #0
 1162 0010 0025     		movs	r5, #0
 1163 0012 C3E90045 		strd	r4, [r3]
 400:Core/Src/main.c ****     {
 1164              		.loc 1 400 5 is_stmt 1 view .LVU328
 1165              	.LBB87:
 400:Core/Src/main.c ****     {
 1166              		.loc 1 400 10 view .LVU329
 1167              	.LVL95:
 400:Core/Src/main.c ****     {
 1168              		.loc 1 400 23 discriminator 1 view .LVU330
 1169 0016 B1F1000A 		subs	r10, r1, #0
 1170 001a 0ADD     		ble	.L65
 400:Core/Src/main.c ****     {
 1171              		.loc 1 400 14 is_stmt 0 view .LVU331
 1172 001c 4FF0000B 		mov	fp, #0
 1173              	.LBE87:
 397:Core/Src/main.c ****     //TODO: Complete the function implementation
 1174              		.loc 1 397 14 view .LVU332
 1175 0020 CDF820B0 		str	fp, [sp, #32]
 1176 0024 D946     		mov	r9, fp
 1177              	.LBB97:
 1178              	.LBB88:
 1179              	.LBB89:
 408:Core/Src/main.c ****     		int iteration = 0;
 1180              		.loc 1 408 14 view .LVU333
 1181 0026 9FED5A8B 		vldr.64	d8, .L67
 1182              	.LBB90:
 418:Core/Src/main.c ****     			{
 1183              		.loc 1 418 10 view .LVU334
 1184 002a 5746     		mov	r7, r10
 1185 002c 0D92     		str	r2, [sp, #52]
 1186 002e 5E46     		mov	r6, fp
 1187 0030 8AE0     		b	.L52
 1188              	.L65:
 418:Core/Src/main.c ****     			{
 1189              		.loc 1 418 10 view .LVU335
 1190              	.LBE90:
 1191              	.LBE89:
 1192              	.LBE88:
 1193              	.LBE97:
 397:Core/Src/main.c ****     //TODO: Complete the function implementation
 1194              		.loc 1 397 14 view .LVU336
 1195 0032 0023     		movs	r3, #0
 1196 0034 0893     		str	r3, [sp, #32]
 1197 0036 9946     		mov	r9, r3
 1198              	.LVL96:
 1199              	.L51:
 437:Core/Src/main.c **** 
 1200              		.loc 1 437 1 view .LVU337
 1201 0038 0898     		ldr	r0, [sp, #32]
 1202 003a 4946     		mov	r1, r9
 1203 003c 0FB0     		add	sp, sp, #60
ARM GAS  C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s 			page 52


 1204              	.LCFI14:
 1205              		.cfi_remember_state
 1206              		.cfi_def_cfa_offset 44
 1207              		@ sp needed
 1208 003e BDEC028B 		vldm	sp!, {d8}
 1209              	.LCFI15:
 1210              		.cfi_restore 80
 1211              		.cfi_restore 81
 1212              		.cfi_def_cfa_offset 36
 1213 0042 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1214              	.LVL97:
 1215              	.L60:
 1216              	.LCFI16:
 1217              		.cfi_restore_state
 1218              	.LBB98:
 1219              	.LBB95:
 1220              	.LBB92:
 409:Core/Src/main.c **** 
 1221              		.loc 1 409 11 view .LVU338
 1222 0046 0027     		movs	r7, #0
 1223 0048 06E0     		b	.L54
 1224              	.LVL98:
 1225              	.L63:
 409:Core/Src/main.c **** 
 1226              		.loc 1 409 11 view .LVU339
 1227 004a DDF82490 		ldr	r9, [sp, #36]
 1228 004e 3B46     		mov	r3, r7
 1229 0050 3746     		mov	r7, r6
 1230 0052 DDF82880 		ldr	r8, [sp, #40]
 1231              	.LVL99:
 409:Core/Src/main.c **** 
 1232              		.loc 1 409 11 view .LVU340
 1233 0056 1E46     		mov	r6, r3
 1234              	.LVL100:
 1235              	.L54:
 431:Core/Src/main.c **** 
 1236              		.loc 1 431 7 is_stmt 1 view .LVU341
 431:Core/Src/main.c **** 
 1237              		.loc 1 431 22 is_stmt 0 view .LVU342
 1238 0058 089B     		ldr	r3, [sp, #32]
 1239 005a FA18     		adds	r2, r7, r3
 1240 005c 0892     		str	r2, [sp, #32]
 431:Core/Src/main.c **** 
 1241              		.loc 1 431 22 view .LVU343
 1242 005e 48EBE778 		adc	r8, r8, r7, asr #31
 1243              	.LVL101:
 431:Core/Src/main.c **** 
 1244              		.loc 1 431 22 view .LVU344
 1245              	.LBE92:
 402:Core/Src/main.c ****     	{
 1246              		.loc 1 402 35 is_stmt 1 discriminator 2 view .LVU345
 1247 0062 09F10109 		add	r9, r9, #1
 1248              	.LVL102:
 402:Core/Src/main.c ****     	{
 1249              		.loc 1 402 24 discriminator 1 view .LVU346
 1250 0066 079B     		ldr	r3, [sp, #28]
 1251 0068 4B45     		cmp	r3, r9
ARM GAS  C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s 			page 53


 1252 006a 66D0     		beq	.L66
 1253              	.LVL103:
 1254              	.L56:
 1255              	.LBB93:
 404:Core/Src/main.c ****     		double y_0 = (double)y/height * 2.0 - 1.0;
 1256              		.loc 1 404 7 view .LVU347
 404:Core/Src/main.c ****     		double y_0 = (double)y/height * 2.0 - 1.0;
 1257              		.loc 1 404 21 is_stmt 0 view .LVU348
 1258 006c 4846     		mov	r0, r9
 1259 006e FFF7FEFF 		bl	__aeabi_i2d
 1260              	.LVL104:
 1261 0072 0446     		mov	r4, r0
 1262 0074 0D46     		mov	r5, r1
 404:Core/Src/main.c ****     		double y_0 = (double)y/height * 2.0 - 1.0;
 1263              		.loc 1 404 30 view .LVU349
 1264 0076 0798     		ldr	r0, [sp, #28]
 1265 0078 FFF7FEFF 		bl	__aeabi_i2d
 1266              	.LVL105:
 1267 007c 0246     		mov	r2, r0
 1268 007e 0B46     		mov	r3, r1
 1269 0080 2046     		mov	r0, r4
 1270 0082 2946     		mov	r1, r5
 1271 0084 FFF7FEFF 		bl	__aeabi_ddiv
 1272              	.LVL106:
 404:Core/Src/main.c ****     		double y_0 = (double)y/height * 2.0 - 1.0;
 1273              		.loc 1 404 37 view .LVU350
 1274 0088 0022     		movs	r2, #0
 1275 008a 444B     		ldr	r3, .L67+12
 1276 008c FFF7FEFF 		bl	__aeabi_dmul
 1277              	.LVL107:
 404:Core/Src/main.c ****     		double y_0 = (double)y/height * 2.0 - 1.0;
 1278              		.loc 1 404 14 view .LVU351
 1279 0090 0022     		movs	r2, #0
 1280 0092 434B     		ldr	r3, .L67+16
 1281 0094 FFF7FEFF 		bl	__aeabi_dsub
 1282              	.LVL108:
 1283 0098 CDE90201 		strd	r0, [sp, #8]
 1284              	.LVL109:
 405:Core/Src/main.c **** 
 1285              		.loc 1 405 7 is_stmt 1 view .LVU352
 407:Core/Src/main.c ****     		double y_i = 0;
 1286              		.loc 1 407 7 view .LVU353
 408:Core/Src/main.c ****     		int iteration = 0;
 1287              		.loc 1 408 7 view .LVU354
 409:Core/Src/main.c **** 
 1288              		.loc 1 409 7 view .LVU355
 412:Core/Src/main.c ****     		{
 1289              		.loc 1 412 7 view .LVU356
 412:Core/Src/main.c ****     		{
 1290              		.loc 1 412 24 view .LVU357
 1291 009c 002E     		cmp	r6, #0
 1292 009e D2DD     		ble	.L60
 409:Core/Src/main.c **** 
 1293              		.loc 1 409 11 is_stmt 0 view .LVU358
 1294 00a0 0027     		movs	r7, #0
 408:Core/Src/main.c ****     		int iteration = 0;
 1295              		.loc 1 408 14 view .LVU359
ARM GAS  C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s 			page 54


 1296 00a2 5BEC18AB 		vmov	r10, fp, d8
 407:Core/Src/main.c ****     		double y_i = 0;
 1297              		.loc 1 407 14 view .LVU360
 1298 00a6 55EC184B 		vmov	r4, r5, d8
 1299 00aa CDF82490 		str	r9, [sp, #36]
 1300 00ae 3346     		mov	r3, r6
 1301 00b0 3E46     		mov	r6, r7
 1302 00b2 CDF82880 		str	r8, [sp, #40]
 1303 00b6 1F46     		mov	r7, r3
 1304              	.LVL110:
 1305              	.L55:
 1306              	.LBB91:
 415:Core/Src/main.c ****     			double y_i_sq = y_i*y_i;
 1307              		.loc 1 415 8 is_stmt 1 view .LVU361
 415:Core/Src/main.c ****     			double y_i_sq = y_i*y_i;
 1308              		.loc 1 415 15 is_stmt 0 view .LVU362
 1309 00b8 2246     		mov	r2, r4
 1310 00ba 2B46     		mov	r3, r5
 1311 00bc 2046     		mov	r0, r4
 1312 00be 2946     		mov	r1, r5
 1313 00c0 FFF7FEFF 		bl	__aeabi_dmul
 1314              	.LVL111:
 1315 00c4 CDE90001 		strd	r0, [sp]
 1316              	.LVL112:
 416:Core/Src/main.c **** 
 1317              		.loc 1 416 8 is_stmt 1 view .LVU363
 416:Core/Src/main.c **** 
 1318              		.loc 1 416 15 is_stmt 0 view .LVU364
 1319 00c8 5246     		mov	r2, r10
 1320 00ca 5B46     		mov	r3, fp
 1321 00cc 5046     		mov	r0, r10
 1322              	.LVL113:
 416:Core/Src/main.c **** 
 1323              		.loc 1 416 15 view .LVU365
 1324 00ce 5946     		mov	r1, fp
 1325 00d0 FFF7FEFF 		bl	__aeabi_dmul
 1326              	.LVL114:
 1327 00d4 8046     		mov	r8, r0
 1328 00d6 8946     		mov	r9, r1
 1329              	.LVL115:
 418:Core/Src/main.c ****     			{
 1330              		.loc 1 418 8 is_stmt 1 view .LVU366
 418:Core/Src/main.c ****     			{
 1331              		.loc 1 418 18 is_stmt 0 view .LVU367
 1332 00d8 0246     		mov	r2, r0
 1333 00da 0B46     		mov	r3, r1
 1334 00dc DDE90001 		ldrd	r0, [sp]
 1335 00e0 FFF7FEFF 		bl	__aeabi_dadd
 1336              	.LVL116:
 418:Core/Src/main.c ****     			{
 1337              		.loc 1 418 10 view .LVU368
 1338 00e4 0022     		movs	r2, #0
 1339 00e6 2F4B     		ldr	r3, .L67+20
 1340 00e8 FFF7FEFF 		bl	__aeabi_dcmpgt
 1341              	.LVL117:
 1342 00ec 0028     		cmp	r0, #0
 1343 00ee ACD1     		bne	.L63
ARM GAS  C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s 			page 55


 422:Core/Src/main.c ****     			y_i = 2.0*x_i*y_i + y_0;
 1344              		.loc 1 422 8 is_stmt 1 view .LVU369
 1345              	.LVL118:
 423:Core/Src/main.c **** 
 1346              		.loc 1 423 8 view .LVU370
 423:Core/Src/main.c **** 
 1347              		.loc 1 423 17 is_stmt 0 view .LVU371
 1348 00f0 2246     		mov	r2, r4
 1349 00f2 2B46     		mov	r3, r5
 1350 00f4 2046     		mov	r0, r4
 1351 00f6 2946     		mov	r1, r5
 1352 00f8 FFF7FEFF 		bl	__aeabi_dadd
 1353              	.LVL119:
 423:Core/Src/main.c **** 
 1354              		.loc 1 423 21 view .LVU372
 1355 00fc 5246     		mov	r2, r10
 1356 00fe 5B46     		mov	r3, fp
 1357 0100 FFF7FEFF 		bl	__aeabi_dmul
 1358              	.LVL120:
 423:Core/Src/main.c **** 
 1359              		.loc 1 423 12 view .LVU373
 1360 0104 DDE90423 		ldrd	r2, [sp, #16]
 1361 0108 FFF7FEFF 		bl	__aeabi_dadd
 1362              	.LVL121:
 1363 010c 8246     		mov	r10, r0
 1364              	.LVL122:
 423:Core/Src/main.c **** 
 1365              		.loc 1 423 12 view .LVU374
 1366 010e 8B46     		mov	fp, r1
 1367              	.LVL123:
 425:Core/Src/main.c **** 
 1368              		.loc 1 425 8 is_stmt 1 view .LVU375
 422:Core/Src/main.c ****     			y_i = 2.0*x_i*y_i + y_0;
 1369              		.loc 1 422 15 is_stmt 0 view .LVU376
 1370 0110 4246     		mov	r2, r8
 1371 0112 4B46     		mov	r3, r9
 1372 0114 DDE90001 		ldrd	r0, [sp]
 1373 0118 FFF7FEFF 		bl	__aeabi_dsub
 1374              	.LVL124:
 425:Core/Src/main.c **** 
 1375              		.loc 1 425 12 view .LVU377
 1376 011c DDE90223 		ldrd	r2, [sp, #8]
 1377 0120 FFF7FEFF 		bl	__aeabi_dadd
 1378              	.LVL125:
 1379 0124 0446     		mov	r4, r0
 1380              	.LVL126:
 425:Core/Src/main.c **** 
 1381              		.loc 1 425 12 view .LVU378
 1382 0126 0D46     		mov	r5, r1
 1383              	.LVL127:
 427:Core/Src/main.c **** 
 1384              		.loc 1 427 8 is_stmt 1 view .LVU379
 427:Core/Src/main.c **** 
 1385              		.loc 1 427 18 is_stmt 0 view .LVU380
 1386 0128 0136     		adds	r6, r6, #1
 1387              	.LVL128:
 427:Core/Src/main.c **** 
ARM GAS  C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s 			page 56


 1388              		.loc 1 427 18 view .LVU381
 1389              	.LBE91:
 412:Core/Src/main.c ****     		{
 1390              		.loc 1 412 24 is_stmt 1 view .LVU382
 1391 012a B742     		cmp	r7, r6
 1392 012c C4D1     		bne	.L55
 1393 012e DDF82490 		ldr	r9, [sp, #36]
 1394 0132 3E46     		mov	r6, r7
 1395              	.LVL129:
 412:Core/Src/main.c ****     		{
 1396              		.loc 1 412 24 is_stmt 0 view .LVU383
 1397 0134 DDF82880 		ldr	r8, [sp, #40]
 1398              	.LVL130:
 412:Core/Src/main.c ****     		{
 1399              		.loc 1 412 24 view .LVU384
 1400 0138 8EE7     		b	.L54
 1401              	.LVL131:
 1402              	.L66:
 412:Core/Src/main.c ****     		{
 1403              		.loc 1 412 24 view .LVU385
 1404 013a 0B9E     		ldr	r6, [sp, #44]
 1405 013c 0C9F     		ldr	r7, [sp, #48]
 1406 013e C146     		mov	r9, r8
 1407              	.LVL132:
 1408              	.L58:
 412:Core/Src/main.c ****     		{
 1409              		.loc 1 412 24 view .LVU386
 1410              	.LBE93:
 1411              	.LBE95:
 400:Core/Src/main.c ****     {
 1412              		.loc 1 400 34 is_stmt 1 discriminator 2 view .LVU387
 1413 0140 0136     		adds	r6, r6, #1
 1414              	.LVL133:
 400:Core/Src/main.c ****     {
 1415              		.loc 1 400 23 discriminator 1 view .LVU388
 1416 0142 B742     		cmp	r7, r6
 1417 0144 3FF478AF 		beq	.L51
 1418              	.LVL134:
 1419              	.L52:
 1420              	.LBB96:
 402:Core/Src/main.c ****     	{
 1421              		.loc 1 402 24 discriminator 1 view .LVU389
 1422 0148 079B     		ldr	r3, [sp, #28]
 1423 014a 002B     		cmp	r3, #0
 1424 014c F8DD     		ble	.L58
 1425              	.LBB94:
 405:Core/Src/main.c **** 
 1426              		.loc 1 405 20 is_stmt 0 view .LVU390
 1427 014e 3046     		mov	r0, r6
 1428 0150 FFF7FEFF 		bl	__aeabi_i2d
 1429              	.LVL135:
 1430 0154 0446     		mov	r4, r0
 1431 0156 0D46     		mov	r5, r1
 405:Core/Src/main.c **** 
 1432              		.loc 1 405 29 view .LVU391
 1433 0158 3846     		mov	r0, r7
 1434 015a FFF7FEFF 		bl	__aeabi_i2d
ARM GAS  C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s 			page 57


 1435              	.LVL136:
 1436 015e 0246     		mov	r2, r0
 1437 0160 0B46     		mov	r3, r1
 1438 0162 2046     		mov	r0, r4
 1439 0164 2946     		mov	r1, r5
 1440 0166 FFF7FEFF 		bl	__aeabi_ddiv
 1441              	.LVL137:
 1442 016a 0246     		mov	r2, r0
 1443 016c 0B46     		mov	r3, r1
 405:Core/Src/main.c **** 
 1444              		.loc 1 405 37 view .LVU392
 1445 016e FFF7FEFF 		bl	__aeabi_dadd
 1446              	.LVL138:
 405:Core/Src/main.c **** 
 1447              		.loc 1 405 14 view .LVU393
 1448 0172 0022     		movs	r2, #0
 1449 0174 0C4B     		ldr	r3, .L67+24
 1450 0176 FFF7FEFF 		bl	__aeabi_dsub
 1451              	.LVL139:
 1452 017a CDE90401 		strd	r0, [sp, #16]
 1453              	.LBE94:
 402:Core/Src/main.c ****     	{
 1454              		.loc 1 402 15 view .LVU394
 1455 017e 4FF00008 		mov	r8, #0
 1456 0182 0B96     		str	r6, [sp, #44]
 1457 0184 0C97     		str	r7, [sp, #48]
 1458 0186 0D9E     		ldr	r6, [sp, #52]
 1459              	.LVL140:
 402:Core/Src/main.c ****     	{
 1460              		.loc 1 402 15 view .LVU395
 1461 0188 4B46     		mov	r3, r9
 1462 018a C146     		mov	r9, r8
 1463              	.LVL141:
 402:Core/Src/main.c ****     	{
 1464              		.loc 1 402 15 view .LVU396
 1465 018c 9846     		mov	r8, r3
 1466 018e 6DE7     		b	.L56
 1467              	.L68:
 1468              		.align	3
 1469              	.L67:
 1470 0190 00000000 		.word	0
 1471 0194 00000000 		.word	0
 1472 0198 00000000 		.word	checksum
 1473 019c 00000C40 		.word	1074528256
 1474 01a0 00000440 		.word	1074003968
 1475 01a4 00001040 		.word	1074790400
 1476 01a8 0000F03F 		.word	1072693248
 1477              	.LBE96:
 1478              	.LBE98:
 1479              		.cfi_endproc
 1480              	.LFE142:
 1482              		.section	.text.Error_Handler,"ax",%progbits
 1483              		.align	1
 1484              		.global	Error_Handler
 1485              		.syntax unified
 1486              		.thumb
 1487              		.thumb_func
ARM GAS  C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s 			page 58


 1489              	Error_Handler:
 1490              	.LFB146:
 467:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 1491              		.loc 1 467 1 is_stmt 1 view -0
 1492              		.cfi_startproc
 1493              		@ Volatile: function does not return.
 1494              		@ args = 0, pretend = 0, frame = 0
 1495              		@ frame_needed = 0, uses_anonymous_args = 0
 1496              		@ link register save eliminated.
 470:Core/Src/main.c ****   while (1)
 1497              		.loc 1 470 3 view .LVU398
 1498              	.LBB99:
 1499              	.LBI99:
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1500              		.loc 2 960 27 view .LVU399
 1501              	.LBB100:
 1502              		.loc 2 962 3 view .LVU400
 1503              		.syntax unified
 1504              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1505 0000 72B6     		cpsid i
 1506              	@ 0 "" 2
 1507              		.thumb
 1508              		.syntax unified
 1509              	.L70:
 1510              	.LBE100:
 1511              	.LBE99:
 471:Core/Src/main.c ****   {
 1512              		.loc 1 471 3 view .LVU401
 1513              		.loc 1 473 3 view .LVU402
 471:Core/Src/main.c ****   {
 1514              		.loc 1 471 9 view .LVU403
 1515 0002 FEE7     		b	.L70
 1516              		.cfi_endproc
 1517              	.LFE146:
 1519              		.global	runtime
 1520              		.section	.bss.runtime,"aw",%nobits
 1521              		.align	2
 1524              	runtime:
 1525 0000 00000000 		.space	4
 1526              		.global	execution_timeArr
 1527              		.section	.bss.execution_timeArr,"aw",%nobits
 1528              		.align	3
 1531              	execution_timeArr:
 1532 0000 00000000 		.space	40
 1532      00000000 
 1532      00000000 
 1532      00000000 
 1532      00000000 
 1533              		.global	checkSumArr
 1534              		.section	.bss.checkSumArr,"aw",%nobits
 1535              		.align	3
 1538              	checkSumArr:
 1539 0000 00000000 		.space	40
 1539      00000000 
 1539      00000000 
 1539      00000000 
 1539      00000000 
ARM GAS  C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s 			page 59


 1540              		.global	total_runtime_ms
 1541              		.section	.bss.total_runtime_ms,"aw",%nobits
 1542              		.align	2
 1545              	total_runtime_ms:
 1546 0000 00000000 		.space	4
 1547              		.global	time_sec
 1548              		.section	.bss.time_sec,"aw",%nobits
 1549              		.align	3
 1552              	time_sec:
 1553 0000 00000000 		.space	8
 1553      00000000 
 1554              		.global	initial_width
 1555              		.section	.data.initial_width,"aw"
 1556              		.align	2
 1559              	initial_width:
 1560 0000 80000000 		.word	128
 1561              		.global	initial_height
 1562              		.section	.data.initial_height,"aw"
 1563              		.align	2
 1566              	initial_height:
 1567 0000 80000000 		.word	128
 1568              		.global	execution_time
 1569              		.section	.bss.execution_time,"aw",%nobits
 1570              		.align	3
 1573              	execution_time:
 1574 0000 00000000 		.space	8
 1574      00000000 
 1575              		.global	checksum
 1576              		.section	.bss.checksum,"aw",%nobits
 1577              		.align	3
 1580              	checksum:
 1581 0000 00000000 		.space	8
 1581      00000000 
 1582              		.global	imageDimensions
 1583              		.section	.data.imageDimensions,"aw"
 1584              		.align	2
 1587              	imageDimensions:
 1588 0000 80000000 		.word	128
 1589 0004 A0000000 		.word	160
 1590 0008 C0000000 		.word	192
 1591 000c E0000000 		.word	224
 1592 0010 00010000 		.word	256
 1593              		.global	end_time
 1594              		.section	.bss.end_time,"aw",%nobits
 1595              		.align	3
 1598              	end_time:
 1599 0000 00000000 		.space	8
 1599      00000000 
 1600              		.global	start_time
 1601              		.section	.bss.start_time,"aw",%nobits
 1602              		.align	3
 1605              	start_time:
 1606 0000 00000000 		.space	8
 1606      00000000 
 1607              		.text
 1608              	.Letext0:
 1609              		.file 3 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
ARM GAS  C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s 			page 60


 1610              		.file 4 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1611              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 1612              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 1613              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1614              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1615              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1616              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1617              		.file 11 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1618              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1619              		.file 13 "<built-in>"
ARM GAS  C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s 			page 61


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s:21     .text.SystemClock_Config:00000000 $t
C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s:27     .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s:220    .text.SystemClock_Config:000000a4 $d
C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s:228    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 $t
C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s:234    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 calculate_mandelbrot_fixed_point_arithmetic
C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s:526    .text.calculate_mandelbrot_fixed_point_arithmetic:00000128 $d
C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s:535    .text.calculate_mandelbrot_float:00000000 $t
C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s:541    .text.calculate_mandelbrot_float:00000000 calculate_mandelbrot_float
C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s:753    .text.calculate_mandelbrot_float:000000d0 $d
C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s:1580   .bss.checksum:00000000 checksum
C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s:765    .text.main:00000000 $t
C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s:771    .text.main:00000000 main
C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s:1099   .text.main:0000017c $d
C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s:1531   .bss.execution_timeArr:00000000 execution_timeArr
C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s:1605   .bss.start_time:00000000 start_time
C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s:1552   .bss.time_sec:00000000 time_sec
C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s:1587   .data.imageDimensions:00000000 imageDimensions
C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s:1524   .bss.runtime:00000000 runtime
C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s:1538   .bss.checkSumArr:00000000 checkSumArr
C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s:1598   .bss.end_time:00000000 end_time
C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s:1121   .text.calculate_mandelbrot_double:00000000 $t
C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s:1127   .text.calculate_mandelbrot_double:00000000 calculate_mandelbrot_double
C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s:1470   .text.calculate_mandelbrot_double:00000190 $d
C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s:1483   .text.Error_Handler:00000000 $t
C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s:1489   .text.Error_Handler:00000000 Error_Handler
C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s:1521   .bss.runtime:00000000 $d
C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s:1528   .bss.execution_timeArr:00000000 $d
C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s:1535   .bss.checkSumArr:00000000 $d
C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s:1545   .bss.total_runtime_ms:00000000 total_runtime_ms
C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s:1542   .bss.total_runtime_ms:00000000 $d
C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s:1549   .bss.time_sec:00000000 $d
C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s:1559   .data.initial_width:00000000 initial_width
C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s:1556   .data.initial_width:00000000 $d
C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s:1566   .data.initial_height:00000000 initial_height
C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s:1563   .data.initial_height:00000000 $d
C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s:1573   .bss.execution_time:00000000 execution_time
C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s:1570   .bss.execution_time:00000000 $d
C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s:1577   .bss.checksum:00000000 $d
C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s:1584   .data.imageDimensions:00000000 $d
C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s:1595   .bss.end_time:00000000 $d
C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s:1602   .bss.start_time:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
__aeabi_ldivmod
__aeabi_ui2d
__aeabi_ddiv
HAL_Init
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_GetTick
HAL_Delay
SystemCoreClock
ARM GAS  C:\Users\maari\AppData\Local\Temp\cc4u5bJh.s 			page 62


__aeabi_i2d
__aeabi_dadd
__aeabi_dsub
__aeabi_dmul
__aeabi_dcmpgt
