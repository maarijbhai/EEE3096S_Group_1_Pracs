ARM GAS  C:\Users\maari\AppData\Local\Temp\cchtTB9G.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.SystemClock_Config,"ax",%progbits
  19              		.align	1
  20              		.global	SystemClock_Config
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	SystemClock_Config:
  26              	.LFB138:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "stm32f4xx_hal.h"
  22:Core/Src/main.c **** #include <stdint.h>
  23:Core/Src/main.c **** #include <stdio.h>
  24:Core/Src/main.c **** #include "core_cm4.h"
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  27:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* USER CODE END Includes */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  32:Core/Src/main.c **** /* USER CODE BEGIN PTD */
ARM GAS  C:\Users\maari\AppData\Local\Temp\cchtTB9G.s 			page 2


  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* USER CODE END PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PD */
  38:Core/Src/main.c **** #define MAX_ITER 100
  39:Core/Src/main.c **** #define SCALE 1000000
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** // for bit shifting in the fixed point arithmetic function
  42:Core/Src/main.c **** #define Q   16			// scale factor
  43:Core/Src/main.c **** #define ONE (1 << Q)	// division by scale factor
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE END PD */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  48:Core/Src/main.c **** /* USER CODE BEGIN PM */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* USER CODE END PM */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* USER CODE BEGIN PV */
  55:Core/Src/main.c **** //TODO: Define variables you think you might need
  56:Core/Src/main.c **** // - Performance timing variables (e.g execution time, throughput, pixels per second, clock cycles)
  57:Core/Src/main.c **** uint64_t start_time = 0;
  58:Core/Src/main.c **** uint64_t end_time = 0;
  59:Core/Src/main.c **** int imageDimensions[5] = {128, 160, 192, 224, 256};
  60:Core/Src/main.c **** uint64_t checksum = 0;
  61:Core/Src/main.c **** uint64_t execution_time = 0;
  62:Core/Src/main.c **** int initial_height = 128;
  63:Core/Src/main.c **** int initial_width = 128;
  64:Core/Src/main.c **** volatile double time_sec;
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** volatile uint64_t cycles;
  67:Core/Src/main.c **** volatile double throughput;
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** /* USER CODE END PV */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  73:Core/Src/main.c **** void SystemClock_Config(void);
  74:Core/Src/main.c **** static void MX_GPIO_Init(void);
  75:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  76:Core/Src/main.c **** //TODO: Define any function prototypes you might need such as the calculate Mandelbrot function amo
  77:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations);
  78:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations);
  79:Core/Src/main.c **** static inline void cycle_counter_init(void);
  80:Core/Src/main.c **** static inline uint32_t cycle_counter_get(void);
  81:Core/Src/main.c **** static inline uint64_t cycle_diff(uint32_t start, uint32_t end);
  82:Core/Src/main.c **** 
  83:Core/Src/main.c **** /* USER CODE END PFP */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  86:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c **** /* USER CODE END 0 */
  89:Core/Src/main.c **** 
ARM GAS  C:\Users\maari\AppData\Local\Temp\cchtTB9G.s 			page 3


  90:Core/Src/main.c **** /**
  91:Core/Src/main.c ****   * @brief  The application entry point.
  92:Core/Src/main.c ****   * @retval int
  93:Core/Src/main.c ****   */
  94:Core/Src/main.c **** int main(void)
  95:Core/Src/main.c **** {
  96:Core/Src/main.c **** 	uint32_t program_start = HAL_GetTick();
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* USER CODE END 1 */
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 105:Core/Src/main.c ****   HAL_Init();
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****   /* USER CODE END Init */
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****   /* Configure the system clock */
 112:Core/Src/main.c ****   SystemClock_Config();
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****   /* USER CODE END SysInit */
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****   /* Initialize all configured peripherals */
 119:Core/Src/main.c ****   MX_GPIO_Init();
 120:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   uint32_t start, end;
 123:Core/Src/main.c **** 
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****    cycle_counter_init();
 126:Core/Src/main.c ****    start_time = HAL_GetTick();
 127:Core/Src/main.c ****    start = DWT->CYCCNT;
 128:Core/Src/main.c **** 
 129:Core/Src/main.c **** 
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****    uint32_t pixels = initial_height*initial_width;
 132:Core/Src/main.c ****    //getting the start cycle to get the cycle count
 133:Core/Src/main.c ****    uint32_t start_cycle = cycle_counter_get();
 134:Core/Src/main.c **** 
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****     //TODO: Call the Mandelbrot Function and store the output in the checksum variable defined init
 137:Core/Src/main.c ****    //checksum = calculate_mandelbrot_fixed_point_arithmetic(initial_width, initial_height, MAX_ITER
 138:Core/Src/main.c ****     checksum = calculate_mandelbrot_double(initial_width, initial_height, MAX_ITER);
 139:Core/Src/main.c **** 
 140:Core/Src/main.c ****     //TODO: Record the end time
 141:Core/Src/main.c ****    end_time = HAL_GetTick();
 142:Core/Src/main.c ****    end = DWT->CYCCNT;
 143:Core/Src/main.c ****    uint32_t cycles = end - start;
 144:Core/Src/main.c ****    time_sec = (double)cycles / SystemCoreClock;
 145:Core/Src/main.c **** 
 146:Core/Src/main.c **** 
ARM GAS  C:\Users\maari\AppData\Local\Temp\cchtTB9G.s 			page 4


 147:Core/Src/main.c **** 
 148:Core/Src/main.c **** 
 149:Core/Src/main.c **** 
 150:Core/Src/main.c ****    //getting the end cycle to get the cycle count
 151:Core/Src/main.c ****    uint32_t end_cycle = cycle_counter_get();
 152:Core/Src/main.c **** 
 153:Core/Src/main.c ****     cycles = cycle_diff(start_cycle,end_cycle);
 154:Core/Src/main.c **** 
 155:Core/Src/main.c ****     //TODO: Calculate the execution time
 156:Core/Src/main.c ****    execution_time = end_time - start_time;
 157:Core/Src/main.c **** 
 158:Core/Src/main.c ****    throughput = (double)pixels / ((double)execution_time / 1000.0);
 159:Core/Src/main.c **** 
 160:Core/Src/main.c **** 
 161:Core/Src/main.c ****     //TODO: Turn on LED 1 to signify the end of the operation
 162:Core/Src/main.c ****    HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_SET);
 163:Core/Src/main.c **** 
 164:Core/Src/main.c ****     //TODO: Hold the LEDs on for a 1s delay
 165:Core/Src/main.c ****    HAL_Delay(1000);
 166:Core/Src/main.c **** 
 167:Core/Src/main.c ****     //TODO: Turn off the LEDs
 168:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET);
 169:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 170:Core/Src/main.c **** 
 171:Core/Src/main.c ****   /* USER CODE END 2 */
 172:Core/Src/main.c **** 
 173:Core/Src/main.c ****   /* Infinite loop */
 174:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 175:Core/Src/main.c ****   while (1)
 176:Core/Src/main.c ****   {
 177:Core/Src/main.c ****     /* USER CODE END WHILE */
 178:Core/Src/main.c **** 
 179:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 180:Core/Src/main.c **** 	  //TODO: Visual indicator: Turn on LED0 to signal processing start
 181:Core/Src/main.c **** 	  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);
 182:Core/Src/main.c **** 
 183:Core/Src/main.c **** 
 184:Core/Src/main.c **** 	  //TODO: Benchmark and Profile Performance
 185:Core/Src/main.c **** 
 186:Core/Src/main.c **** 
 187:Core/Src/main.c **** 	  //TODO: Visual indicator: Turn on LED1 to signal processing start
 188:Core/Src/main.c **** 	  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_SET);
 189:Core/Src/main.c **** 
 190:Core/Src/main.c **** 
 191:Core/Src/main.c **** 	  //TODO: Keep the LEDs ON for 2s
 192:Core/Src/main.c **** 	  HAL_Delay(1000);
 193:Core/Src/main.c **** 
 194:Core/Src/main.c **** 	  //TODO: Turn OFF LEDs
 195:Core/Src/main.c **** 	  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET);
 196:Core/Src/main.c **** 	  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 197:Core/Src/main.c ****   }
 198:Core/Src/main.c ****   /* USER CODE END 3 */
 199:Core/Src/main.c **** 
 200:Core/Src/main.c ****   uint32_t program_end = HAL_GetTick();
 201:Core/Src/main.c ****   uint32_t total_runtime_ms = program_end - program_start;
 202:Core/Src/main.c **** }
 203:Core/Src/main.c **** 
ARM GAS  C:\Users\maari\AppData\Local\Temp\cchtTB9G.s 			page 5


 204:Core/Src/main.c **** /**
 205:Core/Src/main.c ****   * @brief System Clock Configuration
 206:Core/Src/main.c ****   * @retval None
 207:Core/Src/main.c ****   */
 208:Core/Src/main.c **** void SystemClock_Config(void)
 209:Core/Src/main.c **** {
  27              		.loc 1 209 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 80
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 00B5     		push	{lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 14, -4
  35 0002 95B0     		sub	sp, sp, #84
  36              	.LCFI1:
  37              		.cfi_def_cfa_offset 88
 210:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  38              		.loc 1 210 3 view .LVU1
  39              		.loc 1 210 22 is_stmt 0 view .LVU2
  40 0004 3422     		movs	r2, #52
  41 0006 0021     		movs	r1, #0
  42 0008 07A8     		add	r0, sp, #28
  43 000a FFF7FEFF 		bl	memset
  44              	.LVL0:
 211:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  45              		.loc 1 211 3 is_stmt 1 view .LVU3
  46              		.loc 1 211 22 is_stmt 0 view .LVU4
  47 000e 0023     		movs	r3, #0
  48 0010 0293     		str	r3, [sp, #8]
  49 0012 0393     		str	r3, [sp, #12]
  50 0014 0493     		str	r3, [sp, #16]
  51 0016 0593     		str	r3, [sp, #20]
  52 0018 0693     		str	r3, [sp, #24]
 212:Core/Src/main.c **** 
 213:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 214:Core/Src/main.c ****   */
 215:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
  53              		.loc 1 215 3 is_stmt 1 view .LVU5
  54              	.LBB22:
  55              		.loc 1 215 3 view .LVU6
  56 001a 0093     		str	r3, [sp]
  57              		.loc 1 215 3 view .LVU7
  58 001c 214A     		ldr	r2, .L9
  59 001e 116C     		ldr	r1, [r2, #64]
  60 0020 41F08051 		orr	r1, r1, #268435456
  61 0024 1164     		str	r1, [r2, #64]
  62              		.loc 1 215 3 view .LVU8
  63 0026 126C     		ldr	r2, [r2, #64]
  64 0028 02F08052 		and	r2, r2, #268435456
  65 002c 0092     		str	r2, [sp]
  66              		.loc 1 215 3 view .LVU9
  67 002e 009A     		ldr	r2, [sp]
  68              	.LBE22:
  69              		.loc 1 215 3 view .LVU10
 216:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
  70              		.loc 1 216 3 view .LVU11
ARM GAS  C:\Users\maari\AppData\Local\Temp\cchtTB9G.s 			page 6


  71              	.LBB23:
  72              		.loc 1 216 3 view .LVU12
  73 0030 0193     		str	r3, [sp, #4]
  74              		.loc 1 216 3 view .LVU13
  75 0032 1D4A     		ldr	r2, .L9+4
  76 0034 1368     		ldr	r3, [r2]
  77 0036 23F44043 		bic	r3, r3, #49152
  78 003a 43F48043 		orr	r3, r3, #16384
  79 003e 1360     		str	r3, [r2]
  80              		.loc 1 216 3 view .LVU14
  81 0040 1368     		ldr	r3, [r2]
  82 0042 03F44043 		and	r3, r3, #49152
  83 0046 0193     		str	r3, [sp, #4]
  84              		.loc 1 216 3 view .LVU15
  85 0048 019B     		ldr	r3, [sp, #4]
  86              	.LBE23:
  87              		.loc 1 216 3 view .LVU16
 217:Core/Src/main.c **** 
 218:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 219:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 220:Core/Src/main.c ****   */
 221:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
  88              		.loc 1 221 3 view .LVU17
  89              		.loc 1 221 36 is_stmt 0 view .LVU18
  90 004a 0123     		movs	r3, #1
  91 004c 0793     		str	r3, [sp, #28]
 222:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  92              		.loc 1 222 3 is_stmt 1 view .LVU19
  93              		.loc 1 222 30 is_stmt 0 view .LVU20
  94 004e 4FF48033 		mov	r3, #65536
  95 0052 0893     		str	r3, [sp, #32]
 223:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  96              		.loc 1 223 3 is_stmt 1 view .LVU21
  97              		.loc 1 223 34 is_stmt 0 view .LVU22
  98 0054 0223     		movs	r3, #2
  99 0056 0D93     		str	r3, [sp, #52]
 224:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 100              		.loc 1 224 3 is_stmt 1 view .LVU23
 101              		.loc 1 224 35 is_stmt 0 view .LVU24
 102 0058 4FF48002 		mov	r2, #4194304
 103 005c 0E92     		str	r2, [sp, #56]
 225:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 15;
 104              		.loc 1 225 3 is_stmt 1 view .LVU25
 105              		.loc 1 225 30 is_stmt 0 view .LVU26
 106 005e 0F22     		movs	r2, #15
 107 0060 0F92     		str	r2, [sp, #60]
 226:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 108              		.loc 1 226 3 is_stmt 1 view .LVU27
 109              		.loc 1 226 30 is_stmt 0 view .LVU28
 110 0062 9022     		movs	r2, #144
 111 0064 1092     		str	r2, [sp, #64]
 227:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 112              		.loc 1 227 3 is_stmt 1 view .LVU29
 113              		.loc 1 227 30 is_stmt 0 view .LVU30
 114 0066 1193     		str	r3, [sp, #68]
 228:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 115              		.loc 1 228 3 is_stmt 1 view .LVU31
ARM GAS  C:\Users\maari\AppData\Local\Temp\cchtTB9G.s 			page 7


 116              		.loc 1 228 30 is_stmt 0 view .LVU32
 117 0068 1293     		str	r3, [sp, #72]
 229:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 118              		.loc 1 229 3 is_stmt 1 view .LVU33
 119              		.loc 1 229 30 is_stmt 0 view .LVU34
 120 006a 1393     		str	r3, [sp, #76]
 230:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 121              		.loc 1 230 3 is_stmt 1 view .LVU35
 122              		.loc 1 230 7 is_stmt 0 view .LVU36
 123 006c 07A8     		add	r0, sp, #28
 124 006e FFF7FEFF 		bl	HAL_RCC_OscConfig
 125              	.LVL1:
 126              		.loc 1 230 6 discriminator 1 view .LVU37
 127 0072 98B9     		cbnz	r0, .L7
 231:Core/Src/main.c ****   {
 232:Core/Src/main.c ****     Error_Handler();
 233:Core/Src/main.c ****   }
 234:Core/Src/main.c **** 
 235:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 236:Core/Src/main.c ****   */
 237:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 128              		.loc 1 237 3 is_stmt 1 view .LVU38
 129              		.loc 1 237 31 is_stmt 0 view .LVU39
 130 0074 0F23     		movs	r3, #15
 131 0076 0293     		str	r3, [sp, #8]
 238:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 239:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 132              		.loc 1 239 3 is_stmt 1 view .LVU40
 133              		.loc 1 239 34 is_stmt 0 view .LVU41
 134 0078 0223     		movs	r3, #2
 135 007a 0393     		str	r3, [sp, #12]
 240:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 136              		.loc 1 240 3 is_stmt 1 view .LVU42
 137              		.loc 1 240 35 is_stmt 0 view .LVU43
 138 007c 0023     		movs	r3, #0
 139 007e 0493     		str	r3, [sp, #16]
 241:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 140              		.loc 1 241 3 is_stmt 1 view .LVU44
 141              		.loc 1 241 36 is_stmt 0 view .LVU45
 142 0080 4FF4A053 		mov	r3, #5120
 143 0084 0593     		str	r3, [sp, #20]
 242:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 144              		.loc 1 242 3 is_stmt 1 view .LVU46
 145              		.loc 1 242 36 is_stmt 0 view .LVU47
 146 0086 4FF48053 		mov	r3, #4096
 147 008a 0693     		str	r3, [sp, #24]
 243:Core/Src/main.c **** 
 244:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 148              		.loc 1 244 3 is_stmt 1 view .LVU48
 149              		.loc 1 244 7 is_stmt 0 view .LVU49
 150 008c 0321     		movs	r1, #3
 151 008e 02A8     		add	r0, sp, #8
 152 0090 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 153              	.LVL2:
 154              		.loc 1 244 6 discriminator 1 view .LVU50
 155 0094 20B9     		cbnz	r0, .L8
 245:Core/Src/main.c ****   {
ARM GAS  C:\Users\maari\AppData\Local\Temp\cchtTB9G.s 			page 8


 246:Core/Src/main.c ****     Error_Handler();
 247:Core/Src/main.c ****   }
 248:Core/Src/main.c **** }
 156              		.loc 1 248 1 view .LVU51
 157 0096 15B0     		add	sp, sp, #84
 158              	.LCFI2:
 159              		.cfi_remember_state
 160              		.cfi_def_cfa_offset 4
 161              		@ sp needed
 162 0098 5DF804FB 		ldr	pc, [sp], #4
 163              	.L7:
 164              	.LCFI3:
 165              		.cfi_restore_state
 232:Core/Src/main.c ****   }
 166              		.loc 1 232 5 is_stmt 1 view .LVU52
 167              	.LBB24:
 168              	.LBI24:
 249:Core/Src/main.c **** 
 250:Core/Src/main.c **** /**
 251:Core/Src/main.c ****   * @brief GPIO Initialization Function
 252:Core/Src/main.c ****   * @param None
 253:Core/Src/main.c ****   * @retval None
 254:Core/Src/main.c ****   */
 255:Core/Src/main.c **** static void MX_GPIO_Init(void)
 256:Core/Src/main.c **** {
 257:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 258:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 259:Core/Src/main.c **** 
 260:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 261:Core/Src/main.c **** 
 262:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 263:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 264:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 265:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 266:Core/Src/main.c **** 
 267:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 268:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 269:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7, GPIO_PIN_RESET);
 270:Core/Src/main.c **** 
 271:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 PB2 PB3
 272:Core/Src/main.c ****                            PB4 PB5 PB6 PB7 */
 273:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 274:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 275:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 276:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 277:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 278:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 279:Core/Src/main.c **** 
 280:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_2 */
 281:Core/Src/main.c **** 
 282:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
 283:Core/Src/main.c **** }
 284:Core/Src/main.c **** 
 285:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 286:Core/Src/main.c **** //TODO: Function signatures you defined previously , implement them here
 287:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations)
 288:Core/Src/main.c **** {
ARM GAS  C:\Users\maari\AppData\Local\Temp\cchtTB9G.s 			page 9


 289:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 290:Core/Src/main.c **** 
 291:Core/Src/main.c ****     // This function utilizes bit shifting to decreases the computational costs of division on deci
 292:Core/Src/main.c **** 
 293:Core/Src/main.c ****     // For the initial loop, x and y are zero so instead of computing it and lastly subtracting the
 294:Core/Src/main.c ****     // this code sets the initial starting point to the constant
 295:Core/Src/main.c ****     const int32_t x_left = -( (5 * ONE) / 2 ); // -2.5 as x starting point
 296:Core/Src/main.c ****     const int32_t y_top  = -ONE;               // -1.0 as y starting point
 297:Core/Src/main.c **** 
 298:Core/Src/main.c ****     // Instead of recomputing x*... and y*..., we just add the multiplication each loop as it would
 299:Core/Src/main.c ****     // This way addition uses less computational power than multiplication
 300:Core/Src/main.c ****     const int32_t x_step = (int32_t)(((int64_t)7 * ONE) / (2 * width));			// The 2 in the denominat
 301:Core/Src/main.c ****     const int32_t y_step = (int32_t)(((int64_t)2 * ONE) / height);				// Bit shift the top before d
 302:Core/Src/main.c **** 
 303:Core/Src/main.c ****     const int32_t FOUR = 4 * ONE;				// for condition in while loop
 304:Core/Src/main.c **** 
 305:Core/Src/main.c ****     int32_t y0 = y_top;				// starting constant
 306:Core/Src/main.c ****     for (int y = 0; y < height; ++y) {
 307:Core/Src/main.c ****         int32_t x0 = x_left;			// starting constant
 308:Core/Src/main.c **** 
 309:Core/Src/main.c ****         for (int x = 0; x < width; ++x) {
 310:Core/Src/main.c ****             int32_t xi = 0, yi = 0;
 311:Core/Src/main.c ****             int iteration = 0;
 312:Core/Src/main.c **** 
 313:Core/Src/main.c ****             while (iteration < max_iterations) {
 314:Core/Src/main.c ****                 int32_t xi2 = (int32_t)(((int64_t)xi * xi + (1 << (Q - 1))) >> Q);
 315:Core/Src/main.c ****                 int32_t yi2 = (int32_t)(((int64_t)yi * yi + (1 << (Q - 1))) >> Q);
 316:Core/Src/main.c **** 
 317:Core/Src/main.c ****                 // after calculating square values for this loop check if condition is still met
 318:Core/Src/main.c ****                 if ((int64_t)xi2 + yi2 > FOUR) break;
 319:Core/Src/main.c **** 
 320:Core/Src/main.c ****                 int32_t temp = xi2 - yi2 + x0;
 321:Core/Src/main.c **** 
 322:Core/Src/main.c ****                 // Q is 2^16, so Q-1 = 2^15 to account for 2*xi*yi
 323:Core/Src/main.c ****                 yi = (int32_t)(((int64_t)xi * yi + (1 << (Q - 2))) >> (Q - 1)) + y0;
 324:Core/Src/main.c ****                 xi = temp;           // following mandelbrot.py
 325:Core/Src/main.c **** 
 326:Core/Src/main.c ****                 ++iteration;
 327:Core/Src/main.c ****             }
 328:Core/Src/main.c **** 
 329:Core/Src/main.c ****             mandelbrot_sum += iteration;
 330:Core/Src/main.c ****             x0 += x_step; // add step instead of multiplying new x value
 331:Core/Src/main.c ****         }
 332:Core/Src/main.c ****         y0 += y_step;     // add step instead of multiplying new y value
 333:Core/Src/main.c ****     }
 334:Core/Src/main.c **** 
 335:Core/Src/main.c ****     return mandelbrot_sum;
 336:Core/Src/main.c **** }
 337:Core/Src/main.c **** 
 338:Core/Src/main.c **** 
 339:Core/Src/main.c **** //TODO: Mandelbroat using variable type double
 340:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations)
 341:Core/Src/main.c **** {
 342:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 343:Core/Src/main.c ****     //TODO: Complete the function implementation
 344:Core/Src/main.c ****     checksum = 0;
 345:Core/Src/main.c ****     for (int y = 0; y < height; y++)
ARM GAS  C:\Users\maari\AppData\Local\Temp\cchtTB9G.s 			page 10


 346:Core/Src/main.c ****     {
 347:Core/Src/main.c ****     	for (int x = 0; x < width ; x++)
 348:Core/Src/main.c ****     	{
 349:Core/Src/main.c ****     		double x_0 = ((double)x/width)*3.5 - 2.5;
 350:Core/Src/main.c ****     		double y_0 = (double)y/height * 2.0 - 1.0;
 351:Core/Src/main.c **** 
 352:Core/Src/main.c ****     		double x_i = 0;
 353:Core/Src/main.c ****     		double y_i = 0;
 354:Core/Src/main.c ****     		int iteration = 0;
 355:Core/Src/main.c **** 
 356:Core/Src/main.c **** 
 357:Core/Src/main.c ****     		while (iteration < max_iterations)
 358:Core/Src/main.c ****     		{
 359:Core/Src/main.c **** 
 360:Core/Src/main.c ****     			double x_i_sq = x_i*x_i;
 361:Core/Src/main.c ****     			double y_i_sq = y_i*y_i;
 362:Core/Src/main.c **** 
 363:Core/Src/main.c ****     			if(x_i_sq + y_i_sq > 4.0)
 364:Core/Src/main.c ****     			{
 365:Core/Src/main.c ****     				break;
 366:Core/Src/main.c ****     			}
 367:Core/Src/main.c ****     			double temp  = x_i_sq - y_i_sq;
 368:Core/Src/main.c ****     			y_i = 2.0*x_i*y_i + y_0;
 369:Core/Src/main.c **** 
 370:Core/Src/main.c ****     			x_i = temp + x_0;
 371:Core/Src/main.c **** 
 372:Core/Src/main.c ****     			iteration = iteration +1;
 373:Core/Src/main.c **** 
 374:Core/Src/main.c ****     		}
 375:Core/Src/main.c **** 
 376:Core/Src/main.c ****     		mandelbrot_sum = mandelbrot_sum + iteration;
 377:Core/Src/main.c **** 
 378:Core/Src/main.c ****     	}
 379:Core/Src/main.c ****     }
 380:Core/Src/main.c ****     //checksum = mandelbrot_sum;
 381:Core/Src/main.c ****     return mandelbrot_sum;
 382:Core/Src/main.c **** }
 383:Core/Src/main.c **** 
 384:Core/Src/main.c **** 
 385:Core/Src/main.c **** 
 386:Core/Src/main.c **** static inline void cycle_counter_init(void)
 387:Core/Src/main.c ****  {
 388:Core/Src/main.c **** 	  CoreDebug->DEMCR |= CoreDebug_DEMCR_TRCENA_Msk;
 389:Core/Src/main.c **** 	  DWT->CYCCNT = 0;
 390:Core/Src/main.c **** 	  DWT->CTRL |= DWT_CTRL_CYCCNTENA_Msk;
 391:Core/Src/main.c ****  }
 392:Core/Src/main.c **** 
 393:Core/Src/main.c **** 
 394:Core/Src/main.c **** 
 395:Core/Src/main.c ****  static inline uint32_t cycle_counter_get(void)
 396:Core/Src/main.c ****  {
 397:Core/Src/main.c ****      return DWT->CYCCNT;
 398:Core/Src/main.c ****  }
 399:Core/Src/main.c **** 
 400:Core/Src/main.c ****  static inline uint64_t cycle_diff(uint32_t start, uint32_t end)
 401:Core/Src/main.c ****  {
 402:Core/Src/main.c ****      return (end >= start) ? (uint64_t)(end - start)
ARM GAS  C:\Users\maari\AppData\Local\Temp\cchtTB9G.s 			page 11


 403:Core/Src/main.c ****                            : (uint64_t)(0x100000000ULL - start + end);
 404:Core/Src/main.c ****  }
 405:Core/Src/main.c **** /* USER CODE END 4 */
 406:Core/Src/main.c **** 
 407:Core/Src/main.c **** /**
 408:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 409:Core/Src/main.c ****   * @retval None
 410:Core/Src/main.c ****   */
 411:Core/Src/main.c **** void Error_Handler(void)
 169              		.loc 1 411 6 view .LVU53
 412:Core/Src/main.c **** {
 413:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 414:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 415:Core/Src/main.c ****   __disable_irq();
 170              		.loc 1 415 3 view .LVU54
 171              	.LBB25:
 172              	.LBI25:
 173              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
ARM GAS  C:\Users\maari\AppData\Local\Temp\cchtTB9G.s 			page 12


  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
ARM GAS  C:\Users\maari\AppData\Local\Temp\cchtTB9G.s 			page 13


  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
ARM GAS  C:\Users\maari\AppData\Local\Temp\cchtTB9G.s 			page 14


 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\maari\AppData\Local\Temp\cchtTB9G.s 			page 15


 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
ARM GAS  C:\Users\maari\AppData\Local\Temp\cchtTB9G.s 			page 16


 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
ARM GAS  C:\Users\maari\AppData\Local\Temp\cchtTB9G.s 			page 17


 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
ARM GAS  C:\Users\maari\AppData\Local\Temp\cchtTB9G.s 			page 18


 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
ARM GAS  C:\Users\maari\AppData\Local\Temp\cchtTB9G.s 			page 19


 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
ARM GAS  C:\Users\maari\AppData\Local\Temp\cchtTB9G.s 			page 20


 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
ARM GAS  C:\Users\maari\AppData\Local\Temp\cchtTB9G.s 			page 21


 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\maari\AppData\Local\Temp\cchtTB9G.s 			page 22


 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\maari\AppData\Local\Temp\cchtTB9G.s 			page 23


 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\maari\AppData\Local\Temp\cchtTB9G.s 			page 24


 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\maari\AppData\Local\Temp\cchtTB9G.s 			page 25


 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\maari\AppData\Local\Temp\cchtTB9G.s 			page 26


 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
ARM GAS  C:\Users\maari\AppData\Local\Temp\cchtTB9G.s 			page 27


 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
ARM GAS  C:\Users\maari\AppData\Local\Temp\cchtTB9G.s 			page 28


 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 174              		.loc 2 960 27 view .LVU55
 175              	.LBB26:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 176              		.loc 2 962 3 view .LVU56
 177              		.syntax unified
 178              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 179 009c 72B6     		cpsid i
 180              	@ 0 "" 2
 181              		.thumb
 182              		.syntax unified
 183              	.L3:
 184              	.LBE26:
 185              	.LBE25:
 416:Core/Src/main.c ****   while (1)
 186              		.loc 1 416 3 view .LVU57
 417:Core/Src/main.c ****   {
 418:Core/Src/main.c ****   }
 187              		.loc 1 418 3 view .LVU58
 416:Core/Src/main.c ****   while (1)
 188              		.loc 1 416 9 view .LVU59
 189 009e FEE7     		b	.L3
 190              	.L8:
 191              	.LBE24:
 246:Core/Src/main.c ****   }
 192              		.loc 1 246 5 view .LVU60
 193              	.LBB27:
 194              	.LBI27:
 411:Core/Src/main.c **** {
 195              		.loc 1 411 6 view .LVU61
 415:Core/Src/main.c ****   while (1)
 196              		.loc 1 415 3 view .LVU62
 197              	.LBB28:
 198              	.LBI28:
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 199              		.loc 2 960 27 view .LVU63
 200              	.LBB29:
 201              		.loc 2 962 3 view .LVU64
 202              		.syntax unified
 203              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 204 00a0 72B6     		cpsid i
 205              	@ 0 "" 2
 206              		.thumb
 207              		.syntax unified
 208              	.L5:
 209              	.LBE29:
 210              	.LBE28:
 416:Core/Src/main.c ****   {
ARM GAS  C:\Users\maari\AppData\Local\Temp\cchtTB9G.s 			page 29


 211              		.loc 1 416 3 view .LVU65
 212              		.loc 1 418 3 view .LVU66
 416:Core/Src/main.c ****   {
 213              		.loc 1 416 9 view .LVU67
 214 00a2 FEE7     		b	.L5
 215              	.L10:
 216              		.align	2
 217              	.L9:
 218 00a4 00380240 		.word	1073887232
 219 00a8 00700040 		.word	1073770496
 220              	.LBE27:
 221              		.cfi_endproc
 222              	.LFE138:
 224              		.global	__aeabi_ldivmod
 225              		.section	.text.calculate_mandelbrot_fixed_point_arithmetic,"ax",%progbits
 226              		.align	1
 227              		.global	calculate_mandelbrot_fixed_point_arithmetic
 228              		.syntax unified
 229              		.thumb
 230              		.thumb_func
 232              	calculate_mandelbrot_fixed_point_arithmetic:
 233              	.LVL3:
 234              	.LFB140:
 288:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 235              		.loc 1 288 1 view -0
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 32
 238              		@ frame_needed = 0, uses_anonymous_args = 0
 288:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 239              		.loc 1 288 1 is_stmt 0 view .LVU69
 240 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 241              	.LCFI4:
 242              		.cfi_def_cfa_offset 36
 243              		.cfi_offset 4, -36
 244              		.cfi_offset 5, -32
 245              		.cfi_offset 6, -28
 246              		.cfi_offset 7, -24
 247              		.cfi_offset 8, -20
 248              		.cfi_offset 9, -16
 249              		.cfi_offset 10, -12
 250              		.cfi_offset 11, -8
 251              		.cfi_offset 14, -4
 252 0004 89B0     		sub	sp, sp, #36
 253              	.LCFI5:
 254              		.cfi_def_cfa_offset 72
 255 0006 0390     		str	r0, [sp, #12]
 256 0008 0E46     		mov	r6, r1
 257 000a 1446     		mov	r4, r2
 289:Core/Src/main.c **** 
 258              		.loc 1 289 5 is_stmt 1 view .LVU70
 259              	.LVL4:
 295:Core/Src/main.c ****     const int32_t y_top  = -ONE;               // -1.0 as y starting point
 260              		.loc 1 295 5 view .LVU71
 296:Core/Src/main.c **** 
 261              		.loc 1 296 5 view .LVU72
 300:Core/Src/main.c ****     const int32_t y_step = (int32_t)(((int64_t)2 * ONE) / height);				// Bit shift the top before d
 262              		.loc 1 300 5 view .LVU73
ARM GAS  C:\Users\maari\AppData\Local\Temp\cchtTB9G.s 			page 30


 300:Core/Src/main.c ****     const int32_t y_step = (int32_t)(((int64_t)2 * ONE) / height);				// Bit shift the top before d
 263              		.loc 1 300 57 is_stmt 0 view .LVU74
 264 000c 4200     		lsls	r2, r0, #1
 265              	.LVL5:
 300:Core/Src/main.c ****     const int32_t y_step = (int32_t)(((int64_t)2 * ONE) / height);				// Bit shift the top before d
 266              		.loc 1 300 57 view .LVU75
 267 000e 40F38073 		sbfx	r3, r0, #30, #1
 268 0012 4FF4E020 		mov	r0, #458752
 269              	.LVL6:
 300:Core/Src/main.c ****     const int32_t y_step = (int32_t)(((int64_t)2 * ONE) / height);				// Bit shift the top before d
 270              		.loc 1 300 57 view .LVU76
 271 0016 0021     		movs	r1, #0
 272              	.LVL7:
 300:Core/Src/main.c ****     const int32_t y_step = (int32_t)(((int64_t)2 * ONE) / height);				// Bit shift the top before d
 273              		.loc 1 300 57 view .LVU77
 274 0018 FFF7FEFF 		bl	__aeabi_ldivmod
 275              	.LVL8:
 276 001c 0490     		str	r0, [sp, #16]
 277              	.LVL9:
 301:Core/Src/main.c **** 
 278              		.loc 1 301 5 is_stmt 1 view .LVU78
 301:Core/Src/main.c **** 
 279              		.loc 1 301 57 is_stmt 0 view .LVU79
 280 001e 3246     		mov	r2, r6
 281 0020 F317     		asrs	r3, r6, #31
 282 0022 4FF40030 		mov	r0, #131072
 283              	.LVL10:
 301:Core/Src/main.c **** 
 284              		.loc 1 301 57 view .LVU80
 285 0026 0021     		movs	r1, #0
 286 0028 FFF7FEFF 		bl	__aeabi_ldivmod
 287              	.LVL11:
 303:Core/Src/main.c **** 
 288              		.loc 1 303 5 is_stmt 1 view .LVU81
 305:Core/Src/main.c ****     for (int y = 0; y < height; ++y) {
 289              		.loc 1 305 5 view .LVU82
 306:Core/Src/main.c ****         int32_t x0 = x_left;			// starting constant
 290              		.loc 1 306 5 view .LVU83
 291              	.LBB30:
 306:Core/Src/main.c ****         int32_t x0 = x_left;			// starting constant
 292              		.loc 1 306 10 view .LVU84
 306:Core/Src/main.c ****         int32_t x0 = x_left;			// starting constant
 293              		.loc 1 306 23 discriminator 1 view .LVU85
 294 002c 002E     		cmp	r6, #0
 295 002e 0BDD     		ble	.L23
 306:Core/Src/main.c ****         int32_t x0 = x_left;			// starting constant
 296              		.loc 1 306 14 is_stmt 0 view .LVU86
 297 0030 0023     		movs	r3, #0
 298              	.LBE30:
 305:Core/Src/main.c ****     for (int y = 0; y < height; ++y) {
 299              		.loc 1 305 13 view .LVU87
 300 0032 DFF8F480 		ldr	r8, .L26
 289:Core/Src/main.c **** 
 301              		.loc 1 289 14 view .LVU88
 302 0036 0193     		str	r3, [sp, #4]
 303 0038 9B46     		mov	fp, r3
 304              	.LBB44:
ARM GAS  C:\Users\maari\AppData\Local\Temp\cchtTB9G.s 			page 31


 305              	.LBB31:
 306              	.LBB32:
 307              	.LBB33:
 308              	.LBB34:
 318:Core/Src/main.c **** 
 309              		.loc 1 318 20 view .LVU89
 310 003a DFF8F090 		ldr	r9, .L26+4
 311 003e 0690     		str	r0, [sp, #24]
 312 0040 1A46     		mov	r2, r3
 313 0042 0796     		str	r6, [sp, #28]
 314 0044 A646     		mov	lr, r4
 315 0046 66E0     		b	.L12
 316              	.L23:
 318:Core/Src/main.c **** 
 317              		.loc 1 318 20 view .LVU90
 318              	.LBE34:
 319              	.LBE33:
 320              	.LBE32:
 321              	.LBE31:
 322              	.LBE44:
 289:Core/Src/main.c **** 
 323              		.loc 1 289 14 view .LVU91
 324 0048 0023     		movs	r3, #0
 325 004a 0193     		str	r3, [sp, #4]
 326 004c 9B46     		mov	fp, r3
 327              	.LVL12:
 328              	.L11:
 336:Core/Src/main.c **** 
 329              		.loc 1 336 1 view .LVU92
 330 004e 0198     		ldr	r0, [sp, #4]
 331 0050 5946     		mov	r1, fp
 332 0052 09B0     		add	sp, sp, #36
 333              	.LCFI6:
 334              		.cfi_remember_state
 335              		.cfi_def_cfa_offset 36
 336              		@ sp needed
 337 0054 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 338              	.LVL13:
 339              	.L25:
 340              	.LCFI7:
 341              		.cfi_restore_state
 342              	.LBB45:
 343              	.LBB42:
 344              	.LBB40:
 345              	.LBB38:
 336:Core/Src/main.c **** 
 346              		.loc 1 336 1 view .LVU93
 347 0058 DDF808A0 		ldr	r10, [sp, #8]
 348 005c 7746     		mov	r7, lr
 349              	.LVL14:
 350              	.L14:
 329:Core/Src/main.c ****             x0 += x_step; // add step instead of multiplying new x value
 351              		.loc 1 329 13 is_stmt 1 view .LVU94
 329:Core/Src/main.c ****             x0 += x_step; // add step instead of multiplying new x value
 352              		.loc 1 329 28 is_stmt 0 view .LVU95
 353 005e 019B     		ldr	r3, [sp, #4]
 354 0060 FB18     		adds	r3, r7, r3
ARM GAS  C:\Users\maari\AppData\Local\Temp\cchtTB9G.s 			page 32


 355 0062 0193     		str	r3, [sp, #4]
 356              	.LVL15:
 329:Core/Src/main.c ****             x0 += x_step; // add step instead of multiplying new x value
 357              		.loc 1 329 28 view .LVU96
 358 0064 4BEBE77B 		adc	fp, fp, r7, asr #31
 359              	.LVL16:
 330:Core/Src/main.c ****         }
 360              		.loc 1 330 13 is_stmt 1 view .LVU97
 330:Core/Src/main.c ****         }
 361              		.loc 1 330 16 is_stmt 0 view .LVU98
 362 0068 049B     		ldr	r3, [sp, #16]
 363              	.LVL17:
 330:Core/Src/main.c ****         }
 364              		.loc 1 330 16 view .LVU99
 365 006a 1C44     		add	r4, r4, r3
 366              	.LVL18:
 330:Core/Src/main.c ****         }
 367              		.loc 1 330 16 view .LVU100
 368              	.LBE38:
 309:Core/Src/main.c ****             int32_t xi = 0, yi = 0;
 369              		.loc 1 309 36 is_stmt 1 discriminator 2 view .LVU101
 370 006c 0AF1010A 		add	r10, r10, #1
 371              	.LVL19:
 309:Core/Src/main.c ****             int32_t xi = 0, yi = 0;
 372              		.loc 1 309 27 discriminator 1 view .LVU102
 373 0070 039B     		ldr	r3, [sp, #12]
 374 0072 5345     		cmp	r3, r10
 375 0074 48D0     		beq	.L24
 376              	.LVL20:
 377              	.L18:
 378              	.LBB39:
 313:Core/Src/main.c ****                 int32_t xi2 = (int32_t)(((int64_t)xi * xi + (1 << (Q - 1))) >> Q);
 379              		.loc 1 313 30 view .LVU103
 380 0076 BEF1000F 		cmp	lr, #0
 311:Core/Src/main.c **** 
 381              		.loc 1 311 17 is_stmt 0 view .LVU104
 382 007a D8BF     		it	le
 383 007c 0027     		movle	r7, #0
 313:Core/Src/main.c ****                 int32_t xi2 = (int32_t)(((int64_t)xi * xi + (1 << (Q - 1))) >> Q);
 384              		.loc 1 313 30 view .LVU105
 385 007e EEDD     		ble	.L14
 386              	.LBB35:
 315:Core/Src/main.c **** 
 387              		.loc 1 315 25 view .LVU106
 388 0080 0022     		movs	r2, #0
 314:Core/Src/main.c ****                 int32_t yi2 = (int32_t)(((int64_t)yi * yi + (1 << (Q - 1))) >> Q);
 389              		.loc 1 314 25 view .LVU107
 390 0082 1046     		mov	r0, r2
 391              	.LBE35:
 311:Core/Src/main.c **** 
 392              		.loc 1 311 17 view .LVU108
 393 0084 1746     		mov	r7, r2
 394              	.LBB36:
 315:Core/Src/main.c **** 
 395              		.loc 1 315 42 view .LVU109
 396 0086 1546     		mov	r5, r2
 397 0088 9446     		mov	ip, r2
ARM GAS  C:\Users\maari\AppData\Local\Temp\cchtTB9G.s 			page 33


 314:Core/Src/main.c ****                 int32_t yi2 = (int32_t)(((int64_t)yi * yi + (1 << (Q - 1))) >> Q);
 398              		.loc 1 314 42 view .LVU110
 399 008a 1346     		mov	r3, r2
 400 008c 1646     		mov	r6, r2
 401 008e CDF808A0 		str	r10, [sp, #8]
 402              	.LVL21:
 403              	.L17:
 320:Core/Src/main.c **** 
 404              		.loc 1 320 17 is_stmt 1 view .LVU111
 320:Core/Src/main.c **** 
 405              		.loc 1 320 36 is_stmt 0 view .LVU112
 406 0092 821A     		subs	r2, r0, r2
 407              	.LVL22:
 320:Core/Src/main.c **** 
 408              		.loc 1 320 25 view .LVU113
 409 0094 2244     		add	r2, r2, r4
 410              	.LVL23:
 323:Core/Src/main.c ****                 xi = temp;           // following mandelbrot.py
 411              		.loc 1 323 17 is_stmt 1 view .LVU114
 323:Core/Src/main.c ****                 xi = temp;           // following mandelbrot.py
 412              		.loc 1 323 45 is_stmt 0 view .LVU115
 413 0096 03FB0CFC 		mul	ip, r3, ip
 414 009a 05FB06CC 		mla	ip, r5, r6, ip
 415 009e A3FB0513 		umull	r1, r3, r3, r5
 323:Core/Src/main.c ****                 xi = temp;           // following mandelbrot.py
 416              		.loc 1 323 50 view .LVU116
 417 00a2 11F58041 		adds	r1, r1, #16384
 418 00a6 4CEB030C 		adc	ip, ip, r3
 323:Core/Src/main.c ****                 xi = temp;           // following mandelbrot.py
 419              		.loc 1 323 68 view .LVU117
 420 00aa C90B     		lsrs	r1, r1, #15
 421 00ac 41EA4C41 		orr	r1, r1, ip, lsl #17
 323:Core/Src/main.c ****                 xi = temp;           // following mandelbrot.py
 422              		.loc 1 323 20 view .LVU118
 423 00b0 4144     		add	r1, r1, r8
 424              	.LVL24:
 324:Core/Src/main.c **** 
 425              		.loc 1 324 17 is_stmt 1 view .LVU119
 326:Core/Src/main.c ****             }
 426              		.loc 1 326 17 view .LVU120
 427 00b2 0137     		adds	r7, r7, #1
 428              	.LVL25:
 326:Core/Src/main.c ****             }
 429              		.loc 1 326 17 is_stmt 0 view .LVU121
 430              	.LBE36:
 313:Core/Src/main.c ****                 int32_t xi2 = (int32_t)(((int64_t)xi * xi + (1 << (Q - 1))) >> Q);
 431              		.loc 1 313 30 is_stmt 1 view .LVU122
 432 00b4 BE45     		cmp	lr, r7
 433 00b6 CFD0     		beq	.L25
 434              	.LBB37:
 314:Core/Src/main.c ****                 int32_t yi2 = (int32_t)(((int64_t)yi * yi + (1 << (Q - 1))) >> Q);
 435              		.loc 1 314 17 view .LVU123
 314:Core/Src/main.c ****                 int32_t yi2 = (int32_t)(((int64_t)yi * yi + (1 << (Q - 1))) >> Q);
 436              		.loc 1 314 42 is_stmt 0 view .LVU124
 437 00b8 D017     		asrs	r0, r2, #31
 438              	.LVL26:
 314:Core/Src/main.c ****                 int32_t yi2 = (int32_t)(((int64_t)yi * yi + (1 << (Q - 1))) >> Q);
ARM GAS  C:\Users\maari\AppData\Local\Temp\cchtTB9G.s 			page 34


 439              		.loc 1 314 42 view .LVU125
 440 00ba 1346     		mov	r3, r2
 441 00bc 0646     		mov	r6, r0
 314:Core/Src/main.c ****                 int32_t yi2 = (int32_t)(((int64_t)yi * yi + (1 << (Q - 1))) >> Q);
 442              		.loc 1 314 54 view .LVU126
 443 00be 00FB02F2 		mul	r2, r0, r2
 444              	.LVL27:
 314:Core/Src/main.c ****                 int32_t yi2 = (int32_t)(((int64_t)yi * yi + (1 << (Q - 1))) >> Q);
 445              		.loc 1 314 54 view .LVU127
 446 00c2 A3FB0305 		umull	r0, r5, r3, r3
 314:Core/Src/main.c ****                 int32_t yi2 = (int32_t)(((int64_t)yi * yi + (1 << (Q - 1))) >> Q);
 447              		.loc 1 314 59 view .LVU128
 448 00c6 10F50040 		adds	r0, r0, #32768
 449 00ca 45EB4202 		adc	r2, r5, r2, lsl #1
 314:Core/Src/main.c ****                 int32_t yi2 = (int32_t)(((int64_t)yi * yi + (1 << (Q - 1))) >> Q);
 450              		.loc 1 314 77 view .LVU129
 451 00ce 000C     		lsrs	r0, r0, #16
 452 00d0 40EA0240 		orr	r0, r0, r2, lsl #16
 453              	.LVL28:
 315:Core/Src/main.c **** 
 454              		.loc 1 315 17 is_stmt 1 view .LVU130
 315:Core/Src/main.c **** 
 455              		.loc 1 315 42 is_stmt 0 view .LVU131
 456 00d4 CA17     		asrs	r2, r1, #31
 457 00d6 0D46     		mov	r5, r1
 458 00d8 9446     		mov	ip, r2
 315:Core/Src/main.c **** 
 459              		.loc 1 315 54 view .LVU132
 460 00da 02FB01F1 		mul	r1, r2, r1
 461              	.LVL29:
 315:Core/Src/main.c **** 
 462              		.loc 1 315 54 view .LVU133
 463 00de A5FB052A 		umull	r2, r10, r5, r5
 315:Core/Src/main.c **** 
 464              		.loc 1 315 59 view .LVU134
 465 00e2 12F50042 		adds	r2, r2, #32768
 466 00e6 4AEB410A 		adc	r10, r10, r1, lsl #1
 315:Core/Src/main.c **** 
 467              		.loc 1 315 77 view .LVU135
 468 00ea 120C     		lsrs	r2, r2, #16
 469 00ec 42EA0A42 		orr	r2, r2, r10, lsl #16
 470              	.LVL30:
 318:Core/Src/main.c **** 
 471              		.loc 1 318 17 is_stmt 1 view .LVU136
 318:Core/Src/main.c **** 
 472              		.loc 1 318 34 is_stmt 0 view .LVU137
 473 00f0 D117     		asrs	r1, r2, #31
 474 00f2 10EB020A 		adds	r10, r0, r2
 475 00f6 41EBE071 		adc	r1, r1, r0, asr #31
 318:Core/Src/main.c **** 
 476              		.loc 1 318 20 view .LVU138
 477 00fa CA45     		cmp	r10, r9
 478 00fc 71F10001 		sbcs	r1, r1, #0
 479 0100 C7DB     		blt	.L17
 480              	.LBE37:
 481 0102 DDF808A0 		ldr	r10, [sp, #8]
 482 0106 AAE7     		b	.L14
ARM GAS  C:\Users\maari\AppData\Local\Temp\cchtTB9G.s 			page 35


 483              	.LVL31:
 484              	.L24:
 318:Core/Src/main.c **** 
 485              		.loc 1 318 20 view .LVU139
 486              	.LBE39:
 487 0108 059A     		ldr	r2, [sp, #20]
 488              	.LVL32:
 489              	.L16:
 318:Core/Src/main.c **** 
 490              		.loc 1 318 20 view .LVU140
 491              	.LBE40:
 332:Core/Src/main.c ****     }
 492              		.loc 1 332 9 is_stmt 1 view .LVU141
 332:Core/Src/main.c ****     }
 493              		.loc 1 332 12 is_stmt 0 view .LVU142
 494 010a 069B     		ldr	r3, [sp, #24]
 495 010c 9844     		add	r8, r8, r3
 496              	.LVL33:
 332:Core/Src/main.c ****     }
 497              		.loc 1 332 12 view .LVU143
 498              	.LBE42:
 306:Core/Src/main.c ****         int32_t x0 = x_left;			// starting constant
 499              		.loc 1 306 33 is_stmt 1 discriminator 2 view .LVU144
 500 010e 0132     		adds	r2, r2, #1
 501              	.LVL34:
 306:Core/Src/main.c ****         int32_t x0 = x_left;			// starting constant
 502              		.loc 1 306 23 discriminator 1 view .LVU145
 503 0110 079B     		ldr	r3, [sp, #28]
 504 0112 9342     		cmp	r3, r2
 505 0114 9BD0     		beq	.L11
 506              	.LVL35:
 507              	.L12:
 508              	.LBB43:
 509              	.LBB41:
 309:Core/Src/main.c ****             int32_t xi = 0, yi = 0;
 510              		.loc 1 309 27 discriminator 1 view .LVU146
 511 0116 039B     		ldr	r3, [sp, #12]
 512 0118 002B     		cmp	r3, #0
 513 011a F6DD     		ble	.L16
 309:Core/Src/main.c ****             int32_t xi = 0, yi = 0;
 514              		.loc 1 309 18 is_stmt 0 view .LVU147
 515 011c 4FF0000A 		mov	r10, #0
 516              	.LBE41:
 307:Core/Src/main.c **** 
 517              		.loc 1 307 17 view .LVU148
 518 0120 034C     		ldr	r4, .L26+8
 519 0122 0592     		str	r2, [sp, #20]
 520 0124 A7E7     		b	.L18
 521              	.L27:
 522 0126 00BF     		.align	2
 523              	.L26:
 524 0128 0000FFFF 		.word	-65536
 525 012c 01000400 		.word	262145
 526 0130 0080FDFF 		.word	-163840
 527              	.LBE43:
 528              	.LBE45:
 529              		.cfi_endproc
ARM GAS  C:\Users\maari\AppData\Local\Temp\cchtTB9G.s 			page 36


 530              	.LFE140:
 532              		.global	__aeabi_i2d
 533              		.global	__aeabi_ddiv
 534              		.global	__aeabi_dadd
 535              		.global	__aeabi_dsub
 536              		.global	__aeabi_dmul
 537              		.global	__aeabi_dcmpgt
 538              		.section	.text.calculate_mandelbrot_double,"ax",%progbits
 539              		.align	1
 540              		.global	calculate_mandelbrot_double
 541              		.syntax unified
 542              		.thumb
 543              		.thumb_func
 545              	calculate_mandelbrot_double:
 546              	.LVL36:
 547              	.LFB141:
 341:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 548              		.loc 1 341 1 is_stmt 1 view -0
 549              		.cfi_startproc
 550              		@ args = 0, pretend = 0, frame = 56
 551              		@ frame_needed = 0, uses_anonymous_args = 0
 341:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 552              		.loc 1 341 1 is_stmt 0 view .LVU150
 553 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 554              	.LCFI8:
 555              		.cfi_def_cfa_offset 36
 556              		.cfi_offset 4, -36
 557              		.cfi_offset 5, -32
 558              		.cfi_offset 6, -28
 559              		.cfi_offset 7, -24
 560              		.cfi_offset 8, -20
 561              		.cfi_offset 9, -16
 562              		.cfi_offset 10, -12
 563              		.cfi_offset 11, -8
 564              		.cfi_offset 14, -4
 565 0004 8FB0     		sub	sp, sp, #60
 566              	.LCFI9:
 567              		.cfi_def_cfa_offset 96
 568 0006 0790     		str	r0, [sp, #28]
 342:Core/Src/main.c ****     //TODO: Complete the function implementation
 569              		.loc 1 342 5 is_stmt 1 view .LVU151
 570              	.LVL37:
 344:Core/Src/main.c ****     for (int y = 0; y < height; y++)
 571              		.loc 1 344 5 view .LVU152
 344:Core/Src/main.c ****     for (int y = 0; y < height; y++)
 572              		.loc 1 344 14 is_stmt 0 view .LVU153
 573 0008 5F4B     		ldr	r3, .L44
 574 000a 0024     		movs	r4, #0
 575 000c 0025     		movs	r5, #0
 576 000e C3E90045 		strd	r4, [r3]
 345:Core/Src/main.c ****     {
 577              		.loc 1 345 5 is_stmt 1 view .LVU154
 578              	.LBB46:
 345:Core/Src/main.c ****     {
 579              		.loc 1 345 10 view .LVU155
 580              	.LVL38:
 345:Core/Src/main.c ****     {
ARM GAS  C:\Users\maari\AppData\Local\Temp\cchtTB9G.s 			page 37


 581              		.loc 1 345 23 discriminator 1 view .LVU156
 582 0012 B1F1000A 		subs	r10, r1, #0
 583 0016 08DD     		ble	.L42
 345:Core/Src/main.c ****     {
 584              		.loc 1 345 14 is_stmt 0 view .LVU157
 585 0018 4FF0000B 		mov	fp, #0
 586              	.LBE46:
 342:Core/Src/main.c ****     //TODO: Complete the function implementation
 587              		.loc 1 342 14 view .LVU158
 588 001c CDF820B0 		str	fp, [sp, #32]
 589 0020 D946     		mov	r9, fp
 590              	.LBB56:
 591              	.LBB47:
 592              	.LBB48:
 593              	.LBB49:
 363:Core/Src/main.c ****     			{
 594              		.loc 1 363 10 view .LVU159
 595 0022 5746     		mov	r7, r10
 596 0024 0D92     		str	r2, [sp, #52]
 597 0026 5E46     		mov	r6, fp
 598 0028 8AE0     		b	.L29
 599              	.L42:
 363:Core/Src/main.c ****     			{
 600              		.loc 1 363 10 view .LVU160
 601              	.LBE49:
 602              	.LBE48:
 603              	.LBE47:
 604              	.LBE56:
 342:Core/Src/main.c ****     //TODO: Complete the function implementation
 605              		.loc 1 342 14 view .LVU161
 606 002a 0023     		movs	r3, #0
 607 002c 0893     		str	r3, [sp, #32]
 608 002e 9946     		mov	r9, r3
 609              	.LVL39:
 610              	.L28:
 382:Core/Src/main.c **** 
 611              		.loc 1 382 1 view .LVU162
 612 0030 0898     		ldr	r0, [sp, #32]
 613 0032 4946     		mov	r1, r9
 614 0034 0FB0     		add	sp, sp, #60
 615              	.LCFI10:
 616              		.cfi_remember_state
 617              		.cfi_def_cfa_offset 36
 618              		@ sp needed
 619 0036 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 620              	.LVL40:
 621              	.L37:
 622              	.LCFI11:
 623              		.cfi_restore_state
 624              	.LBB57:
 625              	.LBB54:
 626              	.LBB51:
 354:Core/Src/main.c **** 
 627              		.loc 1 354 11 view .LVU163
 628 003a 0027     		movs	r7, #0
 629 003c 06E0     		b	.L31
 630              	.LVL41:
ARM GAS  C:\Users\maari\AppData\Local\Temp\cchtTB9G.s 			page 38


 631              	.L40:
 354:Core/Src/main.c **** 
 632              		.loc 1 354 11 view .LVU164
 633 003e DDF82490 		ldr	r9, [sp, #36]
 634 0042 3B46     		mov	r3, r7
 635 0044 3746     		mov	r7, r6
 636 0046 DDF82880 		ldr	r8, [sp, #40]
 637              	.LVL42:
 354:Core/Src/main.c **** 
 638              		.loc 1 354 11 view .LVU165
 639 004a 1E46     		mov	r6, r3
 640              	.LVL43:
 641              	.L31:
 376:Core/Src/main.c **** 
 642              		.loc 1 376 7 is_stmt 1 view .LVU166
 376:Core/Src/main.c **** 
 643              		.loc 1 376 22 is_stmt 0 view .LVU167
 644 004c 089B     		ldr	r3, [sp, #32]
 645 004e FA18     		adds	r2, r7, r3
 646 0050 0892     		str	r2, [sp, #32]
 376:Core/Src/main.c **** 
 647              		.loc 1 376 22 view .LVU168
 648 0052 48EBE778 		adc	r8, r8, r7, asr #31
 649              	.LVL44:
 376:Core/Src/main.c **** 
 650              		.loc 1 376 22 view .LVU169
 651              	.LBE51:
 347:Core/Src/main.c ****     	{
 652              		.loc 1 347 35 is_stmt 1 discriminator 2 view .LVU170
 653 0056 09F10109 		add	r9, r9, #1
 654              	.LVL45:
 347:Core/Src/main.c ****     	{
 655              		.loc 1 347 24 discriminator 1 view .LVU171
 656 005a 079B     		ldr	r3, [sp, #28]
 657 005c 4B45     		cmp	r3, r9
 658 005e 68D0     		beq	.L43
 659              	.LVL46:
 660              	.L33:
 661              	.LBB52:
 349:Core/Src/main.c ****     		double y_0 = (double)y/height * 2.0 - 1.0;
 662              		.loc 1 349 7 view .LVU172
 349:Core/Src/main.c ****     		double y_0 = (double)y/height * 2.0 - 1.0;
 663              		.loc 1 349 21 is_stmt 0 view .LVU173
 664 0060 4846     		mov	r0, r9
 665 0062 FFF7FEFF 		bl	__aeabi_i2d
 666              	.LVL47:
 667 0066 0446     		mov	r4, r0
 668 0068 0D46     		mov	r5, r1
 349:Core/Src/main.c ****     		double y_0 = (double)y/height * 2.0 - 1.0;
 669              		.loc 1 349 30 view .LVU174
 670 006a 0798     		ldr	r0, [sp, #28]
 671 006c FFF7FEFF 		bl	__aeabi_i2d
 672              	.LVL48:
 673 0070 0246     		mov	r2, r0
 674 0072 0B46     		mov	r3, r1
 675 0074 2046     		mov	r0, r4
 676 0076 2946     		mov	r1, r5
ARM GAS  C:\Users\maari\AppData\Local\Temp\cchtTB9G.s 			page 39


 677 0078 FFF7FEFF 		bl	__aeabi_ddiv
 678              	.LVL49:
 349:Core/Src/main.c ****     		double y_0 = (double)y/height * 2.0 - 1.0;
 679              		.loc 1 349 37 view .LVU175
 680 007c 0022     		movs	r2, #0
 681 007e 434B     		ldr	r3, .L44+4
 682 0080 FFF7FEFF 		bl	__aeabi_dmul
 683              	.LVL50:
 349:Core/Src/main.c ****     		double y_0 = (double)y/height * 2.0 - 1.0;
 684              		.loc 1 349 14 view .LVU176
 685 0084 0022     		movs	r2, #0
 686 0086 424B     		ldr	r3, .L44+8
 687 0088 FFF7FEFF 		bl	__aeabi_dsub
 688              	.LVL51:
 689 008c CDE90201 		strd	r0, [sp, #8]
 690              	.LVL52:
 350:Core/Src/main.c **** 
 691              		.loc 1 350 7 is_stmt 1 view .LVU177
 352:Core/Src/main.c ****     		double y_i = 0;
 692              		.loc 1 352 7 view .LVU178
 353:Core/Src/main.c ****     		int iteration = 0;
 693              		.loc 1 353 7 view .LVU179
 354:Core/Src/main.c **** 
 694              		.loc 1 354 7 view .LVU180
 357:Core/Src/main.c ****     		{
 695              		.loc 1 357 7 view .LVU181
 357:Core/Src/main.c ****     		{
 696              		.loc 1 357 24 view .LVU182
 697 0090 002E     		cmp	r6, #0
 698 0092 D2DD     		ble	.L37
 354:Core/Src/main.c **** 
 699              		.loc 1 354 11 is_stmt 0 view .LVU183
 700 0094 0027     		movs	r7, #0
 353:Core/Src/main.c ****     		int iteration = 0;
 701              		.loc 1 353 14 view .LVU184
 702 0096 4FF0000A 		mov	r10, #0
 703 009a 4FF0000B 		mov	fp, #0
 352:Core/Src/main.c ****     		double y_i = 0;
 704              		.loc 1 352 14 view .LVU185
 705 009e 5446     		mov	r4, r10
 706 00a0 5D46     		mov	r5, fp
 707 00a2 CDF82490 		str	r9, [sp, #36]
 708 00a6 3346     		mov	r3, r6
 709 00a8 3E46     		mov	r6, r7
 710 00aa CDF82880 		str	r8, [sp, #40]
 711 00ae 1F46     		mov	r7, r3
 712              	.LVL53:
 713              	.L32:
 714              	.LBB50:
 360:Core/Src/main.c ****     			double y_i_sq = y_i*y_i;
 715              		.loc 1 360 8 is_stmt 1 view .LVU186
 360:Core/Src/main.c ****     			double y_i_sq = y_i*y_i;
 716              		.loc 1 360 15 is_stmt 0 view .LVU187
 717 00b0 2246     		mov	r2, r4
 718 00b2 2B46     		mov	r3, r5
 719 00b4 2046     		mov	r0, r4
 720 00b6 2946     		mov	r1, r5
ARM GAS  C:\Users\maari\AppData\Local\Temp\cchtTB9G.s 			page 40


 721 00b8 FFF7FEFF 		bl	__aeabi_dmul
 722              	.LVL54:
 723 00bc CDE90001 		strd	r0, [sp]
 724              	.LVL55:
 361:Core/Src/main.c **** 
 725              		.loc 1 361 8 is_stmt 1 view .LVU188
 361:Core/Src/main.c **** 
 726              		.loc 1 361 15 is_stmt 0 view .LVU189
 727 00c0 5246     		mov	r2, r10
 728 00c2 5B46     		mov	r3, fp
 729 00c4 5046     		mov	r0, r10
 730              	.LVL56:
 361:Core/Src/main.c **** 
 731              		.loc 1 361 15 view .LVU190
 732 00c6 5946     		mov	r1, fp
 733 00c8 FFF7FEFF 		bl	__aeabi_dmul
 734              	.LVL57:
 735 00cc 8046     		mov	r8, r0
 736 00ce 8946     		mov	r9, r1
 737              	.LVL58:
 363:Core/Src/main.c ****     			{
 738              		.loc 1 363 8 is_stmt 1 view .LVU191
 363:Core/Src/main.c ****     			{
 739              		.loc 1 363 18 is_stmt 0 view .LVU192
 740 00d0 0246     		mov	r2, r0
 741 00d2 0B46     		mov	r3, r1
 742 00d4 DDE90001 		ldrd	r0, [sp]
 743 00d8 FFF7FEFF 		bl	__aeabi_dadd
 744              	.LVL59:
 363:Core/Src/main.c ****     			{
 745              		.loc 1 363 10 view .LVU193
 746 00dc 0022     		movs	r2, #0
 747 00de 2D4B     		ldr	r3, .L44+12
 748 00e0 FFF7FEFF 		bl	__aeabi_dcmpgt
 749              	.LVL60:
 750 00e4 0028     		cmp	r0, #0
 751 00e6 AAD1     		bne	.L40
 367:Core/Src/main.c ****     			y_i = 2.0*x_i*y_i + y_0;
 752              		.loc 1 367 8 is_stmt 1 view .LVU194
 753              	.LVL61:
 368:Core/Src/main.c **** 
 754              		.loc 1 368 8 view .LVU195
 368:Core/Src/main.c **** 
 755              		.loc 1 368 17 is_stmt 0 view .LVU196
 756 00e8 2246     		mov	r2, r4
 757 00ea 2B46     		mov	r3, r5
 758 00ec 2046     		mov	r0, r4
 759 00ee 2946     		mov	r1, r5
 760 00f0 FFF7FEFF 		bl	__aeabi_dadd
 761              	.LVL62:
 368:Core/Src/main.c **** 
 762              		.loc 1 368 21 view .LVU197
 763 00f4 5246     		mov	r2, r10
 764 00f6 5B46     		mov	r3, fp
 765 00f8 FFF7FEFF 		bl	__aeabi_dmul
 766              	.LVL63:
 368:Core/Src/main.c **** 
ARM GAS  C:\Users\maari\AppData\Local\Temp\cchtTB9G.s 			page 41


 767              		.loc 1 368 12 view .LVU198
 768 00fc DDE90423 		ldrd	r2, [sp, #16]
 769 0100 FFF7FEFF 		bl	__aeabi_dadd
 770              	.LVL64:
 771 0104 8246     		mov	r10, r0
 772              	.LVL65:
 368:Core/Src/main.c **** 
 773              		.loc 1 368 12 view .LVU199
 774 0106 8B46     		mov	fp, r1
 775              	.LVL66:
 370:Core/Src/main.c **** 
 776              		.loc 1 370 8 is_stmt 1 view .LVU200
 367:Core/Src/main.c ****     			y_i = 2.0*x_i*y_i + y_0;
 777              		.loc 1 367 15 is_stmt 0 view .LVU201
 778 0108 4246     		mov	r2, r8
 779 010a 4B46     		mov	r3, r9
 780 010c DDE90001 		ldrd	r0, [sp]
 781 0110 FFF7FEFF 		bl	__aeabi_dsub
 782              	.LVL67:
 370:Core/Src/main.c **** 
 783              		.loc 1 370 12 view .LVU202
 784 0114 DDE90223 		ldrd	r2, [sp, #8]
 785 0118 FFF7FEFF 		bl	__aeabi_dadd
 786              	.LVL68:
 787 011c 0446     		mov	r4, r0
 788              	.LVL69:
 370:Core/Src/main.c **** 
 789              		.loc 1 370 12 view .LVU203
 790 011e 0D46     		mov	r5, r1
 791              	.LVL70:
 372:Core/Src/main.c **** 
 792              		.loc 1 372 8 is_stmt 1 view .LVU204
 372:Core/Src/main.c **** 
 793              		.loc 1 372 18 is_stmt 0 view .LVU205
 794 0120 0136     		adds	r6, r6, #1
 795              	.LVL71:
 372:Core/Src/main.c **** 
 796              		.loc 1 372 18 view .LVU206
 797              	.LBE50:
 357:Core/Src/main.c ****     		{
 798              		.loc 1 357 24 is_stmt 1 view .LVU207
 799 0122 B742     		cmp	r7, r6
 800 0124 C4D1     		bne	.L32
 801 0126 DDF82490 		ldr	r9, [sp, #36]
 802 012a 3E46     		mov	r6, r7
 803              	.LVL72:
 357:Core/Src/main.c ****     		{
 804              		.loc 1 357 24 is_stmt 0 view .LVU208
 805 012c DDF82880 		ldr	r8, [sp, #40]
 806              	.LVL73:
 357:Core/Src/main.c ****     		{
 807              		.loc 1 357 24 view .LVU209
 808 0130 8CE7     		b	.L31
 809              	.LVL74:
 810              	.L43:
 357:Core/Src/main.c ****     		{
 811              		.loc 1 357 24 view .LVU210
ARM GAS  C:\Users\maari\AppData\Local\Temp\cchtTB9G.s 			page 42


 812 0132 0B9E     		ldr	r6, [sp, #44]
 813 0134 0C9F     		ldr	r7, [sp, #48]
 814 0136 C146     		mov	r9, r8
 815              	.LVL75:
 816              	.L35:
 357:Core/Src/main.c ****     		{
 817              		.loc 1 357 24 view .LVU211
 818              	.LBE52:
 819              	.LBE54:
 345:Core/Src/main.c ****     {
 820              		.loc 1 345 34 is_stmt 1 discriminator 2 view .LVU212
 821 0138 0136     		adds	r6, r6, #1
 822              	.LVL76:
 345:Core/Src/main.c ****     {
 823              		.loc 1 345 23 discriminator 1 view .LVU213
 824 013a B742     		cmp	r7, r6
 825 013c 3FF478AF 		beq	.L28
 826              	.LVL77:
 827              	.L29:
 828              	.LBB55:
 347:Core/Src/main.c ****     	{
 829              		.loc 1 347 24 discriminator 1 view .LVU214
 830 0140 079B     		ldr	r3, [sp, #28]
 831 0142 002B     		cmp	r3, #0
 832 0144 F8DD     		ble	.L35
 833              	.LBB53:
 350:Core/Src/main.c **** 
 834              		.loc 1 350 20 is_stmt 0 view .LVU215
 835 0146 3046     		mov	r0, r6
 836 0148 FFF7FEFF 		bl	__aeabi_i2d
 837              	.LVL78:
 838 014c 0446     		mov	r4, r0
 839 014e 0D46     		mov	r5, r1
 350:Core/Src/main.c **** 
 840              		.loc 1 350 29 view .LVU216
 841 0150 3846     		mov	r0, r7
 842 0152 FFF7FEFF 		bl	__aeabi_i2d
 843              	.LVL79:
 844 0156 0246     		mov	r2, r0
 845 0158 0B46     		mov	r3, r1
 846 015a 2046     		mov	r0, r4
 847 015c 2946     		mov	r1, r5
 848 015e FFF7FEFF 		bl	__aeabi_ddiv
 849              	.LVL80:
 850 0162 0246     		mov	r2, r0
 851 0164 0B46     		mov	r3, r1
 350:Core/Src/main.c **** 
 852              		.loc 1 350 37 view .LVU217
 853 0166 FFF7FEFF 		bl	__aeabi_dadd
 854              	.LVL81:
 350:Core/Src/main.c **** 
 855              		.loc 1 350 14 view .LVU218
 856 016a 0022     		movs	r2, #0
 857 016c 0A4B     		ldr	r3, .L44+16
 858 016e FFF7FEFF 		bl	__aeabi_dsub
 859              	.LVL82:
 860 0172 CDE90401 		strd	r0, [sp, #16]
ARM GAS  C:\Users\maari\AppData\Local\Temp\cchtTB9G.s 			page 43


 861              	.LBE53:
 347:Core/Src/main.c ****     	{
 862              		.loc 1 347 15 view .LVU219
 863 0176 4FF00008 		mov	r8, #0
 864 017a 0B96     		str	r6, [sp, #44]
 865 017c 0C97     		str	r7, [sp, #48]
 866 017e 0D9E     		ldr	r6, [sp, #52]
 867              	.LVL83:
 347:Core/Src/main.c ****     	{
 868              		.loc 1 347 15 view .LVU220
 869 0180 4B46     		mov	r3, r9
 870 0182 C146     		mov	r9, r8
 871              	.LVL84:
 347:Core/Src/main.c ****     	{
 872              		.loc 1 347 15 view .LVU221
 873 0184 9846     		mov	r8, r3
 874 0186 6BE7     		b	.L33
 875              	.L45:
 876              		.align	2
 877              	.L44:
 878 0188 00000000 		.word	checksum
 879 018c 00000C40 		.word	1074528256
 880 0190 00000440 		.word	1074003968
 881 0194 00001040 		.word	1074790400
 882 0198 0000F03F 		.word	1072693248
 883              	.LBE55:
 884              	.LBE57:
 885              		.cfi_endproc
 886              	.LFE141:
 888              		.global	__aeabi_ui2d
 889              		.global	__aeabi_ul2d
 890              		.section	.text.main,"ax",%progbits
 891              		.align	1
 892              		.global	main
 893              		.syntax unified
 894              		.thumb
 895              		.thumb_func
 897              	main:
 898              	.LFB137:
  95:Core/Src/main.c **** 	uint32_t program_start = HAL_GetTick();
 899              		.loc 1 95 1 is_stmt 1 view -0
 900              		.cfi_startproc
 901              		@ args = 0, pretend = 0, frame = 40
 902              		@ frame_needed = 0, uses_anonymous_args = 0
 903 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 904              	.LCFI12:
 905              		.cfi_def_cfa_offset 36
 906              		.cfi_offset 4, -36
 907              		.cfi_offset 5, -32
 908              		.cfi_offset 6, -28
 909              		.cfi_offset 7, -24
 910              		.cfi_offset 8, -20
 911              		.cfi_offset 9, -16
 912              		.cfi_offset 10, -12
 913              		.cfi_offset 11, -8
 914              		.cfi_offset 14, -4
 915 0004 8BB0     		sub	sp, sp, #44
ARM GAS  C:\Users\maari\AppData\Local\Temp\cchtTB9G.s 			page 44


 916              	.LCFI13:
 917              		.cfi_def_cfa_offset 80
  96:Core/Src/main.c **** 
 918              		.loc 1 96 2 view .LVU223
  96:Core/Src/main.c **** 
 919              		.loc 1 96 27 is_stmt 0 view .LVU224
 920 0006 FFF7FEFF 		bl	HAL_GetTick
 921              	.LVL85:
 105:Core/Src/main.c **** 
 922              		.loc 1 105 3 is_stmt 1 view .LVU225
 923 000a FFF7FEFF 		bl	HAL_Init
 924              	.LVL86:
 112:Core/Src/main.c **** 
 925              		.loc 1 112 3 view .LVU226
 926 000e FFF7FEFF 		bl	SystemClock_Config
 927              	.LVL87:
 119:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 928              		.loc 1 119 3 view .LVU227
 929              	.LBB69:
 930              	.LBI69:
 255:Core/Src/main.c **** {
 931              		.loc 1 255 13 view .LVU228
 932              	.LBB70:
 257:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 933              		.loc 1 257 3 view .LVU229
 257:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 934              		.loc 1 257 20 is_stmt 0 view .LVU230
 935 0012 0024     		movs	r4, #0
 936 0014 0594     		str	r4, [sp, #20]
 937 0016 0694     		str	r4, [sp, #24]
 938 0018 0794     		str	r4, [sp, #28]
 939 001a 0894     		str	r4, [sp, #32]
 940 001c 0994     		str	r4, [sp, #36]
 263:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 941              		.loc 1 263 3 is_stmt 1 view .LVU231
 942              	.LBB71:
 263:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 943              		.loc 1 263 3 view .LVU232
 944 001e 0294     		str	r4, [sp, #8]
 263:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 945              		.loc 1 263 3 view .LVU233
 946 0020 604B     		ldr	r3, .L49
 947 0022 1A6B     		ldr	r2, [r3, #48]
 948 0024 42F00402 		orr	r2, r2, #4
 949 0028 1A63     		str	r2, [r3, #48]
 263:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 950              		.loc 1 263 3 view .LVU234
 951 002a 1A6B     		ldr	r2, [r3, #48]
 952 002c 02F00402 		and	r2, r2, #4
 953 0030 0292     		str	r2, [sp, #8]
 263:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 954              		.loc 1 263 3 view .LVU235
 955 0032 029A     		ldr	r2, [sp, #8]
 956              	.LBE71:
 263:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 957              		.loc 1 263 3 view .LVU236
 264:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
ARM GAS  C:\Users\maari\AppData\Local\Temp\cchtTB9G.s 			page 45


 958              		.loc 1 264 3 view .LVU237
 959              	.LBB72:
 264:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 960              		.loc 1 264 3 view .LVU238
 961 0034 0394     		str	r4, [sp, #12]
 264:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 962              		.loc 1 264 3 view .LVU239
 963 0036 1A6B     		ldr	r2, [r3, #48]
 964 0038 42F08002 		orr	r2, r2, #128
 965 003c 1A63     		str	r2, [r3, #48]
 264:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 966              		.loc 1 264 3 view .LVU240
 967 003e 1A6B     		ldr	r2, [r3, #48]
 968 0040 02F08002 		and	r2, r2, #128
 969 0044 0392     		str	r2, [sp, #12]
 264:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 970              		.loc 1 264 3 view .LVU241
 971 0046 039A     		ldr	r2, [sp, #12]
 972              	.LBE72:
 264:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 973              		.loc 1 264 3 view .LVU242
 265:Core/Src/main.c **** 
 974              		.loc 1 265 3 view .LVU243
 975              	.LBB73:
 265:Core/Src/main.c **** 
 976              		.loc 1 265 3 view .LVU244
 977 0048 0494     		str	r4, [sp, #16]
 265:Core/Src/main.c **** 
 978              		.loc 1 265 3 view .LVU245
 979 004a 1A6B     		ldr	r2, [r3, #48]
 980 004c 42F00202 		orr	r2, r2, #2
 981 0050 1A63     		str	r2, [r3, #48]
 265:Core/Src/main.c **** 
 982              		.loc 1 265 3 view .LVU246
 983 0052 1B6B     		ldr	r3, [r3, #48]
 984 0054 03F00203 		and	r3, r3, #2
 985 0058 0493     		str	r3, [sp, #16]
 265:Core/Src/main.c **** 
 986              		.loc 1 265 3 view .LVU247
 987 005a 049B     		ldr	r3, [sp, #16]
 988              	.LBE73:
 265:Core/Src/main.c **** 
 989              		.loc 1 265 3 view .LVU248
 268:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7, GPIO_PIN_RESET);
 990              		.loc 1 268 3 view .LVU249
 991 005c 524E     		ldr	r6, .L49+4
 992 005e 2246     		mov	r2, r4
 993 0060 FF21     		movs	r1, #255
 994 0062 3046     		mov	r0, r6
 995 0064 FFF7FEFF 		bl	HAL_GPIO_WritePin
 996              	.LVL88:
 273:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 997              		.loc 1 273 3 view .LVU250
 273:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 998              		.loc 1 273 23 is_stmt 0 view .LVU251
 999 0068 FF23     		movs	r3, #255
 1000 006a 0593     		str	r3, [sp, #20]
ARM GAS  C:\Users\maari\AppData\Local\Temp\cchtTB9G.s 			page 46


 275:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1001              		.loc 1 275 3 is_stmt 1 view .LVU252
 275:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1002              		.loc 1 275 24 is_stmt 0 view .LVU253
 1003 006c 4FF00109 		mov	r9, #1
 1004 0070 CDF81890 		str	r9, [sp, #24]
 276:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 1005              		.loc 1 276 3 is_stmt 1 view .LVU254
 276:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 1006              		.loc 1 276 24 is_stmt 0 view .LVU255
 1007 0074 0794     		str	r4, [sp, #28]
 277:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 1008              		.loc 1 277 3 is_stmt 1 view .LVU256
 277:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 1009              		.loc 1 277 25 is_stmt 0 view .LVU257
 1010 0076 0894     		str	r4, [sp, #32]
 278:Core/Src/main.c **** 
 1011              		.loc 1 278 3 is_stmt 1 view .LVU258
 1012 0078 05A9     		add	r1, sp, #20
 1013 007a 3046     		mov	r0, r6
 1014 007c FFF7FEFF 		bl	HAL_GPIO_Init
 1015              	.LVL89:
 1016              	.LBE70:
 1017              	.LBE69:
 122:Core/Src/main.c **** 
 1018              		.loc 1 122 3 view .LVU259
 125:Core/Src/main.c ****    start_time = HAL_GetTick();
 1019              		.loc 1 125 4 view .LVU260
 1020              	.LBB74:
 1021              	.LBI74:
 386:Core/Src/main.c ****  {
 1022              		.loc 1 386 20 view .LVU261
 1023              	.LBB75:
 388:Core/Src/main.c **** 	  DWT->CYCCNT = 0;
 1024              		.loc 1 388 4 view .LVU262
 388:Core/Src/main.c **** 	  DWT->CYCCNT = 0;
 1025              		.loc 1 388 13 is_stmt 0 view .LVU263
 1026 0080 4A4A     		ldr	r2, .L49+8
 1027 0082 D2F8FC30 		ldr	r3, [r2, #252]
 388:Core/Src/main.c **** 	  DWT->CYCCNT = 0;
 1028              		.loc 1 388 21 view .LVU264
 1029 0086 43F08073 		orr	r3, r3, #16777216
 1030 008a C2F8FC30 		str	r3, [r2, #252]
 389:Core/Src/main.c **** 	  DWT->CTRL |= DWT_CTRL_CYCCNTENA_Msk;
 1031              		.loc 1 389 4 is_stmt 1 view .LVU265
 389:Core/Src/main.c **** 	  DWT->CTRL |= DWT_CTRL_CYCCNTENA_Msk;
 1032              		.loc 1 389 16 is_stmt 0 view .LVU266
 1033 008e 484D     		ldr	r5, .L49+12
 1034 0090 6C60     		str	r4, [r5, #4]
 390:Core/Src/main.c ****  }
 1035              		.loc 1 390 4 is_stmt 1 view .LVU267
 390:Core/Src/main.c ****  }
 1036              		.loc 1 390 7 is_stmt 0 view .LVU268
 1037 0092 2B68     		ldr	r3, [r5]
 390:Core/Src/main.c ****  }
 1038              		.loc 1 390 14 view .LVU269
 1039 0094 43EA0903 		orr	r3, r3, r9
ARM GAS  C:\Users\maari\AppData\Local\Temp\cchtTB9G.s 			page 47


 1040 0098 2B60     		str	r3, [r5]
 1041              	.LBE75:
 1042              	.LBE74:
 126:Core/Src/main.c ****    start = DWT->CYCCNT;
 1043              		.loc 1 126 4 is_stmt 1 view .LVU270
 126:Core/Src/main.c ****    start = DWT->CYCCNT;
 1044              		.loc 1 126 17 is_stmt 0 view .LVU271
 1045 009a FFF7FEFF 		bl	HAL_GetTick
 1046              	.LVL90:
 126:Core/Src/main.c ****    start = DWT->CYCCNT;
 1047              		.loc 1 126 15 discriminator 1 view .LVU272
 1048 009e DFF81481 		ldr	r8, .L49+16
 126:Core/Src/main.c ****    start = DWT->CYCCNT;
 1049              		.loc 1 126 17 discriminator 1 view .LVU273
 1050 00a2 C8F80000 		str	r0, [r8]
 1051 00a6 C8F80440 		str	r4, [r8, #4]
 127:Core/Src/main.c **** 
 1052              		.loc 1 127 4 is_stmt 1 view .LVU274
 127:Core/Src/main.c **** 
 1053              		.loc 1 127 10 is_stmt 0 view .LVU275
 1054 00aa 6B68     		ldr	r3, [r5, #4]
 1055 00ac 0093     		str	r3, [sp]
 1056              	.LVL91:
 131:Core/Src/main.c ****    //getting the start cycle to get the cycle count
 1057              		.loc 1 131 4 is_stmt 1 view .LVU276
 131:Core/Src/main.c ****    //getting the start cycle to get the cycle count
 1058              		.loc 1 131 36 is_stmt 0 view .LVU277
 1059 00ae 424B     		ldr	r3, .L49+20
 1060              	.LVL92:
 131:Core/Src/main.c ****    //getting the start cycle to get the cycle count
 1061              		.loc 1 131 36 view .LVU278
 1062 00b0 D3F800A0 		ldr	r10, [r3]
 1063 00b4 414B     		ldr	r3, .L49+24
 1064 00b6 D3F800B0 		ldr	fp, [r3]
 1065              	.LVL93:
 133:Core/Src/main.c **** 
 1066              		.loc 1 133 4 is_stmt 1 view .LVU279
 1067              	.LBB76:
 1068              	.LBI76:
 395:Core/Src/main.c ****  {
 1069              		.loc 1 395 25 view .LVU280
 1070              	.LBB77:
 397:Core/Src/main.c ****  }
 1071              		.loc 1 397 6 view .LVU281
 397:Core/Src/main.c ****  }
 1072              		.loc 1 397 16 is_stmt 0 view .LVU282
 1073 00ba 6B68     		ldr	r3, [r5, #4]
 1074              	.LBE77:
 1075              	.LBE76:
 138:Core/Src/main.c **** 
 1076              		.loc 1 138 5 is_stmt 1 view .LVU283
 138:Core/Src/main.c **** 
 1077              		.loc 1 138 16 is_stmt 0 view .LVU284
 1078 00bc 6422     		movs	r2, #100
 1079 00be 5146     		mov	r1, r10
 1080 00c0 5846     		mov	r0, fp
 1081 00c2 FFF7FEFF 		bl	calculate_mandelbrot_double
ARM GAS  C:\Users\maari\AppData\Local\Temp\cchtTB9G.s 			page 48


 1082              	.LVL94:
 138:Core/Src/main.c **** 
 1083              		.loc 1 138 14 discriminator 1 view .LVU285
 1084 00c6 3E4B     		ldr	r3, .L49+28
 1085 00c8 C3E90001 		strd	r0, [r3]
 141:Core/Src/main.c ****    end = DWT->CYCCNT;
 1086              		.loc 1 141 4 is_stmt 1 view .LVU286
 141:Core/Src/main.c ****    end = DWT->CYCCNT;
 1087              		.loc 1 141 15 is_stmt 0 view .LVU287
 1088 00cc FFF7FEFF 		bl	HAL_GetTick
 1089              	.LVL95:
 1090 00d0 0746     		mov	r7, r0
 141:Core/Src/main.c ****    end = DWT->CYCCNT;
 1091              		.loc 1 141 13 discriminator 1 view .LVU288
 1092 00d2 3C4B     		ldr	r3, .L49+32
 1093 00d4 1860     		str	r0, [r3]
 1094 00d6 5C60     		str	r4, [r3, #4]
 142:Core/Src/main.c ****    uint32_t cycles = end - start;
 1095              		.loc 1 142 4 is_stmt 1 view .LVU289
 142:Core/Src/main.c ****    uint32_t cycles = end - start;
 1096              		.loc 1 142 8 is_stmt 0 view .LVU290
 1097 00d8 6868     		ldr	r0, [r5, #4]
 1098              	.LVL96:
 143:Core/Src/main.c ****    time_sec = (double)cycles / SystemCoreClock;
 1099              		.loc 1 143 4 is_stmt 1 view .LVU291
 144:Core/Src/main.c **** 
 1100              		.loc 1 144 4 view .LVU292
 144:Core/Src/main.c **** 
 1101              		.loc 1 144 15 is_stmt 0 view .LVU293
 1102 00da 009B     		ldr	r3, [sp]
 1103 00dc C01A     		subs	r0, r0, r3
 1104              	.LVL97:
 144:Core/Src/main.c **** 
 1105              		.loc 1 144 15 view .LVU294
 1106 00de FFF7FEFF 		bl	__aeabi_ui2d
 1107              	.LVL98:
 144:Core/Src/main.c **** 
 1108              		.loc 1 144 15 view .LVU295
 1109 00e2 CDE90001 		strd	r0, [sp]
 1110              	.LVL99:
 144:Core/Src/main.c **** 
 1111              		.loc 1 144 30 view .LVU296
 1112 00e6 384B     		ldr	r3, .L49+36
 1113 00e8 1868     		ldr	r0, [r3]
 1114 00ea FFF7FEFF 		bl	__aeabi_ui2d
 1115              	.LVL100:
 1116 00ee 0246     		mov	r2, r0
 1117 00f0 0B46     		mov	r3, r1
 1118 00f2 DDE90001 		ldrd	r0, [sp]
 1119 00f6 FFF7FEFF 		bl	__aeabi_ddiv
 1120              	.LVL101:
 144:Core/Src/main.c **** 
 1121              		.loc 1 144 13 view .LVU297
 1122 00fa 344B     		ldr	r3, .L49+40
 1123 00fc C3E90001 		strd	r0, [r3]
 151:Core/Src/main.c **** 
 1124              		.loc 1 151 4 is_stmt 1 view .LVU298
ARM GAS  C:\Users\maari\AppData\Local\Temp\cchtTB9G.s 			page 49


 1125              	.LBB78:
 1126              	.LBI78:
 395:Core/Src/main.c ****  {
 1127              		.loc 1 395 25 view .LVU299
 1128              	.LBB79:
 397:Core/Src/main.c ****  }
 1129              		.loc 1 397 6 view .LVU300
 397:Core/Src/main.c ****  }
 1130              		.loc 1 397 16 is_stmt 0 view .LVU301
 1131 0100 6B68     		ldr	r3, [r5, #4]
 1132              	.LBE79:
 1133              	.LBE78:
 153:Core/Src/main.c **** 
 1134              		.loc 1 153 5 is_stmt 1 view .LVU302
 1135              	.LVL102:
 156:Core/Src/main.c **** 
 1136              		.loc 1 156 4 view .LVU303
 156:Core/Src/main.c **** 
 1137              		.loc 1 156 30 is_stmt 0 view .LVU304
 1138 0102 D8F80050 		ldr	r5, [r8]
 1139 0106 D8F80430 		ldr	r3, [r8, #4]
 1140 010a 7D1B     		subs	r5, r7, r5
 1141 010c 63EB4307 		sbc	r7, r3, r3, lsl #1
 156:Core/Src/main.c **** 
 1142              		.loc 1 156 19 view .LVU305
 1143 0110 2F4B     		ldr	r3, .L49+44
 1144 0112 1D60     		str	r5, [r3]
 1145 0114 5F60     		str	r7, [r3, #4]
 158:Core/Src/main.c **** 
 1146              		.loc 1 158 4 is_stmt 1 view .LVU306
 158:Core/Src/main.c **** 
 1147              		.loc 1 158 17 is_stmt 0 view .LVU307
 1148 0116 0BFB0AF0 		mul	r0, fp, r10
 1149              	.LVL103:
 158:Core/Src/main.c **** 
 1150              		.loc 1 158 17 view .LVU308
 1151 011a FFF7FEFF 		bl	__aeabi_ui2d
 1152              	.LVL104:
 158:Core/Src/main.c **** 
 1153              		.loc 1 158 17 view .LVU309
 1154 011e 8246     		mov	r10, r0
 1155              	.LVL105:
 158:Core/Src/main.c **** 
 1156              		.loc 1 158 17 view .LVU310
 1157 0120 8B46     		mov	fp, r1
 158:Core/Src/main.c **** 
 1158              		.loc 1 158 35 view .LVU311
 1159 0122 2846     		mov	r0, r5
 1160 0124 3946     		mov	r1, r7
 1161 0126 FFF7FEFF 		bl	__aeabi_ul2d
 1162              	.LVL106:
 158:Core/Src/main.c **** 
 1163              		.loc 1 158 58 view .LVU312
 1164 012a 0022     		movs	r2, #0
 1165 012c 294B     		ldr	r3, .L49+48
 1166 012e FFF7FEFF 		bl	__aeabi_ddiv
 1167              	.LVL107:
ARM GAS  C:\Users\maari\AppData\Local\Temp\cchtTB9G.s 			page 50


 1168 0132 0246     		mov	r2, r0
 1169 0134 0B46     		mov	r3, r1
 158:Core/Src/main.c **** 
 1170              		.loc 1 158 32 view .LVU313
 1171 0136 5046     		mov	r0, r10
 1172 0138 5946     		mov	r1, fp
 1173 013a FFF7FEFF 		bl	__aeabi_ddiv
 1174              	.LVL108:
 158:Core/Src/main.c **** 
 1175              		.loc 1 158 15 view .LVU314
 1176 013e 264B     		ldr	r3, .L49+52
 1177 0140 C3E90001 		strd	r0, [r3]
 162:Core/Src/main.c **** 
 1178              		.loc 1 162 4 is_stmt 1 view .LVU315
 1179 0144 4A46     		mov	r2, r9
 1180 0146 0221     		movs	r1, #2
 1181 0148 3046     		mov	r0, r6
 1182 014a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1183              	.LVL109:
 165:Core/Src/main.c **** 
 1184              		.loc 1 165 4 view .LVU316
 1185 014e 4FF47A70 		mov	r0, #1000
 1186 0152 FFF7FEFF 		bl	HAL_Delay
 1187              	.LVL110:
 168:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 1188              		.loc 1 168 5 view .LVU317
 1189 0156 2246     		mov	r2, r4
 1190 0158 4946     		mov	r1, r9
 1191 015a 3046     		mov	r0, r6
 1192 015c FFF7FEFF 		bl	HAL_GPIO_WritePin
 1193              	.LVL111:
 169:Core/Src/main.c **** 
 1194              		.loc 1 169 5 view .LVU318
 1195 0160 2246     		mov	r2, r4
 1196 0162 0221     		movs	r1, #2
 1197 0164 3046     		mov	r0, r6
 1198 0166 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1199              	.LVL112:
 181:Core/Src/main.c **** 
 1200              		.loc 1 181 4 is_stmt 0 view .LVU319
 1201 016a 3446     		mov	r4, r6
 1202 016c 4D46     		mov	r5, r9
 188:Core/Src/main.c **** 
 1203              		.loc 1 188 4 view .LVU320
 1204 016e 0226     		movs	r6, #2
 1205              	.L47:
 175:Core/Src/main.c ****   {
 1206              		.loc 1 175 3 is_stmt 1 view .LVU321
 181:Core/Src/main.c **** 
 1207              		.loc 1 181 4 view .LVU322
 1208 0170 2A46     		mov	r2, r5
 1209 0172 2946     		mov	r1, r5
 1210 0174 2046     		mov	r0, r4
 1211 0176 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1212              	.LVL113:
 188:Core/Src/main.c **** 
 1213              		.loc 1 188 4 view .LVU323
ARM GAS  C:\Users\maari\AppData\Local\Temp\cchtTB9G.s 			page 51


 1214 017a 2A46     		mov	r2, r5
 1215 017c 3146     		mov	r1, r6
 1216 017e 2046     		mov	r0, r4
 1217 0180 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1218              	.LVL114:
 192:Core/Src/main.c **** 
 1219              		.loc 1 192 4 view .LVU324
 1220 0184 4FF47A70 		mov	r0, #1000
 1221 0188 FFF7FEFF 		bl	HAL_Delay
 1222              	.LVL115:
 195:Core/Src/main.c **** 	  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 1223              		.loc 1 195 4 view .LVU325
 1224 018c 0022     		movs	r2, #0
 1225 018e 2946     		mov	r1, r5
 1226 0190 2046     		mov	r0, r4
 1227 0192 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1228              	.LVL116:
 196:Core/Src/main.c ****   }
 1229              		.loc 1 196 4 discriminator 1 view .LVU326
 1230 0196 0022     		movs	r2, #0
 1231 0198 3146     		mov	r1, r6
 1232 019a 2046     		mov	r0, r4
 1233 019c FFF7FEFF 		bl	HAL_GPIO_WritePin
 1234              	.LVL117:
 175:Core/Src/main.c ****   {
 1235              		.loc 1 175 9 view .LVU327
 1236 01a0 E6E7     		b	.L47
 1237              	.L50:
 1238 01a2 00BF     		.align	2
 1239              	.L49:
 1240 01a4 00380240 		.word	1073887232
 1241 01a8 00040240 		.word	1073873920
 1242 01ac 00ED00E0 		.word	-536810240
 1243 01b0 001000E0 		.word	-536866816
 1244 01b4 00000000 		.word	start_time
 1245 01b8 00000000 		.word	initial_height
 1246 01bc 00000000 		.word	initial_width
 1247 01c0 00000000 		.word	checksum
 1248 01c4 00000000 		.word	end_time
 1249 01c8 00000000 		.word	SystemCoreClock
 1250 01cc 00000000 		.word	time_sec
 1251 01d0 00000000 		.word	execution_time
 1252 01d4 00408F40 		.word	1083129856
 1253 01d8 00000000 		.word	throughput
 1254              		.cfi_endproc
 1255              	.LFE137:
 1257              		.section	.text.Error_Handler,"ax",%progbits
 1258              		.align	1
 1259              		.global	Error_Handler
 1260              		.syntax unified
 1261              		.thumb
 1262              		.thumb_func
 1264              	Error_Handler:
 1265              	.LFB145:
 412:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 1266              		.loc 1 412 1 view -0
 1267              		.cfi_startproc
ARM GAS  C:\Users\maari\AppData\Local\Temp\cchtTB9G.s 			page 52


 1268              		@ Volatile: function does not return.
 1269              		@ args = 0, pretend = 0, frame = 0
 1270              		@ frame_needed = 0, uses_anonymous_args = 0
 1271              		@ link register save eliminated.
 415:Core/Src/main.c ****   while (1)
 1272              		.loc 1 415 3 view .LVU329
 1273              	.LBB80:
 1274              	.LBI80:
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1275              		.loc 2 960 27 view .LVU330
 1276              	.LBB81:
 1277              		.loc 2 962 3 view .LVU331
 1278              		.syntax unified
 1279              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1280 0000 72B6     		cpsid i
 1281              	@ 0 "" 2
 1282              		.thumb
 1283              		.syntax unified
 1284              	.L52:
 1285              	.LBE81:
 1286              	.LBE80:
 416:Core/Src/main.c ****   {
 1287              		.loc 1 416 3 view .LVU332
 1288              		.loc 1 418 3 view .LVU333
 416:Core/Src/main.c ****   {
 1289              		.loc 1 416 9 view .LVU334
 1290 0002 FEE7     		b	.L52
 1291              		.cfi_endproc
 1292              	.LFE145:
 1294              		.global	throughput
 1295              		.section	.bss.throughput,"aw",%nobits
 1296              		.align	3
 1299              	throughput:
 1300 0000 00000000 		.space	8
 1300      00000000 
 1301              		.global	cycles
 1302              		.section	.bss.cycles,"aw",%nobits
 1303              		.align	3
 1306              	cycles:
 1307 0000 00000000 		.space	8
 1307      00000000 
 1308              		.global	time_sec
 1309              		.section	.bss.time_sec,"aw",%nobits
 1310              		.align	3
 1313              	time_sec:
 1314 0000 00000000 		.space	8
 1314      00000000 
 1315              		.global	initial_width
 1316              		.section	.data.initial_width,"aw"
 1317              		.align	2
 1320              	initial_width:
 1321 0000 80000000 		.word	128
 1322              		.global	initial_height
 1323              		.section	.data.initial_height,"aw"
 1324              		.align	2
 1327              	initial_height:
 1328 0000 80000000 		.word	128
ARM GAS  C:\Users\maari\AppData\Local\Temp\cchtTB9G.s 			page 53


 1329              		.global	execution_time
 1330              		.section	.bss.execution_time,"aw",%nobits
 1331              		.align	3
 1334              	execution_time:
 1335 0000 00000000 		.space	8
 1335      00000000 
 1336              		.global	checksum
 1337              		.section	.bss.checksum,"aw",%nobits
 1338              		.align	3
 1341              	checksum:
 1342 0000 00000000 		.space	8
 1342      00000000 
 1343              		.global	imageDimensions
 1344              		.section	.data.imageDimensions,"aw"
 1345              		.align	2
 1348              	imageDimensions:
 1349 0000 80000000 		.word	128
 1350 0004 A0000000 		.word	160
 1351 0008 C0000000 		.word	192
 1352 000c E0000000 		.word	224
 1353 0010 00010000 		.word	256
 1354              		.global	end_time
 1355              		.section	.bss.end_time,"aw",%nobits
 1356              		.align	3
 1359              	end_time:
 1360 0000 00000000 		.space	8
 1360      00000000 
 1361              		.global	start_time
 1362              		.section	.bss.start_time,"aw",%nobits
 1363              		.align	3
 1366              	start_time:
 1367 0000 00000000 		.space	8
 1367      00000000 
 1368              		.text
 1369              	.Letext0:
 1370              		.file 3 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1371              		.file 4 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1372              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 1373              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 1374              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1375              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1376              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1377              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1378              		.file 11 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1379              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1380              		.file 13 "<built-in>"
ARM GAS  C:\Users\maari\AppData\Local\Temp\cchtTB9G.s 			page 54


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\maari\AppData\Local\Temp\cchtTB9G.s:19     .text.SystemClock_Config:00000000 $t
C:\Users\maari\AppData\Local\Temp\cchtTB9G.s:25     .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\maari\AppData\Local\Temp\cchtTB9G.s:218    .text.SystemClock_Config:000000a4 $d
C:\Users\maari\AppData\Local\Temp\cchtTB9G.s:226    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 $t
C:\Users\maari\AppData\Local\Temp\cchtTB9G.s:232    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 calculate_mandelbrot_fixed_point_arithmetic
C:\Users\maari\AppData\Local\Temp\cchtTB9G.s:524    .text.calculate_mandelbrot_fixed_point_arithmetic:00000128 $d
C:\Users\maari\AppData\Local\Temp\cchtTB9G.s:539    .text.calculate_mandelbrot_double:00000000 $t
C:\Users\maari\AppData\Local\Temp\cchtTB9G.s:545    .text.calculate_mandelbrot_double:00000000 calculate_mandelbrot_double
C:\Users\maari\AppData\Local\Temp\cchtTB9G.s:878    .text.calculate_mandelbrot_double:00000188 $d
C:\Users\maari\AppData\Local\Temp\cchtTB9G.s:1341   .bss.checksum:00000000 checksum
C:\Users\maari\AppData\Local\Temp\cchtTB9G.s:891    .text.main:00000000 $t
C:\Users\maari\AppData\Local\Temp\cchtTB9G.s:897    .text.main:00000000 main
C:\Users\maari\AppData\Local\Temp\cchtTB9G.s:1240   .text.main:000001a4 $d
C:\Users\maari\AppData\Local\Temp\cchtTB9G.s:1366   .bss.start_time:00000000 start_time
C:\Users\maari\AppData\Local\Temp\cchtTB9G.s:1327   .data.initial_height:00000000 initial_height
C:\Users\maari\AppData\Local\Temp\cchtTB9G.s:1320   .data.initial_width:00000000 initial_width
C:\Users\maari\AppData\Local\Temp\cchtTB9G.s:1359   .bss.end_time:00000000 end_time
C:\Users\maari\AppData\Local\Temp\cchtTB9G.s:1313   .bss.time_sec:00000000 time_sec
C:\Users\maari\AppData\Local\Temp\cchtTB9G.s:1334   .bss.execution_time:00000000 execution_time
C:\Users\maari\AppData\Local\Temp\cchtTB9G.s:1299   .bss.throughput:00000000 throughput
C:\Users\maari\AppData\Local\Temp\cchtTB9G.s:1258   .text.Error_Handler:00000000 $t
C:\Users\maari\AppData\Local\Temp\cchtTB9G.s:1264   .text.Error_Handler:00000000 Error_Handler
C:\Users\maari\AppData\Local\Temp\cchtTB9G.s:1296   .bss.throughput:00000000 $d
C:\Users\maari\AppData\Local\Temp\cchtTB9G.s:1306   .bss.cycles:00000000 cycles
C:\Users\maari\AppData\Local\Temp\cchtTB9G.s:1303   .bss.cycles:00000000 $d
C:\Users\maari\AppData\Local\Temp\cchtTB9G.s:1310   .bss.time_sec:00000000 $d
C:\Users\maari\AppData\Local\Temp\cchtTB9G.s:1317   .data.initial_width:00000000 $d
C:\Users\maari\AppData\Local\Temp\cchtTB9G.s:1324   .data.initial_height:00000000 $d
C:\Users\maari\AppData\Local\Temp\cchtTB9G.s:1331   .bss.execution_time:00000000 $d
C:\Users\maari\AppData\Local\Temp\cchtTB9G.s:1338   .bss.checksum:00000000 $d
C:\Users\maari\AppData\Local\Temp\cchtTB9G.s:1348   .data.imageDimensions:00000000 imageDimensions
C:\Users\maari\AppData\Local\Temp\cchtTB9G.s:1345   .data.imageDimensions:00000000 $d
C:\Users\maari\AppData\Local\Temp\cchtTB9G.s:1356   .bss.end_time:00000000 $d
C:\Users\maari\AppData\Local\Temp\cchtTB9G.s:1363   .bss.start_time:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
__aeabi_ldivmod
__aeabi_i2d
__aeabi_ddiv
__aeabi_dadd
__aeabi_dsub
__aeabi_dmul
__aeabi_dcmpgt
__aeabi_ui2d
__aeabi_ul2d
HAL_GetTick
HAL_Init
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_Delay
SystemCoreClock
